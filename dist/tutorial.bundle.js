/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _regeneratorRuntime = __webpack_require__(7)[\"default\"];\n\nvar _interopRequire = __webpack_require__(8)[\"default\"];\n\nvar tutorial = _regeneratorRuntime.mark(function tutorial() {\n  return _regeneratorRuntime.wrap(function tutorial$(context$1$0) {\n    while (1) switch (context$1$0.prev = context$1$0.next) {\n      case 0:\n        U.start(30);\n        context$1$0.next = 3;\n        return true;\n\n      case 3:\n\n        // Copy metronome stream\n        b[0].plug(m);\n        context$1$0.next = 6;\n        return true;\n\n      case 6:\n\n        b[1].plug(b[0]\n        // take only one event\n        .first()\n        // move event by 8th note\n        .flatMap(U.time.delay(\"8n\"))\n        // play note 0 + 2\n        .map(U.note.add, 2));\n\n        b[2].plug(b[1]\n        // delay by 8th note\n        .flatMap(U.time.delay(\"8n\"))\n        // cycle between:\n        //   note + 2\n        //   note - 2\n        .map(U.cycle(U.note.add, 2, -2)));\n\n        b[1].plug(b[2].flatMap(U.time.delay(\"8n\"))\n        // cycle between:\n        //   note - 2\n        //   note + 2\n        .map(U.cycle(U.note.add, 2, -2)));\n\n        context$1$0.next = 11;\n        return true;\n\n      case 11:\n\n        v[0].plug(\n        // merge all buses into one\n        Bacon.mergeAll(b));\n\n        context$1$0.next = 14;\n        return true;\n\n      case 14:\n\n        v[1].plug(v[0].flatMap(U.time.delay(\"16n\"))\n        // up one octave\n        .map(U.note.add, 12)\n        // make a chord\n        .flatMap(U.stack(U.note.add, 2, 4))\n        // randomize the amplitude\n        .map(U.random(U.vel.set, 0.4, 0.6, 0.8)));\n        context$1$0.next = 17;\n        return true;\n\n      case 17:\n      case \"end\":\n        return context$1$0.stop();\n    }\n  }, tutorial, this);\n});\n\nvar Bacon = _interopRequire(__webpack_require__(14));\n\nvar Tone = _interopRequire(__webpack_require__(15));\n\nvar React = _interopRequire(__webpack_require__(5));\n\nvar _RM = __webpack_require__(2);\n\nvar Metronome = _RM.Metronome;\nvar Synth = _RM.Synth;\nvar Voice = _RM.Voice;\nvar Utils = _RM.Utils;\n\nvar Visualizer = _interopRequire(__webpack_require__(1));\n\nvar Synth1 = _interopRequire(__webpack_require__(3));\n\nvar Synth2 = _interopRequire(__webpack_require__(4));\n\nvar U = Utils;\n\nvar m = new Metronome();\nvar b = U.bus.pool(3);\nvar v = [new Voice({\n  scale: \"major\",\n  synth: new Synth2()\n}), new Voice({\n  scale: \"major\",\n  synth: new Synth1()\n})];\n\nReact.render(React.createElement(Visualizer, { tutorial: tutorial, metronome: [m], buses: b, voices: v }), document.body);\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tutorial.js\n ** module id = 0\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./tutorial.js?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _classCallCheck = __webpack_require__(9)[\"default\"];\n\nvar _inherits = __webpack_require__(10)[\"default\"];\n\nvar _get = __webpack_require__(11)[\"default\"];\n\nvar _createClass = __webpack_require__(12)[\"default\"];\n\nvar _core = __webpack_require__(13)[\"default\"];\n\nvar _interopRequire = __webpack_require__(8)[\"default\"];\n\nvar Bacon = _interopRequire(__webpack_require__(14));\n\nvar React = _interopRequire(__webpack_require__(6));\n\nvar Please = _interopRequire(__webpack_require__(22));\n\nvar DOT_WIDTH = 30;\nvar MAX_DOT_HEIGHT = 70;\nvar DOT_HEIGHT = 30;\n\nvar Visualizer = (function (_React$Component) {\n  function Visualizer(props) {\n    _classCallCheck(this, Visualizer);\n\n    _get(_core.Object.getPrototypeOf(Visualizer.prototype), \"constructor\", this).call(this, props);\n    this.dots = [];\n    this.tutorial = props.tutorial();\n  }\n\n  _inherits(Visualizer, _React$Component);\n\n  _createClass(Visualizer, {\n    shouldComponentUpdate: {\n      value: function shouldComponentUpdate() {\n        return false;\n      }\n    },\n    componentDidMount: {\n      value: function componentDidMount() {\n        var _this = this;\n\n        var _props = this.props;\n        var metronome = _props.metronome;\n        var buses = _props.buses;\n        var voices = _props.voices;\n\n        var total = 1 + buses.length + voices.length;\n\n        var c1 = \"rgb(174,174,174)\";\n        var colors = [c1];\n\n        var c2 = \"rgb(0,0,0)\";\n        buses.forEach(function () {\n          colors.push(c2);\n        });\n\n        voices.forEach(function () {\n          colors.push(Please.make_color({ format: \"rgb-string\" })[0]);\n        });\n\n        metronome.concat(buses, voices).forEach(function (x, i) {\n          var y = 20 + i * (window.innerHeight / total);\n\n          x.onValue(_this.handleValue(colors[i], y).bind(_this));\n        });\n\n        var draw = this.draw.bind(this);\n\n        window.requestAnimationFrame(function raf() {\n          draw();\n          window.requestAnimationFrame(raf);\n        });\n\n        var canvas = this.refs.canvas.getDOMNode();\n        canvas.width = window.innerWidth / 2;\n        canvas.height = window.innerHeight;\n      }\n    },\n    draw: {\n      value: function draw() {\n        var canvas = this.refs.canvas.getDOMNode();\n        var context = canvas.getContext(\"2d\");\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        this.dots.forEach(function (dot) {\n          context.beginPath();\n\n          context.rect(dot.x, dot.y - dot.extraHeight / 2, DOT_WIDTH, DOT_HEIGHT + dot.extraHeight);\n          context.fillStyle = dot.color.replace(\")\", \", \" + dot.life + \")\").replace(\"rgb\", \"rgba\");\n          context.fill();\n\n          context.font = \"18px sans-serif\";\n          context.textAlign = \"center\";\n          context.fillStyle = \"#fff\";\n          context.fillText(dot.value, dot.x + DOT_WIDTH / 2, dot.y + 6 + DOT_HEIGHT / 2);\n\n          dot.life = Math.max(dot.life - 0.005, 0.05);\n          dot.extraHeight = Math.max(dot.extraHeight - 1, 0);\n          dot.x--;\n        });\n      }\n    },\n    handleValue: {\n      value: function handleValue(color, y) {\n        var _this = this;\n\n        var canvas = this.refs.canvas.getDOMNode();\n\n        return function (note) {\n          _this.dots.push({ value: note.note, life: 1, extraHeight: MAX_DOT_HEIGHT - DOT_HEIGHT, x: canvas.width - 1, y: y, color: color });\n          _this.dots = _this.dots.filter(function (val) {\n            return val.x > 0 && val.life > 0;\n          });\n        };\n      }\n    },\n    handleClick: {\n      value: function handleClick() {\n        console.log(\"click\");\n        this.tutorial.next();\n      }\n    },\n    render: {\n      value: function render() {\n        return React.createElement(\n          \"div\",\n          null,\n          React.createElement(\"canvas\", { onClick: this.handleClick.bind(this), ref: \"canvas\", style: { display: \"block\", margin: \"0 auto\" } })\n        );\n      }\n    }\n  });\n\n  return Visualizer;\n})(React.Component);\n\nmodule.exports = Visualizer;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Visualizer.js\n ** module id = 1\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///./Visualizer.js?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _interopRequire = __webpack_require__(8)[\"default\"];\n\nvar Utils = _interopRequire(__webpack_require__(16));\n\nvar Metronome = _interopRequire(__webpack_require__(17));\n\nvar Voice = _interopRequire(__webpack_require__(18));\n\nmodule.exports = {\n  Utils: Utils, Metronome: Metronome, Voice: Voice\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/index.js\n ** module id = 2\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../src/index.js?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _interopRequire = __webpack_require__(8)[\"default\"];\n\nvar Tone = _interopRequire(__webpack_require__(15));\n\nmodule.exports = function () {\n  var s = new Tone.PolySynth(6, Tone.DuoSynth);\n  s.set({\n    vibratoAmount: 0.2,\n    vibratoRate: 5,\n    harmonicity: 1,\n    voice0: {\n      oscillator: {\n        type: \"sine\"\n      },\n      envelope: {\n        release: 1\n      },\n      filter: {\n        type: \"lowpass\"\n      },\n      filterEnvelope: {\n        min: 20000,\n        max: 20000\n      }\n    },\n    voice1: {\n      oscillator: {\n        type: \"sine\"\n      },\n      envelope: {\n        release: 1\n      },\n      filter: {\n        type: \"lowpass\"\n      },\n      filterEnvelope: {\n        min: 20000,\n        max: 20000\n      }\n    }\n  });\n\n  s.toMaster();\n  return s;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./synths/a.js\n ** module id = 3\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///./synths/a.js?");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _interopRequire = __webpack_require__(8)[\"default\"];\n\nvar Tone = _interopRequire(__webpack_require__(15));\n\nmodule.exports = function () {\n  var s = new Tone.PolySynth(12, Tone.MonoSynth);\n  s.set({\n    oscillator: {\n      type: \"triangle\"\n    },\n    filterEnvelope: {\n      min: 20000,\n      max: 20000\n    }\n  });\n\n  s.toMaster();\n  return s;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./synths/b.js\n ** module id = 4\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///./synths/b.js?");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__(20);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/react.js\n ** module id = 5\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/react.js?");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__(21);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/addons.js\n ** module id = 6\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/addons.js?");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window : this;\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar hadRuntime = hasOwn.call(g, \"regeneratorRuntime\");\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\ndelete g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\nmodule.exports = __webpack_require__(19);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  delete g.regeneratorRuntime;\n}\n\nmodule.exports = { \"default\": module.exports, __esModule: true };\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/babel-runtime/regenerator/index.js\n ** module id = 7\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///../~/babel-runtime/regenerator/index.js?");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nexports[\"default\"] = function (obj) {\n  return obj && obj.__esModule ? obj[\"default\"] : obj;\n};\n\nexports.__esModule = true;\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/babel-runtime/helpers/interop-require.js\n ** module id = 8\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/babel-runtime/helpers/interop-require.js?");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nexports[\"default\"] = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nexports.__esModule = true;\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/babel-runtime/helpers/class-call-check.js\n ** module id = 9\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/babel-runtime/helpers/class-call-check.js?");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nexports[\"default\"] = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) subClass.__proto__ = superClass;\n};\n\nexports.__esModule = true;\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/babel-runtime/helpers/inherits.js\n ** module id = 10\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/babel-runtime/helpers/inherits.js?");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _core = __webpack_require__(13)[\"default\"];\n\nexports[\"default\"] = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    desc = parent = getter = undefined;\n\n    var desc = _core.Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = _core.Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        continue _function;\n      }\n    } else if (\"value\" in desc && desc.writable) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nexports.__esModule = true;\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/babel-runtime/helpers/get.js\n ** module id = 11\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/babel-runtime/helpers/get.js?");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nexports[\"default\"] = (function () {\n  function defineProperties(target, props) {\n    for (var key in props) {\n      var prop = props[key];\n      prop.configurable = true;\n      if (prop.value) prop.writable = true;\n    }\n\n    Object.defineProperties(target, props);\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n})();\n\nexports.__esModule = true;\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/babel-runtime/helpers/create-class.js\n ** module id = 12\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/babel-runtime/helpers/create-class.js?");

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Core.js 0.6.1\n * https://github.com/zloirock/core-js\n * License: http://rock.mit-license.org\n * © 2015 Denis Pushkarev\n */\n!function(global, framework, undefined){\n'use strict';\n\n/******************************************************************************\n * Module : common                                                            *\n ******************************************************************************/\n\n  // Shortcuts for [[Class]] & property names\r\nvar OBJECT          = 'Object'\r\n  , FUNCTION        = 'Function'\r\n  , ARRAY           = 'Array'\r\n  , STRING          = 'String'\r\n  , NUMBER          = 'Number'\r\n  , REGEXP          = 'RegExp'\r\n  , DATE            = 'Date'\r\n  , MAP             = 'Map'\r\n  , SET             = 'Set'\r\n  , WEAKMAP         = 'WeakMap'\r\n  , WEAKSET         = 'WeakSet'\r\n  , SYMBOL          = 'Symbol'\r\n  , PROMISE         = 'Promise'\r\n  , MATH            = 'Math'\r\n  , ARGUMENTS       = 'Arguments'\r\n  , PROTOTYPE       = 'prototype'\r\n  , CONSTRUCTOR     = 'constructor'\r\n  , TO_STRING       = 'toString'\r\n  , TO_STRING_TAG   = TO_STRING + 'Tag'\r\n  , TO_LOCALE       = 'toLocaleString'\r\n  , HAS_OWN         = 'hasOwnProperty'\r\n  , FOR_EACH        = 'forEach'\r\n  , ITERATOR        = 'iterator'\r\n  , FF_ITERATOR     = '@@' + ITERATOR\r\n  , PROCESS         = 'process'\r\n  , CREATE_ELEMENT  = 'createElement'\r\n  // Aliases global objects and prototypes\r\n  , Function        = global[FUNCTION]\r\n  , Object          = global[OBJECT]\r\n  , Array           = global[ARRAY]\r\n  , String          = global[STRING]\r\n  , Number          = global[NUMBER]\r\n  , RegExp          = global[REGEXP]\r\n  , Date            = global[DATE]\r\n  , Map             = global[MAP]\r\n  , Set             = global[SET]\r\n  , WeakMap         = global[WEAKMAP]\r\n  , WeakSet         = global[WEAKSET]\r\n  , Symbol          = global[SYMBOL]\r\n  , Math            = global[MATH]\r\n  , TypeError       = global.TypeError\r\n  , RangeError      = global.RangeError\r\n  , setTimeout      = global.setTimeout\r\n  , setImmediate    = global.setImmediate\r\n  , clearImmediate  = global.clearImmediate\r\n  , parseInt        = global.parseInt\r\n  , isFinite        = global.isFinite\r\n  , process         = global[PROCESS]\r\n  , nextTick        = process && process.nextTick\r\n  , document        = global.document\r\n  , html            = document && document.documentElement\r\n  , navigator       = global.navigator\r\n  , define          = global.define\r\n  , console         = global.console || {}\r\n  , ArrayProto      = Array[PROTOTYPE]\r\n  , ObjectProto     = Object[PROTOTYPE]\r\n  , FunctionProto   = Function[PROTOTYPE]\r\n  , Infinity        = 1 / 0\r\n  , DOT             = '.';\r\n\r\n// http://jsperf.com/core-js-isobject\r\nfunction isObject(it){\r\n  return it !== null && (typeof it == 'object' || typeof it == 'function');\r\n}\r\nfunction isFunction(it){\r\n  return typeof it == 'function';\r\n}\r\n// Native function?\r\nvar isNative = ctx(/./.test, /\\[native code\\]\\s*\\}\\s*$/, 1);\r\n\r\n// Object internal [[Class]] or toStringTag\r\n// http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring\r\nvar toString = ObjectProto[TO_STRING];\r\nfunction setToStringTag(it, tag, stat){\r\n  if(it && !has(it = stat ? it : it[PROTOTYPE], SYMBOL_TAG))hidden(it, SYMBOL_TAG, tag);\r\n}\r\nfunction cof(it){\r\n  return toString.call(it).slice(8, -1);\r\n}\r\nfunction classof(it){\r\n  var O, T;\r\n  return it == undefined ? it === undefined ? 'Undefined' : 'Null'\r\n    : typeof (T = (O = Object(it))[SYMBOL_TAG]) == 'string' ? T : cof(O);\r\n}\r\n\r\n// Function\r\nvar call  = FunctionProto.call\r\n  , apply = FunctionProto.apply\r\n  , REFERENCE_GET;\r\n// Partial apply\r\nfunction part(/* ...args */){\r\n  var fn     = assertFunction(this)\r\n    , length = arguments.length\r\n    , args   = Array(length)\r\n    , i      = 0\r\n    , _      = path._\r\n    , holder = false;\r\n  while(length > i)if((args[i] = arguments[i++]) === _)holder = true;\r\n  return function(/* ...args */){\r\n    var that    = this\r\n      , _length = arguments.length\r\n      , i = 0, j = 0, _args;\r\n    if(!holder && !_length)return invoke(fn, args, that);\r\n    _args = args.slice();\r\n    if(holder)for(;length > i; i++)if(_args[i] === _)_args[i] = arguments[j++];\r\n    while(_length > j)_args.push(arguments[j++]);\r\n    return invoke(fn, _args, that);\r\n  }\r\n}\r\n// Optional / simple context binding\r\nfunction ctx(fn, that, length){\r\n  assertFunction(fn);\r\n  if(~length && that === undefined)return fn;\r\n  switch(length){\r\n    case 1: return function(a){\r\n      return fn.call(that, a);\r\n    }\r\n    case 2: return function(a, b){\r\n      return fn.call(that, a, b);\r\n    }\r\n    case 3: return function(a, b, c){\r\n      return fn.call(that, a, b, c);\r\n    }\r\n  } return function(/* ...args */){\r\n      return fn.apply(that, arguments);\r\n  }\r\n}\r\n// Fast apply\r\n// http://jsperf.lnkit.com/fast-apply/5\r\nfunction invoke(fn, args, that){\r\n  var un = that === undefined;\r\n  switch(args.length | 0){\r\n    case 0: return un ? fn()\r\n                      : fn.call(that);\r\n    case 1: return un ? fn(args[0])\r\n                      : fn.call(that, args[0]);\r\n    case 2: return un ? fn(args[0], args[1])\r\n                      : fn.call(that, args[0], args[1]);\r\n    case 3: return un ? fn(args[0], args[1], args[2])\r\n                      : fn.call(that, args[0], args[1], args[2]);\r\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\r\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\r\n    case 5: return un ? fn(args[0], args[1], args[2], args[3], args[4])\r\n                      : fn.call(that, args[0], args[1], args[2], args[3], args[4]);\r\n  } return              fn.apply(that, args);\r\n}\r\n\r\n// Object:\r\nvar create           = Object.create\r\n  , getPrototypeOf   = Object.getPrototypeOf\r\n  , setPrototypeOf   = Object.setPrototypeOf\r\n  , defineProperty   = Object.defineProperty\r\n  , defineProperties = Object.defineProperties\r\n  , getOwnDescriptor = Object.getOwnPropertyDescriptor\r\n  , getKeys          = Object.keys\r\n  , getNames         = Object.getOwnPropertyNames\r\n  , getSymbols       = Object.getOwnPropertySymbols\r\n  , isFrozen         = Object.isFrozen\r\n  , has              = ctx(call, ObjectProto[HAS_OWN], 2)\r\n  // Dummy, fix for not array-like ES3 string in es5 module\r\n  , ES5Object        = Object\r\n  , Dict;\r\nfunction toObject(it){\r\n  return ES5Object(assertDefined(it));\r\n}\r\nfunction returnIt(it){\r\n  return it;\r\n}\r\nfunction returnThis(){\r\n  return this;\r\n}\r\nfunction get(object, key){\r\n  if(has(object, key))return object[key];\r\n}\r\nfunction ownKeys(it){\r\n  assertObject(it);\r\n  return getSymbols ? getNames(it).concat(getSymbols(it)) : getNames(it);\r\n}\r\n// 19.1.2.1 Object.assign(target, source, ...)\r\nvar assign = Object.assign || function(target, source){\r\n  var T = Object(assertDefined(target))\r\n    , l = arguments.length\r\n    , i = 1;\r\n  while(l > i){\r\n    var S      = ES5Object(arguments[i++])\r\n      , keys   = getKeys(S)\r\n      , length = keys.length\r\n      , j      = 0\r\n      , key;\r\n    while(length > j)T[key = keys[j++]] = S[key];\r\n  }\r\n  return T;\r\n}\r\nfunction keyOf(object, el){\r\n  var O      = toObject(object)\r\n    , keys   = getKeys(O)\r\n    , length = keys.length\r\n    , index  = 0\r\n    , key;\r\n  while(length > index)if(O[key = keys[index++]] === el)return key;\r\n}\r\n\r\n// Array\r\n// array('str1,str2,str3') => ['str1', 'str2', 'str3']\r\nfunction array(it){\r\n  return String(it).split(',');\r\n}\r\nvar push    = ArrayProto.push\r\n  , unshift = ArrayProto.unshift\r\n  , slice   = ArrayProto.slice\r\n  , splice  = ArrayProto.splice\r\n  , indexOf = ArrayProto.indexOf\r\n  , forEach = ArrayProto[FOR_EACH];\r\n/*\r\n * 0 -> forEach\r\n * 1 -> map\r\n * 2 -> filter\r\n * 3 -> some\r\n * 4 -> every\r\n * 5 -> find\r\n * 6 -> findIndex\r\n */\r\nfunction createArrayMethod(type){\r\n  var isMap       = type == 1\r\n    , isFilter    = type == 2\r\n    , isSome      = type == 3\r\n    , isEvery     = type == 4\r\n    , isFindIndex = type == 6\r\n    , noholes     = type == 5 || isFindIndex;\r\n  return function(callbackfn/*, that = undefined */){\r\n    var O      = Object(assertDefined(this))\r\n      , that   = arguments[1]\r\n      , self   = ES5Object(O)\r\n      , f      = ctx(callbackfn, that, 3)\r\n      , length = toLength(self.length)\r\n      , index  = 0\r\n      , result = isMap ? Array(length) : isFilter ? [] : undefined\r\n      , val, res;\r\n    for(;length > index; index++)if(noholes || index in self){\r\n      val = self[index];\r\n      res = f(val, index, O);\r\n      if(type){\r\n        if(isMap)result[index] = res;             // map\r\n        else if(res)switch(type){\r\n          case 3: return true;                    // some\r\n          case 5: return val;                     // find\r\n          case 6: return index;                   // findIndex\r\n          case 2: result.push(val);               // filter\r\n        } else if(isEvery)return false;           // every\r\n      }\r\n    }\r\n    return isFindIndex ? -1 : isSome || isEvery ? isEvery : result;\r\n  }\r\n}\r\nfunction createArrayContains(isContains){\r\n  return function(el /*, fromIndex = 0 */){\r\n    var O      = toObject(this)\r\n      , length = toLength(O.length)\r\n      , index  = toIndex(arguments[1], length);\r\n    if(isContains && el != el){\r\n      for(;length > index; index++)if(sameNaN(O[index]))return isContains || index;\r\n    } else for(;length > index; index++)if(isContains || index in O){\r\n      if(O[index] === el)return isContains || index;\r\n    } return !isContains && -1;\r\n  }\r\n}\r\nfunction generic(A, B){\r\n  // strange IE quirks mode bug -> use typeof vs isFunction\r\n  return typeof A == 'function' ? A : B;\r\n}\r\n\r\n// Math\r\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff // pow(2, 53) - 1 == 9007199254740991\r\n  , pow    = Math.pow\r\n  , abs    = Math.abs\r\n  , ceil   = Math.ceil\r\n  , floor  = Math.floor\r\n  , max    = Math.max\r\n  , min    = Math.min\r\n  , random = Math.random\r\n  , trunc  = Math.trunc || function(it){\r\n      return (it > 0 ? floor : ceil)(it);\r\n    }\r\n// 20.1.2.4 Number.isNaN(number)\r\nfunction sameNaN(number){\r\n  return number != number;\r\n}\r\n// 7.1.4 ToInteger\r\nfunction toInteger(it){\r\n  return isNaN(it) ? 0 : trunc(it);\r\n}\r\n// 7.1.15 ToLength\r\nfunction toLength(it){\r\n  return it > 0 ? min(toInteger(it), MAX_SAFE_INTEGER) : 0;\r\n}\r\nfunction toIndex(index, length){\r\n  var index = toInteger(index);\r\n  return index < 0 ? max(index + length, 0) : min(index, length);\r\n}\r\nfunction lz(num){\r\n  return num > 9 ? num : '0' + num;\r\n}\r\n\r\nfunction createReplacer(regExp, replace, isStatic){\r\n  var replacer = isObject(replace) ? function(part){\r\n    return replace[part];\r\n  } : replace;\r\n  return function(it){\r\n    return String(isStatic ? it : this).replace(regExp, replacer);\r\n  }\r\n}\r\nfunction createPointAt(toString){\r\n  return function(pos){\r\n    var s = String(assertDefined(this))\r\n      , i = toInteger(pos)\r\n      , l = s.length\r\n      , a, b;\r\n    if(i < 0 || i >= l)return toString ? '' : undefined;\r\n    a = s.charCodeAt(i);\r\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\r\n      ? toString ? s.charAt(i) : a\r\n      : toString ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\r\n  }\r\n}\r\n\r\n// Assertion & errors\r\nvar REDUCE_ERROR = 'Reduce of empty object with no initial value';\r\nfunction assert(condition, msg1, msg2){\r\n  if(!condition)throw TypeError(msg2 ? msg1 + msg2 : msg1);\r\n}\r\nfunction assertDefined(it){\r\n  if(it == undefined)throw TypeError('Function called on null or undefined');\r\n  return it;\r\n}\r\nfunction assertFunction(it){\r\n  assert(isFunction(it), it, ' is not a function!');\r\n  return it;\r\n}\r\nfunction assertObject(it){\r\n  assert(isObject(it), it, ' is not an object!');\r\n  return it;\r\n}\r\nfunction assertInstance(it, Constructor, name){\r\n  assert(it instanceof Constructor, name, \": use the 'new' operator!\");\r\n}\r\n\r\n// Property descriptors & Symbol\r\nfunction descriptor(bitmap, value){\r\n  return {\r\n    enumerable  : !(bitmap & 1),\r\n    configurable: !(bitmap & 2),\r\n    writable    : !(bitmap & 4),\r\n    value       : value\r\n  }\r\n}\r\nfunction simpleSet(object, key, value){\r\n  object[key] = value;\r\n  return object;\r\n}\r\nfunction createDefiner(bitmap){\r\n  return DESC ? function(object, key, value){\r\n    return defineProperty(object, key, descriptor(bitmap, value));\r\n  } : simpleSet;\r\n}\r\nfunction uid(key){\r\n  return SYMBOL + '(' + key + ')_' + (++sid + random())[TO_STRING](36);\r\n}\r\nfunction getWellKnownSymbol(name, setter){\r\n  return (Symbol && Symbol[name]) || (setter ? Symbol : safeSymbol)(SYMBOL + DOT + name);\r\n}\r\n// The engine works fine with descriptors? Thank's IE8 for his funny defineProperty.\r\nvar DESC = !!function(){\r\n      try {\r\n        return defineProperty({}, 'a', {get: function(){ return 2 }}).a == 2;\r\n      } catch(e){}\r\n    }()\r\n  , sid    = 0\r\n  , hidden = createDefiner(1)\r\n  , set    = Symbol ? simpleSet : hidden\r\n  , safeSymbol = Symbol || uid;\r\nfunction assignHidden(target, src){\r\n  for(var key in src)hidden(target, key, src[key]);\r\n  return target;\r\n}\r\n\r\nvar SYMBOL_UNSCOPABLES = getWellKnownSymbol('unscopables')\r\n  , ArrayUnscopables   = ArrayProto[SYMBOL_UNSCOPABLES] || {}\r\n  , SYMBOL_TAG         = getWellKnownSymbol(TO_STRING_TAG)\r\n  , SYMBOL_SPECIES     = getWellKnownSymbol('species')\r\n  , SYMBOL_ITERATOR;\r\nfunction setSpecies(C){\r\n  if(DESC && (framework || !isNative(C)))defineProperty(C, SYMBOL_SPECIES, {\r\n    configurable: true,\r\n    get: returnThis\r\n  });\r\n}\n\n/******************************************************************************\n * Module : common.export                                                     *\n ******************************************************************************/\n\nvar NODE = cof(process) == PROCESS\r\n  , core = {}\r\n  , path = framework ? global : core\r\n  , old  = global.core\r\n  , exportGlobal\r\n  // type bitmap\r\n  , FORCED = 1\r\n  , GLOBAL = 2\r\n  , STATIC = 4\r\n  , PROTO  = 8\r\n  , BIND   = 16\r\n  , WRAP   = 32;\r\nfunction $define(type, name, source){\r\n  var key, own, out, exp\r\n    , isGlobal = type & GLOBAL\r\n    , target   = isGlobal ? global : (type & STATIC)\r\n        ? global[name] : (global[name] || ObjectProto)[PROTOTYPE]\r\n    , exports  = isGlobal ? core : core[name] || (core[name] = {});\r\n  if(isGlobal)source = name;\r\n  for(key in source){\r\n    // there is a similar native\r\n    own = !(type & FORCED) && target && key in target\r\n      && (!isFunction(target[key]) || isNative(target[key]));\r\n    // export native or passed\r\n    out = (own ? target : source)[key];\r\n    // prevent global pollution for namespaces\r\n    if(!framework && isGlobal && !isFunction(target[key]))exp = source[key];\r\n    // bind timers to global for call from export context\r\n    else if(type & BIND && own)exp = ctx(out, global);\r\n    // wrap global constructors for prevent change them in library\r\n    else if(type & WRAP && !framework && target[key] == out){\r\n      exp = function(param){\r\n        return this instanceof out ? new out(param) : out(param);\r\n      }\r\n      exp[PROTOTYPE] = out[PROTOTYPE];\r\n    } else exp = type & PROTO && isFunction(out) ? ctx(call, out) : out;\r\n    // extend global\r\n    if(framework && target && !own){\r\n      if(isGlobal)target[key] = out;\r\n      else delete target[key] && hidden(target, key, out);\r\n    }\r\n    // export\r\n    if(exports[key] != out)hidden(exports, key, exp);\r\n  }\r\n}\r\n// CommonJS export\r\nif(typeof module != 'undefined' && module.exports)module.exports = core;\r\n// RequireJS export\r\nelse if(isFunction(define) && define.amd)define(function(){return core});\r\n// Export to global object\r\nelse exportGlobal = true;\r\nif(exportGlobal || framework){\r\n  core.noConflict = function(){\r\n    global.core = old;\r\n    return core;\r\n  }\r\n  global.core = core;\r\n}\n\n/******************************************************************************\n * Module : common.iterators                                                  *\n ******************************************************************************/\n\nSYMBOL_ITERATOR = getWellKnownSymbol(ITERATOR);\r\nvar ITER  = safeSymbol('iter')\r\n  , KEY   = 1\r\n  , VALUE = 2\r\n  , Iterators = {}\r\n  , IteratorPrototype = {}\r\n    // Safari has byggy iterators w/o `next`\r\n  , BUGGY_ITERATORS = 'keys' in ArrayProto && !('next' in [].keys());\r\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\r\nsetIterator(IteratorPrototype, returnThis);\r\nfunction setIterator(O, value){\r\n  hidden(O, SYMBOL_ITERATOR, value);\r\n  // Add iterator for FF iterator protocol\r\n  FF_ITERATOR in ArrayProto && hidden(O, FF_ITERATOR, value);\r\n}\r\nfunction createIterator(Constructor, NAME, next, proto){\r\n  Constructor[PROTOTYPE] = create(proto || IteratorPrototype, {next: descriptor(1, next)});\r\n  setToStringTag(Constructor, NAME + ' Iterator');\r\n}\r\nfunction defineIterator(Constructor, NAME, value, DEFAULT){\r\n  var proto = Constructor[PROTOTYPE]\r\n    , iter  = get(proto, SYMBOL_ITERATOR) || get(proto, FF_ITERATOR) || (DEFAULT && get(proto, DEFAULT)) || value;\r\n  if(framework){\r\n    // Define iterator\r\n    setIterator(proto, iter);\r\n    if(iter !== value){\r\n      var iterProto = getPrototypeOf(iter.call(new Constructor));\r\n      // Set @@toStringTag to native iterators\r\n      setToStringTag(iterProto, NAME + ' Iterator', true);\r\n      // FF fix\r\n      has(proto, FF_ITERATOR) && setIterator(iterProto, returnThis);\r\n    }\r\n  }\r\n  // Plug for library\r\n  Iterators[NAME] = iter;\r\n  // FF & v8 fix\r\n  Iterators[NAME + ' Iterator'] = returnThis;\r\n  return iter;\r\n}\r\nfunction defineStdIterators(Base, NAME, Constructor, next, DEFAULT, IS_SET){\r\n  function createIter(kind){\r\n    return function(){\r\n      return new Constructor(this, kind);\r\n    }\r\n  }\r\n  createIterator(Constructor, NAME, next);\r\n  var entries = createIter(KEY+VALUE)\r\n    , values  = createIter(VALUE);\r\n  if(DEFAULT == VALUE)values = defineIterator(Base, NAME, values, 'values');\r\n  else entries = defineIterator(Base, NAME, entries, 'entries');\r\n  if(DEFAULT){\r\n    $define(PROTO + FORCED * BUGGY_ITERATORS, NAME, {\r\n      entries: entries,\r\n      keys: IS_SET ? values : createIter(KEY),\r\n      values: values\r\n    });\r\n  }\r\n}\r\nfunction iterResult(done, value){\r\n  return {value: value, done: !!done};\r\n}\r\nfunction isIterable(it){\r\n  var O      = Object(it)\r\n    , Symbol = global[SYMBOL]\r\n    , hasExt = (Symbol && Symbol[ITERATOR] || FF_ITERATOR) in O;\r\n  return hasExt || SYMBOL_ITERATOR in O || has(Iterators, classof(O));\r\n}\r\nfunction getIterator(it){\r\n  var Symbol  = global[SYMBOL]\r\n    , ext     = it[Symbol && Symbol[ITERATOR] || FF_ITERATOR]\r\n    , getIter = ext || it[SYMBOL_ITERATOR] || Iterators[classof(it)];\r\n  return assertObject(getIter.call(it));\r\n}\r\nfunction stepCall(fn, value, entries){\r\n  return entries ? invoke(fn, value) : fn(value);\r\n}\r\nfunction checkDangerIterClosing(fn){\r\n  var danger = true;\r\n  var O = {\r\n    next: function(){ throw 1 },\r\n    'return': function(){ danger = false }\r\n  };\r\n  O[SYMBOL_ITERATOR] = returnThis;\r\n  try {\r\n    fn(O);\r\n  } catch(e){}\r\n  return danger;\r\n}\r\nfunction closeIterator(iterator){\r\n  var ret = iterator['return'];\r\n  if(ret !== undefined)ret.call(iterator);\r\n}\r\nfunction safeIterClose(exec, iterator){\r\n  try {\r\n    exec(iterator);\r\n  } catch(e){\r\n    closeIterator(iterator);\r\n    throw e;\r\n  }\r\n}\r\nfunction forOf(iterable, entries, fn, that){\r\n  safeIterClose(function(iterator){\r\n    var f = ctx(fn, that, entries ? 2 : 1)\r\n      , step;\r\n    while(!(step = iterator.next()).done)if(stepCall(f, step.value, entries) === false){\r\n      return closeIterator(iterator);\r\n    }\r\n  }, getIterator(iterable));\r\n}\n\n/******************************************************************************\n * Module : es6.symbol                                                        *\n ******************************************************************************/\n\n// ECMAScript 6 symbols shim\r\n!function(TAG, SymbolRegistry, AllSymbols, setter){\r\n  // 19.4.1.1 Symbol([description])\r\n  if(!isNative(Symbol)){\r\n    Symbol = function(description){\r\n      assert(!(this instanceof Symbol), SYMBOL + ' is not a ' + CONSTRUCTOR);\r\n      var tag = uid(description)\r\n        , sym = set(create(Symbol[PROTOTYPE]), TAG, tag);\r\n      AllSymbols[tag] = sym;\r\n      DESC && setter && defineProperty(ObjectProto, tag, {\r\n        configurable: true,\r\n        set: function(value){\r\n          hidden(this, tag, value);\r\n        }\r\n      });\r\n      return sym;\r\n    }\r\n    hidden(Symbol[PROTOTYPE], TO_STRING, function(){\r\n      return this[TAG];\r\n    });\r\n  }\r\n  $define(GLOBAL + WRAP, {Symbol: Symbol});\r\n  \r\n  var symbolStatics = {\r\n    // 19.4.2.1 Symbol.for(key)\r\n    'for': function(key){\r\n      return has(SymbolRegistry, key += '')\r\n        ? SymbolRegistry[key]\r\n        : SymbolRegistry[key] = Symbol(key);\r\n    },\r\n    // 19.4.2.4 Symbol.iterator\r\n    iterator: SYMBOL_ITERATOR || getWellKnownSymbol(ITERATOR),\r\n    // 19.4.2.5 Symbol.keyFor(sym)\r\n    keyFor: part.call(keyOf, SymbolRegistry),\r\n    // 19.4.2.10 Symbol.species\r\n    species: SYMBOL_SPECIES,\r\n    // 19.4.2.13 Symbol.toStringTag\r\n    toStringTag: SYMBOL_TAG = getWellKnownSymbol(TO_STRING_TAG, true),\r\n    // 19.4.2.14 Symbol.unscopables\r\n    unscopables: SYMBOL_UNSCOPABLES,\r\n    pure: safeSymbol,\r\n    set: set,\r\n    useSetter: function(){setter = true},\r\n    useSimple: function(){setter = false}\r\n  };\r\n  // 19.4.2.2 Symbol.hasInstance\r\n  // 19.4.2.3 Symbol.isConcatSpreadable\r\n  // 19.4.2.6 Symbol.match\r\n  // 19.4.2.8 Symbol.replace\r\n  // 19.4.2.9 Symbol.search\r\n  // 19.4.2.11 Symbol.split\r\n  // 19.4.2.12 Symbol.toPrimitive\r\n  forEach.call(array('hasInstance,isConcatSpreadable,match,replace,search,split,toPrimitive'),\r\n    function(it){\r\n      symbolStatics[it] = getWellKnownSymbol(it);\r\n    }\r\n  );\r\n  $define(STATIC, SYMBOL, symbolStatics);\r\n  \r\n  setToStringTag(Symbol, SYMBOL);\r\n  \r\n  $define(STATIC + FORCED * !isNative(Symbol), OBJECT, {\r\n    // 19.1.2.7 Object.getOwnPropertyNames(O)\r\n    getOwnPropertyNames: function(it){\r\n      var names = getNames(toObject(it)), result = [], key, i = 0;\r\n      while(names.length > i)has(AllSymbols, key = names[i++]) || result.push(key);\r\n      return result;\r\n    },\r\n    // 19.1.2.8 Object.getOwnPropertySymbols(O)\r\n    getOwnPropertySymbols: function(it){\r\n      var names = getNames(toObject(it)), result = [], key, i = 0;\r\n      while(names.length > i)has(AllSymbols, key = names[i++]) && result.push(AllSymbols[key]);\r\n      return result;\r\n    }\r\n  });\r\n  \r\n  // 20.2.1.9 Math[@@toStringTag]\r\n  setToStringTag(Math, MATH, true);\r\n  // 24.3.3 JSON[@@toStringTag]\r\n  setToStringTag(global.JSON, 'JSON', true);\r\n}(safeSymbol('tag'), {}, {}, true);\n\n/******************************************************************************\n * Module : es6.object.statics                                                *\n ******************************************************************************/\n\n!function(){\r\n  var objectStatic = {\r\n    // 19.1.3.1 Object.assign(target, source)\r\n    assign: assign,\r\n    // 19.1.3.10 Object.is(value1, value2)\r\n    is: function(x, y){\r\n      return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\r\n    }\r\n  };\r\n  // 19.1.3.19 Object.setPrototypeOf(O, proto)\r\n  // Works with __proto__ only. Old v8 can't works with null proto objects.\r\n  '__proto__' in ObjectProto && function(buggy, set){\r\n    try {\r\n      set = ctx(call, getOwnDescriptor(ObjectProto, '__proto__').set, 2);\r\n      set({}, ArrayProto);\r\n    } catch(e){ buggy = true }\r\n    objectStatic.setPrototypeOf = setPrototypeOf = setPrototypeOf || function(O, proto){\r\n      assertObject(O);\r\n      assert(proto === null || isObject(proto), proto, \": can't set as prototype!\");\r\n      if(buggy)O.__proto__ = proto;\r\n      else set(O, proto);\r\n      return O;\r\n    }\r\n  }();\r\n  $define(STATIC, OBJECT, objectStatic);\r\n}();\n\n/******************************************************************************\n * Module : es6.object.statics-accept-primitives                              *\n ******************************************************************************/\n\n!function(){\r\n  // Object static methods accept primitives\r\n  function wrapObjectMethod(key, MODE){\r\n    var fn  = Object[key]\r\n      , exp = core[OBJECT][key]\r\n      , f   = 0\r\n      , o   = {};\r\n    if(!exp || isNative(exp)){\r\n      o[key] = MODE == 1 ? function(it){\r\n        return isObject(it) ? fn(it) : it;\r\n      } : MODE == 2 ? function(it){\r\n        return isObject(it) ? fn(it) : true;\r\n      } : MODE == 3 ? function(it){\r\n        return isObject(it) ? fn(it) : false;\r\n      } : MODE == 4 ? function(it, key){\r\n        return fn(toObject(it), key);\r\n      } : function(it){\r\n        return fn(toObject(it));\r\n      };\r\n      try { fn(DOT) }\r\n      catch(e){ f = 1 }\r\n      $define(STATIC + FORCED * f, OBJECT, o);\r\n    }\r\n  }\r\n  wrapObjectMethod('freeze', 1);\r\n  wrapObjectMethod('seal', 1);\r\n  wrapObjectMethod('preventExtensions', 1);\r\n  wrapObjectMethod('isFrozen', 2);\r\n  wrapObjectMethod('isSealed', 2);\r\n  wrapObjectMethod('isExtensible', 3);\r\n  wrapObjectMethod('getOwnPropertyDescriptor', 4);\r\n  wrapObjectMethod('getPrototypeOf');\r\n  wrapObjectMethod('keys');\r\n  wrapObjectMethod('getOwnPropertyNames');\r\n}();\n\n/******************************************************************************\n * Module : es6.number.statics                                                *\n ******************************************************************************/\n\n!function(isInteger){\r\n  $define(STATIC, NUMBER, {\r\n    // 20.1.2.1 Number.EPSILON\r\n    EPSILON: pow(2, -52),\r\n    // 20.1.2.2 Number.isFinite(number)\r\n    isFinite: function(it){\r\n      return typeof it == 'number' && isFinite(it);\r\n    },\r\n    // 20.1.2.3 Number.isInteger(number)\r\n    isInteger: isInteger,\r\n    // 20.1.2.4 Number.isNaN(number)\r\n    isNaN: sameNaN,\r\n    // 20.1.2.5 Number.isSafeInteger(number)\r\n    isSafeInteger: function(number){\r\n      return isInteger(number) && abs(number) <= MAX_SAFE_INTEGER;\r\n    },\r\n    // 20.1.2.6 Number.MAX_SAFE_INTEGER\r\n    MAX_SAFE_INTEGER: MAX_SAFE_INTEGER,\r\n    // 20.1.2.10 Number.MIN_SAFE_INTEGER\r\n    MIN_SAFE_INTEGER: -MAX_SAFE_INTEGER,\r\n    // 20.1.2.12 Number.parseFloat(string)\r\n    parseFloat: parseFloat,\r\n    // 20.1.2.13 Number.parseInt(string, radix)\r\n    parseInt: parseInt\r\n  });\r\n// 20.1.2.3 Number.isInteger(number)\r\n}(Number.isInteger || function(it){\r\n  return !isObject(it) && isFinite(it) && floor(it) === it;\r\n});\n\n/******************************************************************************\n * Module : es6.math                                                          *\n ******************************************************************************/\n\n// ECMAScript 6 shim\r\n!function(){\r\n  // 20.2.2.28 Math.sign(x)\r\n  var E    = Math.E\r\n    , exp  = Math.exp\r\n    , log  = Math.log\r\n    , sqrt = Math.sqrt\r\n    , sign = Math.sign || function(x){\r\n        return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\r\n      };\r\n  \r\n  // 20.2.2.5 Math.asinh(x)\r\n  function asinh(x){\r\n    return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : log(x + sqrt(x * x + 1));\r\n  }\r\n  // 20.2.2.14 Math.expm1(x)\r\n  function expm1(x){\r\n    return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : exp(x) - 1;\r\n  }\r\n    \r\n  $define(STATIC, MATH, {\r\n    // 20.2.2.3 Math.acosh(x)\r\n    acosh: function(x){\r\n      return (x = +x) < 1 ? NaN : isFinite(x) ? log(x / E + sqrt(x + 1) * sqrt(x - 1) / E) + 1 : x;\r\n    },\r\n    // 20.2.2.5 Math.asinh(x)\r\n    asinh: asinh,\r\n    // 20.2.2.7 Math.atanh(x)\r\n    atanh: function(x){\r\n      return (x = +x) == 0 ? x : log((1 + x) / (1 - x)) / 2;\r\n    },\r\n    // 20.2.2.9 Math.cbrt(x)\r\n    cbrt: function(x){\r\n      return sign(x = +x) * pow(abs(x), 1 / 3);\r\n    },\r\n    // 20.2.2.11 Math.clz32(x)\r\n    clz32: function(x){\r\n      return (x >>>= 0) ? 32 - x[TO_STRING](2).length : 32;\r\n    },\r\n    // 20.2.2.12 Math.cosh(x)\r\n    cosh: function(x){\r\n      return (exp(x = +x) + exp(-x)) / 2;\r\n    },\r\n    // 20.2.2.14 Math.expm1(x)\r\n    expm1: expm1,\r\n    // 20.2.2.16 Math.fround(x)\r\n    // TODO: fallback for IE9-\r\n    fround: function(x){\r\n      return new Float32Array([x])[0];\r\n    },\r\n    // 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\r\n    hypot: function(value1, value2){\r\n      var sum  = 0\r\n        , len1 = arguments.length\r\n        , len2 = len1\r\n        , args = Array(len1)\r\n        , larg = -Infinity\r\n        , arg;\r\n      while(len1--){\r\n        arg = args[len1] = +arguments[len1];\r\n        if(arg == Infinity || arg == -Infinity)return Infinity;\r\n        if(arg > larg)larg = arg;\r\n      }\r\n      larg = arg || 1;\r\n      while(len2--)sum += pow(args[len2] / larg, 2);\r\n      return larg * sqrt(sum);\r\n    },\r\n    // 20.2.2.18 Math.imul(x, y)\r\n    imul: function(x, y){\r\n      var UInt16 = 0xffff\r\n        , xn = +x\r\n        , yn = +y\r\n        , xl = UInt16 & xn\r\n        , yl = UInt16 & yn;\r\n      return 0 | xl * yl + ((UInt16 & xn >>> 16) * yl + xl * (UInt16 & yn >>> 16) << 16 >>> 0);\r\n    },\r\n    // 20.2.2.20 Math.log1p(x)\r\n    log1p: function(x){\r\n      return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : log(1 + x);\r\n    },\r\n    // 20.2.2.21 Math.log10(x)\r\n    log10: function(x){\r\n      return log(x) / Math.LN10;\r\n    },\r\n    // 20.2.2.22 Math.log2(x)\r\n    log2: function(x){\r\n      return log(x) / Math.LN2;\r\n    },\r\n    // 20.2.2.28 Math.sign(x)\r\n    sign: sign,\r\n    // 20.2.2.30 Math.sinh(x)\r\n    sinh: function(x){\r\n      return (abs(x = +x) < 1) ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (E / 2);\r\n    },\r\n    // 20.2.2.33 Math.tanh(x)\r\n    tanh: function(x){\r\n      var a = expm1(x = +x)\r\n        , b = expm1(-x);\r\n      return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\r\n    },\r\n    // 20.2.2.34 Math.trunc(x)\r\n    trunc: trunc\r\n  });\r\n}();\n\n/******************************************************************************\n * Module : es6.string                                                        *\n ******************************************************************************/\n\n!function(fromCharCode){\r\n  function assertNotRegExp(it){\r\n    if(cof(it) == REGEXP)throw TypeError();\r\n  }\r\n  \r\n  $define(STATIC, STRING, {\r\n    // 21.1.2.2 String.fromCodePoint(...codePoints)\r\n    fromCodePoint: function(x){\r\n      var res = []\r\n        , len = arguments.length\r\n        , i   = 0\r\n        , code\r\n      while(len > i){\r\n        code = +arguments[i++];\r\n        if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');\r\n        res.push(code < 0x10000\r\n          ? fromCharCode(code)\r\n          : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\r\n        );\r\n      } return res.join('');\r\n    },\r\n    // 21.1.2.4 String.raw(callSite, ...substitutions)\r\n    raw: function(callSite){\r\n      var raw = toObject(callSite.raw)\r\n        , len = toLength(raw.length)\r\n        , sln = arguments.length\r\n        , res = []\r\n        , i   = 0;\r\n      while(len > i){\r\n        res.push(String(raw[i++]));\r\n        if(i < sln)res.push(String(arguments[i]));\r\n      } return res.join('');\r\n    }\r\n  });\r\n  \r\n  $define(PROTO, STRING, {\r\n    // 21.1.3.3 String.prototype.codePointAt(pos)\r\n    codePointAt: createPointAt(false),\r\n    // 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\r\n    endsWith: function(searchString /*, endPosition = @length */){\r\n      assertNotRegExp(searchString);\r\n      var that = String(assertDefined(this))\r\n        , endPosition = arguments[1]\r\n        , len = toLength(that.length)\r\n        , end = endPosition === undefined ? len : min(toLength(endPosition), len);\r\n      searchString += '';\r\n      return that.slice(end - searchString.length, end) === searchString;\r\n    },\r\n    // 21.1.3.7 String.prototype.includes(searchString, position = 0)\r\n    includes: function(searchString /*, position = 0 */){\r\n      assertNotRegExp(searchString);\r\n      return !!~String(assertDefined(this)).indexOf(searchString, arguments[1]);\r\n    },\r\n    // 21.1.3.13 String.prototype.repeat(count)\r\n    repeat: function(count){\r\n      var str = String(assertDefined(this))\r\n        , res = ''\r\n        , n   = toInteger(count);\r\n      if(0 > n || n == Infinity)throw RangeError(\"Count can't be negative\");\r\n      for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;\r\n      return res;\r\n    },\r\n    // 21.1.3.18 String.prototype.startsWith(searchString [, position ])\r\n    startsWith: function(searchString /*, position = 0 */){\r\n      assertNotRegExp(searchString);\r\n      var that  = String(assertDefined(this))\r\n        , index = toLength(min(arguments[1], that.length));\r\n      searchString += '';\r\n      return that.slice(index, index + searchString.length) === searchString;\r\n    }\r\n  });\r\n}(String.fromCharCode);\n\n/******************************************************************************\n * Module : es6.array.statics                                                 *\n ******************************************************************************/\n\n!function(){\r\n  $define(STATIC + FORCED * checkDangerIterClosing(Array.from), ARRAY, {\r\n    // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\r\n    from: function(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\r\n      var O       = Object(assertDefined(arrayLike))\r\n        , mapfn   = arguments[1]\r\n        , mapping = mapfn !== undefined\r\n        , f       = mapping ? ctx(mapfn, arguments[2], 2) : undefined\r\n        , index   = 0\r\n        , length, result, step;\r\n      if(isIterable(O)){\r\n        result = new (generic(this, Array));\r\n        safeIterClose(function(iterator){\r\n          for(; !(step = iterator.next()).done; index++){\r\n            result[index] = mapping ? f(step.value, index) : step.value;\r\n          }\r\n        }, getIterator(O));\r\n      } else {\r\n        result = new (generic(this, Array))(length = toLength(O.length));\r\n        for(; length > index; index++){\r\n          result[index] = mapping ? f(O[index], index) : O[index];\r\n        }\r\n      }\r\n      result.length = index;\r\n      return result;\r\n    }\r\n  });\r\n  \r\n  $define(STATIC, ARRAY, {\r\n    // 22.1.2.3 Array.of( ...items)\r\n    of: function(/* ...args */){\r\n      var index  = 0\r\n        , length = arguments.length\r\n        , result = new (generic(this, Array))(length);\r\n      while(length > index)result[index] = arguments[index++];\r\n      result.length = length;\r\n      return result;\r\n    }\r\n  });\r\n  \r\n  setSpecies(Array);\r\n}();\n\n/******************************************************************************\n * Module : es6.array.prototype                                               *\n ******************************************************************************/\n\n!function(){\r\n  $define(PROTO, ARRAY, {\r\n    // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\r\n    copyWithin: function(target /* = 0 */, start /* = 0, end = @length */){\r\n      var O     = Object(assertDefined(this))\r\n        , len   = toLength(O.length)\r\n        , to    = toIndex(target, len)\r\n        , from  = toIndex(start, len)\r\n        , end   = arguments[2]\r\n        , fin   = end === undefined ? len : toIndex(end, len)\r\n        , count = min(fin - from, len - to)\r\n        , inc   = 1;\r\n      if(from < to && to < from + count){\r\n        inc  = -1;\r\n        from = from + count - 1;\r\n        to   = to + count - 1;\r\n      }\r\n      while(count-- > 0){\r\n        if(from in O)O[to] = O[from];\r\n        else delete O[to];\r\n        to += inc;\r\n        from += inc;\r\n      } return O;\r\n    },\r\n    // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\r\n    fill: function(value /*, start = 0, end = @length */){\r\n      var O      = Object(assertDefined(this))\r\n        , length = toLength(O.length)\r\n        , index  = toIndex(arguments[1], length)\r\n        , end    = arguments[2]\r\n        , endPos = end === undefined ? length : toIndex(end, length);\r\n      while(endPos > index)O[index++] = value;\r\n      return O;\r\n    },\r\n    // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\r\n    find: createArrayMethod(5),\r\n    // 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\r\n    findIndex: createArrayMethod(6)\r\n  });\r\n  \r\n  if(framework){\r\n    // 22.1.3.31 Array.prototype[@@unscopables]\r\n    forEach.call(array('find,findIndex,fill,copyWithin,entries,keys,values'), function(it){\r\n      ArrayUnscopables[it] = true;\r\n    });\r\n    SYMBOL_UNSCOPABLES in ArrayProto || hidden(ArrayProto, SYMBOL_UNSCOPABLES, ArrayUnscopables);\r\n  }\r\n}();\n\n/******************************************************************************\n * Module : es6.iterators                                                     *\n ******************************************************************************/\n\n!function(at){\r\n  // 22.1.3.4 Array.prototype.entries()\r\n  // 22.1.3.13 Array.prototype.keys()\r\n  // 22.1.3.29 Array.prototype.values()\r\n  // 22.1.3.30 Array.prototype[@@iterator]()\r\n  defineStdIterators(Array, ARRAY, function(iterated, kind){\r\n    set(this, ITER, {o: toObject(iterated), i: 0, k: kind});\r\n  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()\r\n  }, function(){\r\n    var iter  = this[ITER]\r\n      , O     = iter.o\r\n      , kind  = iter.k\r\n      , index = iter.i++;\r\n    if(!O || index >= O.length){\r\n      iter.o = undefined;\r\n      return iterResult(1);\r\n    }\r\n    if(kind == KEY)  return iterResult(0, index);\r\n    if(kind == VALUE)return iterResult(0, O[index]);\r\n                     return iterResult(0, [index, O[index]]);\r\n  }, VALUE);\r\n  \r\n  // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\r\n  Iterators[ARGUMENTS] = Iterators[ARRAY];\r\n  \r\n  // 21.1.3.27 String.prototype[@@iterator]()\r\n  defineStdIterators(String, STRING, function(iterated){\r\n    set(this, ITER, {o: String(iterated), i: 0});\r\n  // 21.1.5.2.1 %StringIteratorPrototype%.next()\r\n  }, function(){\r\n    var iter  = this[ITER]\r\n      , O     = iter.o\r\n      , index = iter.i\r\n      , point;\r\n    if(index >= O.length)return iterResult(1);\r\n    point = at.call(O, index);\r\n    iter.i += point.length;\r\n    return iterResult(0, point);\r\n  });\r\n}(createPointAt(true));\n\n/******************************************************************************\n * Module : web.immediate                                                     *\n ******************************************************************************/\n\n// setImmediate shim\r\n// Node.js 0.9+ & IE10+ has setImmediate, else:\r\nisFunction(setImmediate) && isFunction(clearImmediate) || function(ONREADYSTATECHANGE){\r\n  var postMessage      = global.postMessage\r\n    , addEventListener = global.addEventListener\r\n    , MessageChannel   = global.MessageChannel\r\n    , counter          = 0\r\n    , queue            = {}\r\n    , defer, channel, port;\r\n  setImmediate = function(fn){\r\n    var args = [], i = 1;\r\n    while(arguments.length > i)args.push(arguments[i++]);\r\n    queue[++counter] = function(){\r\n      invoke(isFunction(fn) ? fn : Function(fn), args);\r\n    }\r\n    defer(counter);\r\n    return counter;\r\n  }\r\n  clearImmediate = function(id){\r\n    delete queue[id];\r\n  }\r\n  function run(id){\r\n    if(has(queue, id)){\r\n      var fn = queue[id];\r\n      delete queue[id];\r\n      fn();\r\n    }\r\n  }\r\n  function listner(event){\r\n    run(event.data);\r\n  }\r\n  // Node.js 0.8-\r\n  if(NODE){\r\n    defer = function(id){\r\n      nextTick(part.call(run, id));\r\n    }\r\n  // Modern browsers, skip implementation for WebWorkers\r\n  // IE8 has postMessage, but it's sync & typeof its postMessage is object\r\n  } else if(addEventListener && isFunction(postMessage) && !global.importScripts){\r\n    defer = function(id){\r\n      postMessage(id, '*');\r\n    }\r\n    addEventListener('message', listner, false);\r\n  // WebWorkers\r\n  } else if(isFunction(MessageChannel)){\r\n    channel = new MessageChannel;\r\n    port    = channel.port2;\r\n    channel.port1.onmessage = listner;\r\n    defer = ctx(port.postMessage, port, 1);\r\n  // IE8-\r\n  } else if(document && ONREADYSTATECHANGE in document[CREATE_ELEMENT]('script')){\r\n    defer = function(id){\r\n      html.appendChild(document[CREATE_ELEMENT]('script'))[ONREADYSTATECHANGE] = function(){\r\n        html.removeChild(this);\r\n        run(id);\r\n      }\r\n    }\r\n  // Rest old browsers\r\n  } else {\r\n    defer = function(id){\r\n      setTimeout(run, 0, id);\r\n    }\r\n  }\r\n}('onreadystatechange');\r\n$define(GLOBAL + BIND, {\r\n  setImmediate:   setImmediate,\r\n  clearImmediate: clearImmediate\r\n});\n\n/******************************************************************************\n * Module : es6.promise                                                       *\n ******************************************************************************/\n\n// ES6 promises shim\r\n// Based on https://github.com/getify/native-promise-only/\r\n!function(Promise, test){\r\n  isFunction(Promise) && isFunction(Promise.resolve)\r\n  && Promise.resolve(test = new Promise(function(){})) == test\r\n  || function(asap, RECORD){\r\n    function isThenable(it){\r\n      var then;\r\n      if(isObject(it))then = it.then;\r\n      return isFunction(then) ? then : false;\r\n    }\r\n    function handledRejectionOrHasOnRejected(promise){\r\n      var record = promise[RECORD]\r\n        , chain  = record.c\r\n        , i      = 0\r\n        , react;\r\n      if(record.h)return true;\r\n      while(chain.length > i){\r\n        react = chain[i++];\r\n        if(react.fail || handledRejectionOrHasOnRejected(react.P))return true;\r\n      }\r\n    }\r\n    function notify(record, reject){\r\n      var chain = record.c;\r\n      if(reject || chain.length)asap(function(){\r\n        var promise = record.p\r\n          , value   = record.v\r\n          , ok      = record.s == 1\r\n          , i       = 0;\r\n        if(reject && !handledRejectionOrHasOnRejected(promise)){\r\n          setTimeout(function(){\r\n            if(!handledRejectionOrHasOnRejected(promise)){\r\n              if(NODE){\r\n                if(!process.emit('unhandledRejection', value, promise)){\r\n                  // default node.js behavior\r\n                }\r\n              } else if(isFunction(console.error)){\r\n                console.error('Unhandled promise rejection', value);\r\n              }\r\n            }\r\n          }, 1e3);\r\n        } else while(chain.length > i)!function(react){\r\n          var cb = ok ? react.ok : react.fail\r\n            , ret, then;\r\n          try {\r\n            if(cb){\r\n              if(!ok)record.h = true;\r\n              ret = cb === true ? value : cb(value);\r\n              if(ret === react.P){\r\n                react.rej(TypeError(PROMISE + '-chain cycle'));\r\n              } else if(then = isThenable(ret)){\r\n                then.call(ret, react.res, react.rej);\r\n              } else react.res(ret);\r\n            } else react.rej(value);\r\n          } catch(err){\r\n            react.rej(err);\r\n          }\r\n        }(chain[i++]);\r\n        chain.length = 0;\r\n      });\r\n    }\r\n    function resolve(value){\r\n      var record = this\r\n        , then, wrapper;\r\n      if(record.d)return;\r\n      record.d = true;\r\n      record = record.r || record; // unwrap\r\n      try {\r\n        if(then = isThenable(value)){\r\n          wrapper = {r: record, d: false}; // wrap\r\n          then.call(value, ctx(resolve, wrapper, 1), ctx(reject, wrapper, 1));\r\n        } else {\r\n          record.v = value;\r\n          record.s = 1;\r\n          notify(record);\r\n        }\r\n      } catch(err){\r\n        reject.call(wrapper || {r: record, d: false}, err); // wrap\r\n      }\r\n    }\r\n    function reject(value){\r\n      var record = this;\r\n      if(record.d)return;\r\n      record.d = true;\r\n      record = record.r || record; // unwrap\r\n      record.v = value;\r\n      record.s = 2;\r\n      notify(record, true);\r\n    }\r\n    function getConstructor(C){\r\n      var S = assertObject(C)[SYMBOL_SPECIES];\r\n      return S != undefined ? S : C;\r\n    }\r\n    // 25.4.3.1 Promise(executor)\r\n    Promise = function(executor){\r\n      assertFunction(executor);\r\n      assertInstance(this, Promise, PROMISE);\r\n      var record = {\r\n        p: this,      // promise\r\n        c: [],        // chain\r\n        s: 0,         // state\r\n        d: false,     // done\r\n        v: undefined, // value\r\n        h: false      // handled rejection\r\n      };\r\n      hidden(this, RECORD, record);\r\n      try {\r\n        executor(ctx(resolve, record, 1), ctx(reject, record, 1));\r\n      } catch(err){\r\n        reject.call(record, err);\r\n      }\r\n    }\r\n    assignHidden(Promise[PROTOTYPE], {\r\n      // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\r\n      then: function(onFulfilled, onRejected){\r\n        var S = assertObject(assertObject(this)[CONSTRUCTOR])[SYMBOL_SPECIES];\r\n        var react = {\r\n          ok:   isFunction(onFulfilled) ? onFulfilled : true,\r\n          fail: isFunction(onRejected)  ? onRejected  : false\r\n        } , P = react.P = new (S != undefined ? S : Promise)(function(resolve, reject){\r\n          react.res = assertFunction(resolve);\r\n          react.rej = assertFunction(reject);\r\n        }), record = this[RECORD];\r\n        record.c.push(react);\r\n        record.s && notify(record);\r\n        return P;\r\n      },\r\n      // 25.4.5.1 Promise.prototype.catch(onRejected)\r\n      'catch': function(onRejected){\r\n        return this.then(undefined, onRejected);\r\n      }\r\n    });\r\n    assignHidden(Promise, {\r\n      // 25.4.4.1 Promise.all(iterable)\r\n      all: function(iterable){\r\n        var Promise = getConstructor(this)\r\n          , values  = [];\r\n        return new Promise(function(resolve, reject){\r\n          forOf(iterable, false, push, values);\r\n          var remaining = values.length\r\n            , results   = Array(remaining);\r\n          if(remaining)forEach.call(values, function(promise, index){\r\n            Promise.resolve(promise).then(function(value){\r\n              results[index] = value;\r\n              --remaining || resolve(results);\r\n            }, reject);\r\n          });\r\n          else resolve(results);\r\n        });\r\n      },\r\n      // 25.4.4.4 Promise.race(iterable)\r\n      race: function(iterable){\r\n        var Promise = getConstructor(this);\r\n        return new Promise(function(resolve, reject){\r\n          forOf(iterable, false, function(promise){\r\n            Promise.resolve(promise).then(resolve, reject);\r\n          });\r\n        });\r\n      },\r\n      // 25.4.4.5 Promise.reject(r)\r\n      reject: function(r){\r\n        return new (getConstructor(this))(function(resolve, reject){\r\n          reject(r);\r\n        });\r\n      },\r\n      // 25.4.4.6 Promise.resolve(x)\r\n      resolve: function(x){\r\n        return isObject(x) && RECORD in x && getPrototypeOf(x) === this[PROTOTYPE]\r\n          ? x : new (getConstructor(this))(function(resolve, reject){\r\n            resolve(x);\r\n          });\r\n      }\r\n    });\r\n  }(nextTick || setImmediate, safeSymbol('record'));\r\n  setToStringTag(Promise, PROMISE);\r\n  setSpecies(Promise);\r\n  $define(GLOBAL + FORCED * !isNative(Promise), {Promise: Promise});\r\n}(global[PROMISE]);\n\n/******************************************************************************\n * Module : es6.collections                                                   *\n ******************************************************************************/\n\n// ECMAScript 6 collections shim\r\n!function(){\r\n  var UID   = safeSymbol('uid')\r\n    , O1    = safeSymbol('O1')\r\n    , WEAK  = safeSymbol('weak')\r\n    , LEAK  = safeSymbol('leak')\r\n    , LAST  = safeSymbol('last')\r\n    , FIRST = safeSymbol('first')\r\n    , SIZE  = DESC ? safeSymbol('size') : 'size'\r\n    , uid   = 0\r\n    , tmp   = {};\r\n  \r\n  function getCollection(C, NAME, methods, commonMethods, isMap, isWeak){\r\n    var ADDER = isMap ? 'set' : 'add'\r\n      , proto = C && C[PROTOTYPE]\r\n      , O     = {};\r\n    function initFromIterable(that, iterable){\r\n      if(iterable != undefined)forOf(iterable, isMap, that[ADDER], that);\r\n      return that;\r\n    }\r\n    function fixSVZ(key, chain){\r\n      var method = proto[key];\r\n      if(framework)proto[key] = function(a, b){\r\n        var result = method.call(this, a === 0 ? 0 : a, b);\r\n        return chain ? this : result;\r\n      };\r\n    }\r\n    if(!isNative(C) || !(isWeak || (!BUGGY_ITERATORS && has(proto, FOR_EACH) && has(proto, 'entries')))){\r\n      // create collection constructor\r\n      C = isWeak\r\n        ? function(iterable){\r\n            assertInstance(this, C, NAME);\r\n            set(this, UID, uid++);\r\n            initFromIterable(this, iterable);\r\n          }\r\n        : function(iterable){\r\n            var that = this;\r\n            assertInstance(that, C, NAME);\r\n            set(that, O1, create(null));\r\n            set(that, SIZE, 0);\r\n            set(that, LAST, undefined);\r\n            set(that, FIRST, undefined);\r\n            initFromIterable(that, iterable);\r\n          };\r\n      assignHidden(assignHidden(C[PROTOTYPE], methods), commonMethods);\r\n      isWeak || !DESC || defineProperty(C[PROTOTYPE], 'size', {get: function(){\r\n        return assertDefined(this[SIZE]);\r\n      }});\r\n    } else {\r\n      var Native = C\r\n        , inst   = new C\r\n        , chain  = inst[ADDER](isWeak ? {} : -0, 1)\r\n        , buggyZero;\r\n      // wrap to init collections from iterable\r\n      if(checkDangerIterClosing(function(O){ new C(O) })){\r\n        C = function(iterable){\r\n          assertInstance(this, C, NAME);\r\n          return initFromIterable(new Native, iterable);\r\n        }\r\n        C[PROTOTYPE] = proto;\r\n        if(framework)proto[CONSTRUCTOR] = C;\r\n      }\r\n      isWeak || inst[FOR_EACH](function(val, key){\r\n        buggyZero = 1 / key === -Infinity;\r\n      });\r\n      // fix converting -0 key to +0\r\n      if(buggyZero){\r\n        fixSVZ('delete');\r\n        fixSVZ('has');\r\n        isMap && fixSVZ('get');\r\n      }\r\n      // + fix .add & .set for chaining\r\n      if(buggyZero || chain !== inst)fixSVZ(ADDER, true);\r\n    }\r\n    setToStringTag(C, NAME);\r\n    setSpecies(C);\r\n    \r\n    O[NAME] = C;\r\n    $define(GLOBAL + WRAP + FORCED * !isNative(C), O);\r\n    \r\n    // add .keys, .values, .entries, [@@iterator]\r\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\r\n    isWeak || defineStdIterators(C, NAME, function(iterated, kind){\r\n      set(this, ITER, {o: iterated, k: kind});\r\n    }, function(){\r\n      var iter  = this[ITER]\r\n        , kind  = iter.k\r\n        , entry = iter.l;\r\n      // revert to the last existing entry\r\n      while(entry && entry.r)entry = entry.p;\r\n      // get next entry\r\n      if(!iter.o || !(iter.l = entry = entry ? entry.n : iter.o[FIRST])){\r\n        // or finish the iteration\r\n        iter.o = undefined;\r\n        return iterResult(1);\r\n      }\r\n      // return step by kind\r\n      if(kind == KEY)  return iterResult(0, entry.k);\r\n      if(kind == VALUE)return iterResult(0, entry.v);\r\n                       return iterResult(0, [entry.k, entry.v]);   \r\n    }, isMap ? KEY+VALUE : VALUE, !isMap);\r\n    \r\n    return C;\r\n  }\r\n  \r\n  function fastKey(it, create){\r\n    // return primitive with prefix\r\n    if(!isObject(it))return (typeof it == 'string' ? 'S' : 'P') + it;\r\n    // can't set id to frozen object\r\n    if(isFrozen(it))return 'F';\r\n    if(!has(it, UID)){\r\n      // not necessary to add id\r\n      if(!create)return 'E';\r\n      // add missing object id\r\n      hidden(it, UID, ++uid);\r\n    // return object id with prefix\r\n    } return 'O' + it[UID];\r\n  }\r\n  function getEntry(that, key){\r\n    // fast case\r\n    var index = fastKey(key), entry;\r\n    if(index != 'F')return that[O1][index];\r\n    // frozen object case\r\n    for(entry = that[FIRST]; entry; entry = entry.n){\r\n      if(entry.k == key)return entry;\r\n    }\r\n  }\r\n  function def(that, key, value){\r\n    var entry = getEntry(that, key)\r\n      , prev, index;\r\n    // change existing entry\r\n    if(entry)entry.v = value;\r\n    // create new entry\r\n    else {\r\n      that[LAST] = entry = {\r\n        i: index = fastKey(key, true), // <- index\r\n        k: key,                        // <- key\r\n        v: value,                      // <- value\r\n        p: prev = that[LAST],          // <- previous entry\r\n        n: undefined,                  // <- next entry\r\n        r: false                       // <- removed\r\n      };\r\n      if(!that[FIRST])that[FIRST] = entry;\r\n      if(prev)prev.n = entry;\r\n      that[SIZE]++;\r\n      // add to index\r\n      if(index != 'F')that[O1][index] = entry;\r\n    } return that;\r\n  }\r\n\r\n  var collectionMethods = {\r\n    // 23.1.3.1 Map.prototype.clear()\r\n    // 23.2.3.2 Set.prototype.clear()\r\n    clear: function(){\r\n      for(var that = this, data = that[O1], entry = that[FIRST]; entry; entry = entry.n){\r\n        entry.r = true;\r\n        if(entry.p)entry.p = entry.p.n = undefined;\r\n        delete data[entry.i];\r\n      }\r\n      that[FIRST] = that[LAST] = undefined;\r\n      that[SIZE] = 0;\r\n    },\r\n    // 23.1.3.3 Map.prototype.delete(key)\r\n    // 23.2.3.4 Set.prototype.delete(value)\r\n    'delete': function(key){\r\n      var that  = this\r\n        , entry = getEntry(that, key);\r\n      if(entry){\r\n        var next = entry.n\r\n          , prev = entry.p;\r\n        delete that[O1][entry.i];\r\n        entry.r = true;\r\n        if(prev)prev.n = next;\r\n        if(next)next.p = prev;\r\n        if(that[FIRST] == entry)that[FIRST] = next;\r\n        if(that[LAST] == entry)that[LAST] = prev;\r\n        that[SIZE]--;\r\n      } return !!entry;\r\n    },\r\n    // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\r\n    // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\r\n    forEach: function(callbackfn /*, that = undefined */){\r\n      var f = ctx(callbackfn, arguments[1], 3)\r\n        , entry;\r\n      while(entry = entry ? entry.n : this[FIRST]){\r\n        f(entry.v, entry.k, this);\r\n        // revert to the last existing entry\r\n        while(entry && entry.r)entry = entry.p;\r\n      }\r\n    },\r\n    // 23.1.3.7 Map.prototype.has(key)\r\n    // 23.2.3.7 Set.prototype.has(value)\r\n    has: function(key){\r\n      return !!getEntry(this, key);\r\n    }\r\n  }\r\n  \r\n  // 23.1 Map Objects\r\n  Map = getCollection(Map, MAP, {\r\n    // 23.1.3.6 Map.prototype.get(key)\r\n    get: function(key){\r\n      var entry = getEntry(this, key);\r\n      return entry && entry.v;\r\n    },\r\n    // 23.1.3.9 Map.prototype.set(key, value)\r\n    set: function(key, value){\r\n      return def(this, key === 0 ? 0 : key, value);\r\n    }\r\n  }, collectionMethods, true);\r\n  \r\n  // 23.2 Set Objects\r\n  Set = getCollection(Set, SET, {\r\n    // 23.2.3.1 Set.prototype.add(value)\r\n    add: function(value){\r\n      return def(this, value = value === 0 ? 0 : value, value);\r\n    }\r\n  }, collectionMethods);\r\n  \r\n  function defWeak(that, key, value){\r\n    if(isFrozen(assertObject(key)))leakStore(that).set(key, value);\r\n    else {\r\n      has(key, WEAK) || hidden(key, WEAK, {});\r\n      key[WEAK][that[UID]] = value;\r\n    } return that;\r\n  }\r\n  function leakStore(that){\r\n    return that[LEAK] || hidden(that, LEAK, new Map)[LEAK];\r\n  }\r\n  \r\n  var weakMethods = {\r\n    // 23.3.3.2 WeakMap.prototype.delete(key)\r\n    // 23.4.3.3 WeakSet.prototype.delete(value)\r\n    'delete': function(key){\r\n      if(!isObject(key))return false;\r\n      if(isFrozen(key))return leakStore(this)['delete'](key);\r\n      return has(key, WEAK) && has(key[WEAK], this[UID]) && delete key[WEAK][this[UID]];\r\n    },\r\n    // 23.3.3.4 WeakMap.prototype.has(key)\r\n    // 23.4.3.4 WeakSet.prototype.has(value)\r\n    has: function(key){\r\n      if(!isObject(key))return false;\r\n      if(isFrozen(key))return leakStore(this).has(key);\r\n      return has(key, WEAK) && has(key[WEAK], this[UID]);\r\n    }\r\n  };\r\n  \r\n  // 23.3 WeakMap Objects\r\n  WeakMap = getCollection(WeakMap, WEAKMAP, {\r\n    // 23.3.3.3 WeakMap.prototype.get(key)\r\n    get: function(key){\r\n      if(isObject(key)){\r\n        if(isFrozen(key))return leakStore(this).get(key);\r\n        if(has(key, WEAK))return key[WEAK][this[UID]];\r\n      }\r\n    },\r\n    // 23.3.3.5 WeakMap.prototype.set(key, value)\r\n    set: function(key, value){\r\n      return defWeak(this, key, value);\r\n    }\r\n  }, weakMethods, true, true);\r\n  \r\n  // IE11 WeakMap frozen keys fix\r\n  if(framework && new WeakMap().set(Object.freeze(tmp), 7).get(tmp) != 7){\r\n    forEach.call(array('delete,has,get,set'), function(key){\r\n      var method = WeakMap[PROTOTYPE][key];\r\n      WeakMap[PROTOTYPE][key] = function(a, b){\r\n        // store frozen objects on leaky map\r\n        if(isObject(a) && isFrozen(a)){\r\n          var result = leakStore(this)[key](a, b);\r\n          return key == 'set' ? this : result;\r\n        // store all the rest on native weakmap\r\n        } return method.call(this, a, b);\r\n      };\r\n    });\r\n  }\r\n  \r\n  // 23.4 WeakSet Objects\r\n  WeakSet = getCollection(WeakSet, WEAKSET, {\r\n    // 23.4.3.1 WeakSet.prototype.add(value)\r\n    add: function(value){\r\n      return defWeak(this, value, true);\r\n    }\r\n  }, weakMethods, false, true);\r\n}();\n\n/******************************************************************************\n * Module : es6.reflect                                                       *\n ******************************************************************************/\n\n!function(){\r\n  function Enumerate(iterated){\r\n    var keys = [], key;\r\n    for(key in iterated)keys.push(key);\r\n    set(this, ITER, {o: iterated, a: keys, i: 0});\r\n  }\r\n  createIterator(Enumerate, OBJECT, function(){\r\n    var iter = this[ITER]\r\n      , keys = iter.a\r\n      , key;\r\n    do {\r\n      if(iter.i >= keys.length)return iterResult(1);\r\n    } while(!((key = keys[iter.i++]) in iter.o));\r\n    return iterResult(0, key);\r\n  });\r\n  \r\n  function wrap(fn){\r\n    return function(it){\r\n      assertObject(it);\r\n      try {\r\n        return fn.apply(undefined, arguments), true;\r\n      } catch(e){\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  \r\n  function reflectGet(target, propertyKey/*, receiver*/){\r\n    var receiver = arguments.length < 3 ? target : arguments[2]\r\n      , desc = getOwnDescriptor(assertObject(target), propertyKey), proto;\r\n    if(desc)return has(desc, 'value')\r\n      ? desc.value\r\n      : desc.get === undefined\r\n        ? undefined\r\n        : desc.get.call(receiver);\r\n    return isObject(proto = getPrototypeOf(target))\r\n      ? reflectGet(proto, propertyKey, receiver)\r\n      : undefined;\r\n  }\r\n  function reflectSet(target, propertyKey, V/*, receiver*/){\r\n    var receiver = arguments.length < 4 ? target : arguments[3]\r\n      , ownDesc  = getOwnDescriptor(assertObject(target), propertyKey)\r\n      , existingDescriptor, proto;\r\n    if(!ownDesc){\r\n      if(isObject(proto = getPrototypeOf(target))){\r\n        return reflectSet(proto, propertyKey, V, receiver);\r\n      }\r\n      ownDesc = descriptor(0);\r\n    }\r\n    if(has(ownDesc, 'value')){\r\n      if(ownDesc.writable === false || !isObject(receiver))return false;\r\n      existingDescriptor = getOwnDescriptor(receiver, propertyKey) || descriptor(0);\r\n      existingDescriptor.value = V;\r\n      return defineProperty(receiver, propertyKey, existingDescriptor), true;\r\n    }\r\n    return ownDesc.set === undefined\r\n      ? false\r\n      : (ownDesc.set.call(receiver, V), true);\r\n  }\r\n  var isExtensible = Object.isExtensible || returnIt;\r\n  \r\n  var reflect = {\r\n    // 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\r\n    apply: ctx(call, apply, 3),\r\n    // 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\r\n    construct: function(target, argumentsList /*, newTarget*/){\r\n      var proto    = assertFunction(arguments.length < 3 ? target : arguments[2])[PROTOTYPE]\r\n        , instance = create(isObject(proto) ? proto : ObjectProto)\r\n        , result   = apply.call(target, instance, argumentsList);\r\n      return isObject(result) ? result : instance;\r\n    },\r\n    // 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\r\n    defineProperty: wrap(defineProperty),\r\n    // 26.1.4 Reflect.deleteProperty(target, propertyKey)\r\n    deleteProperty: function(target, propertyKey){\r\n      var desc = getOwnDescriptor(assertObject(target), propertyKey);\r\n      return desc && !desc.configurable ? false : delete target[propertyKey];\r\n    },\r\n    // 26.1.5 Reflect.enumerate(target)\r\n    enumerate: function(target){\r\n      return new Enumerate(assertObject(target));\r\n    },\r\n    // 26.1.6 Reflect.get(target, propertyKey [, receiver])\r\n    get: reflectGet,\r\n    // 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\r\n    getOwnPropertyDescriptor: function(target, propertyKey){\r\n      return getOwnDescriptor(assertObject(target), propertyKey);\r\n    },\r\n    // 26.1.8 Reflect.getPrototypeOf(target)\r\n    getPrototypeOf: function(target){\r\n      return getPrototypeOf(assertObject(target));\r\n    },\r\n    // 26.1.9 Reflect.has(target, propertyKey)\r\n    has: function(target, propertyKey){\r\n      return propertyKey in target;\r\n    },\r\n    // 26.1.10 Reflect.isExtensible(target)\r\n    isExtensible: function(target){\r\n      return !!isExtensible(assertObject(target));\r\n    },\r\n    // 26.1.11 Reflect.ownKeys(target)\r\n    ownKeys: ownKeys,\r\n    // 26.1.12 Reflect.preventExtensions(target)\r\n    preventExtensions: wrap(Object.preventExtensions || returnIt),\r\n    // 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\r\n    set: reflectSet\r\n  }\r\n  // 26.1.14 Reflect.setPrototypeOf(target, proto)\r\n  if(setPrototypeOf)reflect.setPrototypeOf = function(target, proto){\r\n    return setPrototypeOf(assertObject(target), proto), true;\r\n  };\r\n  \r\n  $define(GLOBAL, {Reflect: {}});\r\n  $define(STATIC, 'Reflect', reflect);\r\n}();\n\n/******************************************************************************\n * Module : es7.proposals                                                     *\n ******************************************************************************/\n\n!function(){\r\n  $define(PROTO, ARRAY, {\r\n    // https://github.com/domenic/Array.prototype.includes\r\n    includes: createArrayContains(true)\r\n  });\r\n  $define(PROTO, STRING, {\r\n    // https://github.com/mathiasbynens/String.prototype.at\r\n    at: createPointAt(true)\r\n  });\r\n  \r\n  function createObjectToArray(isEntries){\r\n    return function(object){\r\n      var O      = toObject(object)\r\n        , keys   = getKeys(object)\r\n        , length = keys.length\r\n        , i      = 0\r\n        , result = Array(length)\r\n        , key;\r\n      if(isEntries)while(length > i)result[i] = [key = keys[i++], O[key]];\r\n      else while(length > i)result[i] = O[keys[i++]];\r\n      return result;\r\n    }\r\n  }\r\n  $define(STATIC, OBJECT, {\r\n    // https://gist.github.com/WebReflection/9353781\r\n    getOwnPropertyDescriptors: function(object){\r\n      var O      = toObject(object)\r\n        , result = {};\r\n      forEach.call(ownKeys(O), function(key){\r\n        defineProperty(result, key, descriptor(0, getOwnDescriptor(O, key)));\r\n      });\r\n      return result;\r\n    },\r\n    // https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-04/apr-9.md#51-objectentries-objectvalues\r\n    values:  createObjectToArray(false),\r\n    entries: createObjectToArray(true)\r\n  });\r\n  $define(STATIC, REGEXP, {\r\n    // https://gist.github.com/kangax/9698100\r\n    escape: createReplacer(/([\\\\\\-[\\]{}()*+?.,^$|])/g, '\\\\$1', true)\r\n  });\r\n}();\n\n/******************************************************************************\n * Module : es7.abstract-refs                                                 *\n ******************************************************************************/\n\n// https://github.com/zenparsing/es-abstract-refs\r\n!function(REFERENCE){\r\n  REFERENCE_GET = getWellKnownSymbol(REFERENCE+'Get', true);\r\n  var REFERENCE_SET = getWellKnownSymbol(REFERENCE+SET, true)\r\n    , REFERENCE_DELETE = getWellKnownSymbol(REFERENCE+'Delete', true);\r\n  \r\n  $define(STATIC, SYMBOL, {\r\n    referenceGet: REFERENCE_GET,\r\n    referenceSet: REFERENCE_SET,\r\n    referenceDelete: REFERENCE_DELETE\r\n  });\r\n  \r\n  hidden(FunctionProto, REFERENCE_GET, returnThis);\r\n  \r\n  function setMapMethods(Constructor){\r\n    if(Constructor){\r\n      var MapProto = Constructor[PROTOTYPE];\r\n      hidden(MapProto, REFERENCE_GET, MapProto.get);\r\n      hidden(MapProto, REFERENCE_SET, MapProto.set);\r\n      hidden(MapProto, REFERENCE_DELETE, MapProto['delete']);\r\n    }\r\n  }\r\n  setMapMethods(Map);\r\n  setMapMethods(WeakMap);\r\n}('reference');\n\n/******************************************************************************\n * Module : core.dict                                                         *\n ******************************************************************************/\n\n!function(DICT){\r\n  Dict = function(iterable){\r\n    var dict = create(null);\r\n    if(iterable != undefined){\r\n      if(isIterable(iterable)){\r\n        forOf(iterable, true, function(key, value){\r\n          dict[key] = value;\r\n        });\r\n      } else assign(dict, iterable);\r\n    }\r\n    return dict;\r\n  }\r\n  Dict[PROTOTYPE] = null;\r\n  \r\n  function DictIterator(iterated, kind){\r\n    set(this, ITER, {o: toObject(iterated), a: getKeys(iterated), i: 0, k: kind});\r\n  }\r\n  createIterator(DictIterator, DICT, function(){\r\n    var iter = this[ITER]\r\n      , O    = iter.o\r\n      , keys = iter.a\r\n      , kind = iter.k\r\n      , key;\r\n    do {\r\n      if(iter.i >= keys.length){\r\n        iter.o = undefined;\r\n        return iterResult(1);\r\n      }\r\n    } while(!has(O, key = keys[iter.i++]));\r\n    if(kind == KEY)  return iterResult(0, key);\r\n    if(kind == VALUE)return iterResult(0, O[key]);\r\n                     return iterResult(0, [key, O[key]]);\r\n  });\r\n  function createDictIter(kind){\r\n    return function(it){\r\n      return new DictIterator(it, kind);\r\n    }\r\n  }\r\n  \r\n  /*\r\n   * 0 -> forEach\r\n   * 1 -> map\r\n   * 2 -> filter\r\n   * 3 -> some\r\n   * 4 -> every\r\n   * 5 -> find\r\n   * 6 -> findKey\r\n   * 7 -> mapPairs\r\n   */\r\n  function createDictMethod(type){\r\n    var isMap    = type == 1\r\n      , isEvery  = type == 4;\r\n    return function(object, callbackfn, that /* = undefined */){\r\n      var f      = ctx(callbackfn, that, 3)\r\n        , O      = toObject(object)\r\n        , result = isMap || type == 7 || type == 2 ? new (generic(this, Dict)) : undefined\r\n        , key, val, res;\r\n      for(key in O)if(has(O, key)){\r\n        val = O[key];\r\n        res = f(val, key, object);\r\n        if(type){\r\n          if(isMap)result[key] = res;             // map\r\n          else if(res)switch(type){\r\n            case 2: result[key] = val; break      // filter\r\n            case 3: return true;                  // some\r\n            case 5: return val;                   // find\r\n            case 6: return key;                   // findKey\r\n            case 7: result[res[0]] = res[1];      // mapPairs\r\n          } else if(isEvery)return false;         // every\r\n        }\r\n      }\r\n      return type == 3 || isEvery ? isEvery : result;\r\n    }\r\n  }\r\n  function createDictReduce(isTurn){\r\n    return function(object, mapfn, init){\r\n      assertFunction(mapfn);\r\n      var O      = toObject(object)\r\n        , keys   = getKeys(O)\r\n        , length = keys.length\r\n        , i      = 0\r\n        , memo, key, result;\r\n      if(isTurn)memo = init == undefined ? new (generic(this, Dict)) : Object(init);\r\n      else if(arguments.length < 3){\r\n        assert(length, REDUCE_ERROR);\r\n        memo = O[keys[i++]];\r\n      } else memo = Object(init);\r\n      while(length > i)if(has(O, key = keys[i++])){\r\n        result = mapfn(memo, O[key], key, object);\r\n        if(isTurn){\r\n          if(result === false)break;\r\n        } else memo = result;\r\n      }\r\n      return memo;\r\n    }\r\n  }\r\n  var findKey = createDictMethod(6);\r\n  function includes(object, el){\r\n    return (el == el ? keyOf(object, el) : findKey(object, sameNaN)) !== undefined;\r\n  }\r\n  \r\n  var dictMethods = {\r\n    keys:    createDictIter(KEY),\r\n    values:  createDictIter(VALUE),\r\n    entries: createDictIter(KEY+VALUE),\r\n    forEach: createDictMethod(0),\r\n    map:     createDictMethod(1),\r\n    filter:  createDictMethod(2),\r\n    some:    createDictMethod(3),\r\n    every:   createDictMethod(4),\r\n    find:    createDictMethod(5),\r\n    findKey: findKey,\r\n    mapPairs:createDictMethod(7),\r\n    reduce:  createDictReduce(false),\r\n    turn:    createDictReduce(true),\r\n    keyOf:   keyOf,\r\n    includes:includes,\r\n    // Has / get / set own property\r\n    has: has,\r\n    get: get,\r\n    set: createDefiner(0),\r\n    isDict: function(it){\r\n      return isObject(it) && getPrototypeOf(it) === Dict[PROTOTYPE];\r\n    }\r\n  };\r\n  \r\n  if(REFERENCE_GET)for(var key in dictMethods)!function(fn){\r\n    function method(){\r\n      for(var args = [this], i = 0; i < arguments.length;)args.push(arguments[i++]);\r\n      return invoke(fn, args);\r\n    }\r\n    fn[REFERENCE_GET] = function(){\r\n      return method;\r\n    }\r\n  }(dictMethods[key]);\r\n  \r\n  $define(GLOBAL + FORCED, {Dict: assignHidden(Dict, dictMethods)});\r\n}('Dict');\n\n/******************************************************************************\n * Module : core.$for                                                         *\n ******************************************************************************/\n\n!function(ENTRIES, FN){  \r\n  function $for(iterable, entries){\r\n    if(!(this instanceof $for))return new $for(iterable, entries);\r\n    this[ITER]    = getIterator(iterable);\r\n    this[ENTRIES] = !!entries;\r\n  }\r\n  \r\n  createIterator($for, 'Wrapper', function(){\r\n    return this[ITER].next();\r\n  });\r\n  var $forProto = $for[PROTOTYPE];\r\n  setIterator($forProto, function(){\r\n    return this[ITER]; // unwrap\r\n  });\r\n  \r\n  function createChainIterator(next){\r\n    function Iter(I, fn, that){\r\n      this[ITER]    = getIterator(I);\r\n      this[ENTRIES] = I[ENTRIES];\r\n      this[FN]      = ctx(fn, that, I[ENTRIES] ? 2 : 1);\r\n    }\r\n    createIterator(Iter, 'Chain', next, $forProto);\r\n    setIterator(Iter[PROTOTYPE], returnThis); // override $forProto iterator\r\n    return Iter;\r\n  }\r\n  \r\n  var MapIter = createChainIterator(function(){\r\n    var step = this[ITER].next();\r\n    return step.done ? step : iterResult(0, stepCall(this[FN], step.value, this[ENTRIES]));\r\n  });\r\n  \r\n  var FilterIter = createChainIterator(function(){\r\n    for(;;){\r\n      var step = this[ITER].next();\r\n      if(step.done || stepCall(this[FN], step.value, this[ENTRIES]))return step;\r\n    }\r\n  });\r\n  \r\n  assignHidden($forProto, {\r\n    of: function(fn, that){\r\n      forOf(this, this[ENTRIES], fn, that);\r\n    },\r\n    array: function(fn, that){\r\n      var result = [];\r\n      forOf(fn != undefined ? this.map(fn, that) : this, false, push, result);\r\n      return result;\r\n    },\r\n    filter: function(fn, that){\r\n      return new FilterIter(this, fn, that);\r\n    },\r\n    map: function(fn, that){\r\n      return new MapIter(this, fn, that);\r\n    }\r\n  });\r\n  \r\n  $for.isIterable  = isIterable;\r\n  $for.getIterator = getIterator;\r\n  \r\n  $define(GLOBAL + FORCED, {$for: $for});\r\n}('entries', safeSymbol('fn'));\n\n/******************************************************************************\n * Module : core.delay                                                        *\n ******************************************************************************/\n\n// https://esdiscuss.org/topic/promise-returning-delay-function\r\n$define(GLOBAL + FORCED, {\r\n  delay: function(time){\r\n    return new Promise(function(resolve){\r\n      setTimeout(resolve, time, true);\r\n    });\r\n  }\r\n});\n\n/******************************************************************************\n * Module : core.binding                                                      *\n ******************************************************************************/\n\n!function(_, toLocaleString){\r\n  // Placeholder\r\n  core._ = path._ = path._ || {};\r\n\r\n  $define(PROTO + FORCED, FUNCTION, {\r\n    part: part,\r\n    only: function(numberArguments, that /* = @ */){\r\n      var fn     = assertFunction(this)\r\n        , n      = toLength(numberArguments)\r\n        , isThat = arguments.length > 1;\r\n      return function(/* ...args */){\r\n        var length = min(n, arguments.length)\r\n          , args   = Array(length)\r\n          , i      = 0;\r\n        while(length > i)args[i] = arguments[i++];\r\n        return invoke(fn, args, isThat ? that : this);\r\n      }\r\n    }\r\n  });\r\n  \r\n  function tie(key){\r\n    var that  = this\r\n      , bound = {};\r\n    return hidden(that, _, function(key){\r\n      if(key === undefined || !(key in that))return toLocaleString.call(that);\r\n      return has(bound, key) ? bound[key] : (bound[key] = ctx(that[key], that, -1));\r\n    })[_](key);\r\n  }\r\n  \r\n  hidden(path._, TO_STRING, function(){\r\n    return _;\r\n  });\r\n  \r\n  hidden(ObjectProto, _, tie);\r\n  DESC || hidden(ArrayProto, _, tie);\r\n  // IE8- dirty hack - redefined toLocaleString is not enumerable\r\n}(DESC ? uid('tie') : TO_LOCALE, ObjectProto[TO_LOCALE]);\n\n/******************************************************************************\n * Module : core.object                                                       *\n ******************************************************************************/\n\n!function(){\r\n  function define(target, mixin){\r\n    var keys   = ownKeys(toObject(mixin))\r\n      , length = keys.length\r\n      , i = 0, key;\r\n    while(length > i)defineProperty(target, key = keys[i++], getOwnDescriptor(mixin, key));\r\n    return target;\r\n  };\r\n  $define(STATIC + FORCED, OBJECT, {\r\n    isObject: isObject,\r\n    classof: classof,\r\n    define: define,\r\n    make: function(proto, mixin){\r\n      return define(create(proto), mixin);\r\n    }\r\n  });\r\n}();\n\n/******************************************************************************\n * Module : core.array                                                        *\n ******************************************************************************/\n\n$define(PROTO + FORCED, ARRAY, {\r\n  turn: function(fn, target /* = [] */){\r\n    assertFunction(fn);\r\n    var memo   = target == undefined ? [] : Object(target)\r\n      , O      = ES5Object(this)\r\n      , length = toLength(O.length)\r\n      , index  = 0;\r\n    while(length > index)if(fn(memo, O[index], index++, this) === false)break;\r\n    return memo;\r\n  }\r\n});\r\nif(framework)ArrayUnscopables.turn = true;\n\n/******************************************************************************\n * Module : core.number                                                       *\n ******************************************************************************/\n\n!function(numberMethods){  \r\n  function NumberIterator(iterated){\r\n    set(this, ITER, {l: toLength(iterated), i: 0});\r\n  }\r\n  createIterator(NumberIterator, NUMBER, function(){\r\n    var iter = this[ITER]\r\n      , i    = iter.i++;\r\n    return i < iter.l ? iterResult(0, i) : iterResult(1);\r\n  });\r\n  defineIterator(Number, NUMBER, function(){\r\n    return new NumberIterator(this);\r\n  });\r\n  \r\n  numberMethods.random = function(lim /* = 0 */){\r\n    var a = +this\r\n      , b = lim == undefined ? 0 : +lim\r\n      , m = min(a, b);\r\n    return random() * (max(a, b) - m) + m;\r\n  };\r\n\r\n  forEach.call(array(\r\n      // ES3:\r\n      'round,floor,ceil,abs,sin,asin,cos,acos,tan,atan,exp,sqrt,max,min,pow,atan2,' +\r\n      // ES6:\r\n      'acosh,asinh,atanh,cbrt,clz32,cosh,expm1,hypot,imul,log1p,log10,log2,sign,sinh,tanh,trunc'\r\n    ), function(key){\r\n      var fn = Math[key];\r\n      if(fn)numberMethods[key] = function(/* ...args */){\r\n        // ie9- dont support strict mode & convert `this` to object -> convert it to number\r\n        var args = [+this]\r\n          , i    = 0;\r\n        while(arguments.length > i)args.push(arguments[i++]);\r\n        return invoke(fn, args);\r\n      }\r\n    }\r\n  );\r\n  \r\n  $define(PROTO + FORCED, NUMBER, numberMethods);\r\n}({});\n\n/******************************************************************************\n * Module : core.string                                                       *\n ******************************************************************************/\n\n!function(){\r\n  var escapeHTMLDict = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&apos;'\r\n  }, unescapeHTMLDict = {}, key;\r\n  for(key in escapeHTMLDict)unescapeHTMLDict[escapeHTMLDict[key]] = key;\r\n  $define(PROTO + FORCED, STRING, {\r\n    escapeHTML:   createReplacer(/[&<>\"']/g, escapeHTMLDict),\r\n    unescapeHTML: createReplacer(/&(?:amp|lt|gt|quot|apos);/g, unescapeHTMLDict)\r\n  });\r\n}();\n\n/******************************************************************************\n * Module : core.date                                                         *\n ******************************************************************************/\n\n!function(formatRegExp, flexioRegExp, locales, current, SECONDS, MINUTES, HOURS, MONTH, YEAR){\r\n  function createFormat(prefix){\r\n    return function(template, locale /* = current */){\r\n      var that = this\r\n        , dict = locales[has(locales, locale) ? locale : current];\r\n      function get(unit){\r\n        return that[prefix + unit]();\r\n      }\r\n      return String(template).replace(formatRegExp, function(part){\r\n        switch(part){\r\n          case 's'  : return get(SECONDS);                  // Seconds : 0-59\r\n          case 'ss' : return lz(get(SECONDS));              // Seconds : 00-59\r\n          case 'm'  : return get(MINUTES);                  // Minutes : 0-59\r\n          case 'mm' : return lz(get(MINUTES));              // Minutes : 00-59\r\n          case 'h'  : return get(HOURS);                    // Hours   : 0-23\r\n          case 'hh' : return lz(get(HOURS));                // Hours   : 00-23\r\n          case 'D'  : return get(DATE);                     // Date    : 1-31\r\n          case 'DD' : return lz(get(DATE));                 // Date    : 01-31\r\n          case 'W'  : return dict[0][get('Day')];           // Day     : Понедельник\r\n          case 'N'  : return get(MONTH) + 1;                // Month   : 1-12\r\n          case 'NN' : return lz(get(MONTH) + 1);            // Month   : 01-12\r\n          case 'M'  : return dict[2][get(MONTH)];           // Month   : Январь\r\n          case 'MM' : return dict[1][get(MONTH)];           // Month   : Января\r\n          case 'Y'  : return get(YEAR);                     // Year    : 2014\r\n          case 'YY' : return lz(get(YEAR) % 100);           // Year    : 14\r\n        } return part;\r\n      });\r\n    }\r\n  }\r\n  function addLocale(lang, locale){\r\n    function split(index){\r\n      var result = [];\r\n      forEach.call(array(locale.months), function(it){\r\n        result.push(it.replace(flexioRegExp, '$' + index));\r\n      });\r\n      return result;\r\n    }\r\n    locales[lang] = [array(locale.weekdays), split(1), split(2)];\r\n    return core;\r\n  }\r\n  $define(PROTO + FORCED, DATE, {\r\n    format:    createFormat('get'),\r\n    formatUTC: createFormat('getUTC')\r\n  });\r\n  addLocale(current, {\r\n    weekdays: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday',\r\n    months: 'January,February,March,April,May,June,July,August,September,October,November,December'\r\n  });\r\n  addLocale('ru', {\r\n    weekdays: 'Воскресенье,Понедельник,Вторник,Среда,Четверг,Пятница,Суббота',\r\n    months: 'Январ:я|ь,Феврал:я|ь,Март:а|,Апрел:я|ь,Ма:я|й,Июн:я|ь,' +\r\n            'Июл:я|ь,Август:а|,Сентябр:я|ь,Октябр:я|ь,Ноябр:я|ь,Декабр:я|ь'\r\n  });\r\n  core.locale = function(locale){\r\n    return has(locales, locale) ? current = locale : current;\r\n  };\r\n  core.addLocale = addLocale;\r\n}(/\\b\\w\\w?\\b/g, /:(.*)\\|(.*)$/, {}, 'en', 'Seconds', 'Minutes', 'Hours', 'Month', 'FullYear');\n\n/******************************************************************************\n * Module : core.global                                                       *\n ******************************************************************************/\n\n$define(GLOBAL + FORCED, {global: global});\n\n/******************************************************************************\n * Module : js.array.statics                                                  *\n ******************************************************************************/\n\n// JavaScript 1.6 / Strawman array statics shim\r\n!function(arrayStatics){\r\n  function setArrayStatics(keys, length){\r\n    forEach.call(array(keys), function(key){\r\n      if(key in ArrayProto)arrayStatics[key] = ctx(call, ArrayProto[key], length);\r\n    });\r\n  }\r\n  setArrayStatics('pop,reverse,shift,keys,values,entries', 1);\r\n  setArrayStatics('indexOf,every,some,forEach,map,filter,find,findIndex,includes', 3);\r\n  setArrayStatics('join,slice,concat,push,splice,unshift,sort,lastIndexOf,' +\r\n                  'reduce,reduceRight,copyWithin,fill,turn');\r\n  $define(STATIC, ARRAY, arrayStatics);\r\n}({});\n\n/******************************************************************************\n * Module : web.dom.itarable                                                  *\n ******************************************************************************/\n\n!function(NodeList){\r\n  if(framework && NodeList && !(SYMBOL_ITERATOR in NodeList[PROTOTYPE])){\r\n    hidden(NodeList[PROTOTYPE], SYMBOL_ITERATOR, Iterators[ARRAY]);\r\n  }\r\n  Iterators.NodeList = Iterators[ARRAY];\r\n}(global.NodeList);\n\n/******************************************************************************\n * Module : core.log                                                          *\n ******************************************************************************/\n\n!function(log, enabled){\r\n  // Methods from https://github.com/DeveloperToolsWG/console-object/blob/master/api.md\r\n  forEach.call(array('assert,clear,count,debug,dir,dirxml,error,exception,' +\r\n      'group,groupCollapsed,groupEnd,info,isIndependentlyComposed,log,' +\r\n      'markTimeline,profile,profileEnd,table,time,timeEnd,timeline,' +\r\n      'timelineEnd,timeStamp,trace,warn'), function(key){\r\n    log[key] = function(){\r\n      if(enabled && key in console)return apply.call(console[key], console, arguments);\r\n    };\r\n  });\r\n  $define(GLOBAL + FORCED, {log: assign(log.log, log, {\r\n    enable: function(){\r\n      enabled = true;\r\n    },\r\n    disable: function(){\r\n      enabled = false;\r\n    }\r\n  })});\r\n}({}, true);\n}(typeof self != 'undefined' && self.Math === Math ? self : Function('return this')(), false);\nmodule.exports = { \"default\": module.exports, __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/babel-runtime/core-js.js\n ** module id = 13\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/babel-runtime/core-js.js?");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {(function() {\n  var Bacon, BufferingSource, Bus, CompositeUnsubscribe, ConsumingSource, Desc, Dispatcher, End, Error, Event, EventStream, Exception, Initial, Next, None, Observable, Property, PropertyDispatcher, Some, Source, UpdateBarrier, _, addPropertyInitValueToStream, assert, assertArray, assertEventStream, assertFunction, assertNoArguments, assertObservable, assertString, cloneArray, constantToFunction, containsDuplicateDeps, convertArgsToFunction, describe, endEvent, eventIdCounter, eventMethods, findDeps, findHandlerMethods, flatMap_, former, idCounter, initialEvent, isArray, isFieldKey, isObservable, latter, liftCallback, makeFunction, makeFunctionArgs, makeFunction_, makeObservable, makeSpawner, nextEvent, nop, partiallyApplied, recursionDepth, ref, registerObs, spys, toCombinator, toEvent, toFieldExtractor, toFieldKey, toOption, toSimpleExtractor, valueAndEnd, withDescription, withMethodCallSupport,\n    hasProp = {}.hasOwnProperty,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    slice = [].slice,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  Bacon = {\n    toString: function() {\n      return \"Bacon\";\n    }\n  };\n\n  Bacon.version = '0.7.53';\n\n  Exception = (typeof global !== \"undefined\" && global !== null ? global : this).Error;\n\n  nop = function() {};\n\n  latter = function(_, x) {\n    return x;\n  };\n\n  former = function(x, _) {\n    return x;\n  };\n\n  cloneArray = function(xs) {\n    return xs.slice(0);\n  };\n\n  assert = function(message, condition) {\n    if (!condition) {\n      throw new Exception(message);\n    }\n  };\n\n  assertEventStream = function(event) {\n    if (!(event instanceof EventStream)) {\n      throw new Exception(\"not an EventStream : \" + event);\n    }\n  };\n\n  assertObservable = function(event) {\n    if (!(event instanceof Observable)) {\n      throw new Exception(\"not an Observable : \" + event);\n    }\n  };\n\n  assertFunction = function(f) {\n    return assert(\"not a function : \" + f, _.isFunction(f));\n  };\n\n  isArray = function(xs) {\n    return xs instanceof Array;\n  };\n\n  isObservable = function(x) {\n    return x instanceof Observable;\n  };\n\n  assertArray = function(xs) {\n    if (!isArray(xs)) {\n      throw new Exception(\"not an array : \" + xs);\n    }\n  };\n\n  assertNoArguments = function(args) {\n    return assert(\"no arguments supported\", args.length === 0);\n  };\n\n  assertString = function(x) {\n    if (typeof x !== \"string\") {\n      throw new Exception(\"not a string : \" + x);\n    }\n  };\n\n  _ = {\n    indexOf: Array.prototype.indexOf ? function(xs, x) {\n      return xs.indexOf(x);\n    } : function(xs, x) {\n      var i, j, len1, y;\n      for (i = j = 0, len1 = xs.length; j < len1; i = ++j) {\n        y = xs[i];\n        if (x === y) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    indexWhere: function(xs, f) {\n      var i, j, len1, y;\n      for (i = j = 0, len1 = xs.length; j < len1; i = ++j) {\n        y = xs[i];\n        if (f(y)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    head: function(xs) {\n      return xs[0];\n    },\n    always: function(x) {\n      return function() {\n        return x;\n      };\n    },\n    negate: function(f) {\n      return function(x) {\n        return !f(x);\n      };\n    },\n    empty: function(xs) {\n      return xs.length === 0;\n    },\n    tail: function(xs) {\n      return xs.slice(1, xs.length);\n    },\n    filter: function(f, xs) {\n      var filtered, j, len1, x;\n      filtered = [];\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        if (f(x)) {\n          filtered.push(x);\n        }\n      }\n      return filtered;\n    },\n    map: function(f, xs) {\n      var j, len1, results, x;\n      results = [];\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        results.push(f(x));\n      }\n      return results;\n    },\n    each: function(xs, f) {\n      var key, value;\n      for (key in xs) {\n        value = xs[key];\n        f(key, value);\n      }\n      return void 0;\n    },\n    toArray: function(xs) {\n      if (isArray(xs)) {\n        return xs;\n      } else {\n        return [xs];\n      }\n    },\n    contains: function(xs, x) {\n      return _.indexOf(xs, x) !== -1;\n    },\n    id: function(x) {\n      return x;\n    },\n    last: function(xs) {\n      return xs[xs.length - 1];\n    },\n    all: function(xs, f) {\n      var j, len1, x;\n      if (f == null) {\n        f = _.id;\n      }\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    },\n    any: function(xs, f) {\n      var j, len1, x;\n      if (f == null) {\n        f = _.id;\n      }\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        if (f(x)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    without: function(x, xs) {\n      return _.filter((function(y) {\n        return y !== x;\n      }), xs);\n    },\n    remove: function(x, xs) {\n      var i;\n      i = _.indexOf(xs, x);\n      if (i >= 0) {\n        return xs.splice(i, 1);\n      }\n    },\n    fold: function(xs, seed, f) {\n      var j, len1, x;\n      for (j = 0, len1 = xs.length; j < len1; j++) {\n        x = xs[j];\n        seed = f(seed, x);\n      }\n      return seed;\n    },\n    flatMap: function(f, xs) {\n      return _.fold(xs, [], (function(ys, x) {\n        return ys.concat(f(x));\n      }));\n    },\n    cached: function(f) {\n      var value;\n      value = None;\n      return function() {\n        if (value === None) {\n          value = f();\n          f = void 0;\n        }\n        return value;\n      };\n    },\n    isFunction: function(f) {\n      return typeof f === \"function\";\n    },\n    toString: function(obj) {\n      var ex, internals, key, value;\n      try {\n        recursionDepth++;\n        if (obj == null) {\n          return \"undefined\";\n        } else if (_.isFunction(obj)) {\n          return \"function\";\n        } else if (isArray(obj)) {\n          if (recursionDepth > 5) {\n            return \"[..]\";\n          }\n          return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n        } else if (((obj != null ? obj.toString : void 0) != null) && obj.toString !== Object.prototype.toString) {\n          return obj.toString();\n        } else if (typeof obj === \"object\") {\n          if (recursionDepth > 5) {\n            return \"{..}\";\n          }\n          internals = (function() {\n            var results;\n            results = [];\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              value = (function() {\n                try {\n                  return obj[key];\n                } catch (_error) {\n                  ex = _error;\n                  return ex;\n                }\n              })();\n              results.push(_.toString(key) + \":\" + _.toString(value));\n            }\n            return results;\n          })();\n          return \"{\" + internals + \"}\";\n        } else {\n          return obj;\n        }\n      } finally {\n        recursionDepth--;\n      }\n    }\n  };\n\n  recursionDepth = 0;\n\n  Bacon._ = _;\n\n  UpdateBarrier = Bacon.UpdateBarrier = (function() {\n    var afterTransaction, afters, aftersIndex, currentEventId, flush, flushDepsOf, flushWaiters, hasWaiters, inTransaction, rootEvent, waiterObs, waiters, whenDoneWith, wrappedSubscribe;\n    rootEvent = void 0;\n    waiterObs = [];\n    waiters = {};\n    afters = [];\n    aftersIndex = 0;\n    afterTransaction = function(f) {\n      if (rootEvent) {\n        return afters.push(f);\n      } else {\n        return f();\n      }\n    };\n    whenDoneWith = function(obs, f) {\n      var obsWaiters;\n      if (rootEvent) {\n        obsWaiters = waiters[obs.id];\n        if (obsWaiters == null) {\n          obsWaiters = waiters[obs.id] = [f];\n          return waiterObs.push(obs);\n        } else {\n          return obsWaiters.push(f);\n        }\n      } else {\n        return f();\n      }\n    };\n    flush = function() {\n      while (waiterObs.length > 0) {\n        flushWaiters(0);\n      }\n      return void 0;\n    };\n    flushWaiters = function(index) {\n      var f, j, len1, obs, obsId, obsWaiters;\n      obs = waiterObs[index];\n      obsId = obs.id;\n      obsWaiters = waiters[obsId];\n      waiterObs.splice(index, 1);\n      delete waiters[obsId];\n      flushDepsOf(obs);\n      for (j = 0, len1 = obsWaiters.length; j < len1; j++) {\n        f = obsWaiters[j];\n        f();\n      }\n      return void 0;\n    };\n    flushDepsOf = function(obs) {\n      var dep, deps, index, j, len1;\n      deps = obs.internalDeps();\n      for (j = 0, len1 = deps.length; j < len1; j++) {\n        dep = deps[j];\n        flushDepsOf(dep);\n        if (waiters[dep.id]) {\n          index = _.indexOf(waiterObs, dep);\n          flushWaiters(index);\n        }\n      }\n      return void 0;\n    };\n    inTransaction = function(event, context, f, args) {\n      var after, result;\n      if (rootEvent) {\n        return f.apply(context, args);\n      } else {\n        rootEvent = event;\n        try {\n          result = f.apply(context, args);\n          flush();\n        } finally {\n          rootEvent = void 0;\n          while (aftersIndex < afters.length) {\n            after = afters[aftersIndex];\n            aftersIndex++;\n            after();\n          }\n          aftersIndex = 0;\n          afters = [];\n        }\n        return result;\n      }\n    };\n    currentEventId = function() {\n      if (rootEvent) {\n        return rootEvent.id;\n      } else {\n        return void 0;\n      }\n    };\n    wrappedSubscribe = function(obs, sink) {\n      var doUnsub, shouldUnsub, unsub, unsubd;\n      unsubd = false;\n      shouldUnsub = false;\n      doUnsub = function() {\n        return shouldUnsub = true;\n      };\n      unsub = function() {\n        unsubd = true;\n        return doUnsub();\n      };\n      doUnsub = obs.dispatcher.subscribe(function(event) {\n        return afterTransaction(function() {\n          var reply;\n          if (!unsubd) {\n            reply = sink(event);\n            if (reply === Bacon.noMore) {\n              return unsub();\n            }\n          }\n        });\n      });\n      if (shouldUnsub) {\n        doUnsub();\n      }\n      return unsub;\n    };\n    hasWaiters = function() {\n      return waiterObs.length > 0;\n    };\n    return {\n      whenDoneWith: whenDoneWith,\n      hasWaiters: hasWaiters,\n      inTransaction: inTransaction,\n      currentEventId: currentEventId,\n      wrappedSubscribe: wrappedSubscribe,\n      afterTransaction: afterTransaction\n    };\n  })();\n\n  Source = (function() {\n    function Source(obs1, sync, lazy1) {\n      this.obs = obs1;\n      this.sync = sync;\n      this.lazy = lazy1 != null ? lazy1 : false;\n      this.queue = [];\n    }\n\n    Source.prototype.subscribe = function(sink) {\n      return this.obs.dispatcher.subscribe(sink);\n    };\n\n    Source.prototype.toString = function() {\n      return this.obs.toString();\n    };\n\n    Source.prototype.markEnded = function() {\n      return this.ended = true;\n    };\n\n    Source.prototype.consume = function() {\n      if (this.lazy) {\n        return {\n          value: _.always(this.queue[0])\n        };\n      } else {\n        return this.queue[0];\n      }\n    };\n\n    Source.prototype.push = function(x) {\n      return this.queue = [x];\n    };\n\n    Source.prototype.mayHave = function() {\n      return true;\n    };\n\n    Source.prototype.hasAtLeast = function() {\n      return this.queue.length;\n    };\n\n    Source.prototype.flatten = true;\n\n    return Source;\n\n  })();\n\n  ConsumingSource = (function(superClass) {\n    extend(ConsumingSource, superClass);\n\n    function ConsumingSource() {\n      return ConsumingSource.__super__.constructor.apply(this, arguments);\n    }\n\n    ConsumingSource.prototype.consume = function() {\n      return this.queue.shift();\n    };\n\n    ConsumingSource.prototype.push = function(x) {\n      return this.queue.push(x);\n    };\n\n    ConsumingSource.prototype.mayHave = function(c) {\n      return !this.ended || this.queue.length >= c;\n    };\n\n    ConsumingSource.prototype.hasAtLeast = function(c) {\n      return this.queue.length >= c;\n    };\n\n    ConsumingSource.prototype.flatten = false;\n\n    return ConsumingSource;\n\n  })(Source);\n\n  BufferingSource = (function(superClass) {\n    extend(BufferingSource, superClass);\n\n    function BufferingSource(obs) {\n      BufferingSource.__super__.constructor.call(this, obs, true);\n    }\n\n    BufferingSource.prototype.consume = function() {\n      var values;\n      values = this.queue;\n      this.queue = [];\n      return {\n        value: function() {\n          return values;\n        }\n      };\n    };\n\n    BufferingSource.prototype.push = function(x) {\n      return this.queue.push(x.value());\n    };\n\n    BufferingSource.prototype.hasAtLeast = function() {\n      return true;\n    };\n\n    return BufferingSource;\n\n  })(Source);\n\n  Source.isTrigger = function(s) {\n    if (s instanceof Source) {\n      return s.sync;\n    } else {\n      return s instanceof EventStream;\n    }\n  };\n\n  Source.fromObservable = function(s) {\n    if (s instanceof Source) {\n      return s;\n    } else if (s instanceof Property) {\n      return new Source(s, false);\n    } else {\n      return new ConsumingSource(s, true);\n    }\n  };\n\n  Desc = (function() {\n    function Desc(context1, method1, args1) {\n      this.context = context1;\n      this.method = method1;\n      this.args = args1;\n      this.cached = void 0;\n    }\n\n    Desc.prototype.deps = function() {\n      return this.cached || (this.cached = findDeps([this.context].concat(this.args)));\n    };\n\n    Desc.prototype.apply = function(obs) {\n      obs.desc = this;\n      return obs;\n    };\n\n    Desc.prototype.toString = function() {\n      return _.toString(this.context) + \".\" + _.toString(this.method) + \"(\" + _.map(_.toString, this.args) + \")\";\n    };\n\n    return Desc;\n\n  })();\n\n  describe = function() {\n    var args, context, method;\n    context = arguments[0], method = arguments[1], args = 3 <= arguments.length ? slice.call(arguments, 2) : [];\n    if ((context || method) instanceof Desc) {\n      return context || method;\n    } else {\n      return new Desc(context, method, args);\n    }\n  };\n\n  withDescription = function() {\n    var desc, j, obs;\n    desc = 2 <= arguments.length ? slice.call(arguments, 0, j = arguments.length - 1) : (j = 0, []), obs = arguments[j++];\n    return describe.apply(null, desc).apply(obs);\n  };\n\n  findDeps = function(x) {\n    if (isArray(x)) {\n      return _.flatMap(findDeps, x);\n    } else if (isObservable(x)) {\n      return [x];\n    } else if (x instanceof Source) {\n      return [x.obs];\n    } else {\n      return [];\n    }\n  };\n\n  withMethodCallSupport = function(wrapped) {\n    return function() {\n      var args, context, f, methodName;\n      f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      if (typeof f === \"object\" && args.length) {\n        context = f;\n        methodName = args[0];\n        f = function() {\n          return context[methodName].apply(context, arguments);\n        };\n        args = args.slice(1);\n      }\n      return wrapped.apply(null, [f].concat(slice.call(args)));\n    };\n  };\n\n  makeFunctionArgs = function(args) {\n    args = Array.prototype.slice.call(args);\n    return makeFunction_.apply(null, args);\n  };\n\n  partiallyApplied = function(f, applied) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return f.apply(null, applied.concat(args));\n    };\n  };\n\n  toSimpleExtractor = function(args) {\n    return function(key) {\n      return function(value) {\n        var fieldValue;\n        if (value == null) {\n          return void 0;\n        } else {\n          fieldValue = value[key];\n          if (_.isFunction(fieldValue)) {\n            return fieldValue.apply(value, args);\n          } else {\n            return fieldValue;\n          }\n        }\n      };\n    };\n  };\n\n  toFieldExtractor = function(f, args) {\n    var partFuncs, parts;\n    parts = f.slice(1).split(\".\");\n    partFuncs = _.map(toSimpleExtractor(args), parts);\n    return function(value) {\n      var j, len1;\n      for (j = 0, len1 = partFuncs.length; j < len1; j++) {\n        f = partFuncs[j];\n        value = f(value);\n      }\n      return value;\n    };\n  };\n\n  isFieldKey = function(f) {\n    return (typeof f === \"string\") && f.length > 1 && f.charAt(0) === \".\";\n  };\n\n  makeFunction_ = withMethodCallSupport(function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (_.isFunction(f)) {\n      if (args.length) {\n        return partiallyApplied(f, args);\n      } else {\n        return f;\n      }\n    } else if (isFieldKey(f)) {\n      return toFieldExtractor(f, args);\n    } else {\n      return _.always(f);\n    }\n  });\n\n  makeFunction = function(f, args) {\n    return makeFunction_.apply(null, [f].concat(slice.call(args)));\n  };\n\n  convertArgsToFunction = function(obs, f, args, method) {\n    var sampled;\n    if (f instanceof Property) {\n      sampled = f.sampledBy(obs, function(p, s) {\n        return [p, s];\n      });\n      return method.call(sampled, function(arg) {\n        var p, s;\n        p = arg[0], s = arg[1];\n        return p;\n      }).map(function(arg) {\n        var p, s;\n        p = arg[0], s = arg[1];\n        return s;\n      });\n    } else {\n      f = makeFunction(f, args);\n      return method.call(obs, f);\n    }\n  };\n\n  toCombinator = function(f) {\n    var key;\n    if (_.isFunction(f)) {\n      return f;\n    } else if (isFieldKey(f)) {\n      key = toFieldKey(f);\n      return function(left, right) {\n        return left[key](right);\n      };\n    } else {\n      throw new Exception(\"not a function or a field key: \" + f);\n    }\n  };\n\n  toFieldKey = function(f) {\n    return f.slice(1);\n  };\n\n  Some = (function() {\n    function Some(value1) {\n      this.value = value1;\n    }\n\n    Some.prototype.getOrElse = function() {\n      return this.value;\n    };\n\n    Some.prototype.get = function() {\n      return this.value;\n    };\n\n    Some.prototype.filter = function(f) {\n      if (f(this.value)) {\n        return new Some(this.value);\n      } else {\n        return None;\n      }\n    };\n\n    Some.prototype.map = function(f) {\n      return new Some(f(this.value));\n    };\n\n    Some.prototype.forEach = function(f) {\n      return f(this.value);\n    };\n\n    Some.prototype.isDefined = true;\n\n    Some.prototype.toArray = function() {\n      return [this.value];\n    };\n\n    Some.prototype.inspect = function() {\n      return \"Some(\" + this.value + \")\";\n    };\n\n    Some.prototype.toString = function() {\n      return this.inspect();\n    };\n\n    return Some;\n\n  })();\n\n  None = {\n    getOrElse: function(value) {\n      return value;\n    },\n    filter: function() {\n      return None;\n    },\n    map: function() {\n      return None;\n    },\n    forEach: function() {},\n    isDefined: false,\n    toArray: function() {\n      return [];\n    },\n    inspect: function() {\n      return \"None\";\n    },\n    toString: function() {\n      return this.inspect();\n    }\n  };\n\n  toOption = function(v) {\n    if (v instanceof Some || v === None) {\n      return v;\n    } else {\n      return new Some(v);\n    }\n  };\n\n  Bacon.noMore = [\"<no-more>\"];\n\n  Bacon.more = [\"<more>\"];\n\n  eventIdCounter = 0;\n\n  Event = (function() {\n    function Event() {\n      this.id = ++eventIdCounter;\n    }\n\n    Event.prototype.isEvent = function() {\n      return true;\n    };\n\n    Event.prototype.isEnd = function() {\n      return false;\n    };\n\n    Event.prototype.isInitial = function() {\n      return false;\n    };\n\n    Event.prototype.isNext = function() {\n      return false;\n    };\n\n    Event.prototype.isError = function() {\n      return false;\n    };\n\n    Event.prototype.hasValue = function() {\n      return false;\n    };\n\n    Event.prototype.filter = function() {\n      return true;\n    };\n\n    Event.prototype.inspect = function() {\n      return this.toString();\n    };\n\n    Event.prototype.log = function() {\n      return this.toString();\n    };\n\n    return Event;\n\n  })();\n\n  Next = (function(superClass) {\n    extend(Next, superClass);\n\n    function Next(valueF, eager) {\n      Next.__super__.constructor.call(this);\n      if (!eager && _.isFunction(valueF) || valueF instanceof Next) {\n        this.valueF = valueF;\n        this.valueInternal = void 0;\n      } else {\n        this.valueF = void 0;\n        this.valueInternal = valueF;\n      }\n    }\n\n    Next.prototype.isNext = function() {\n      return true;\n    };\n\n    Next.prototype.hasValue = function() {\n      return true;\n    };\n\n    Next.prototype.value = function() {\n      if (this.valueF instanceof Next) {\n        this.valueInternal = this.valueF.value();\n        this.valueF = void 0;\n      } else if (this.valueF) {\n        this.valueInternal = this.valueF();\n        this.valueF = void 0;\n      }\n      return this.valueInternal;\n    };\n\n    Next.prototype.fmap = function(f) {\n      var event, value;\n      if (this.valueInternal) {\n        value = this.valueInternal;\n        return this.apply(function() {\n          return f(value);\n        });\n      } else {\n        event = this;\n        return this.apply(function() {\n          return f(event.value());\n        });\n      }\n    };\n\n    Next.prototype.apply = function(value) {\n      return new Next(value);\n    };\n\n    Next.prototype.filter = function(f) {\n      return f(this.value());\n    };\n\n    Next.prototype.toString = function() {\n      return _.toString(this.value());\n    };\n\n    Next.prototype.log = function() {\n      return this.value();\n    };\n\n    return Next;\n\n  })(Event);\n\n  Initial = (function(superClass) {\n    extend(Initial, superClass);\n\n    function Initial() {\n      return Initial.__super__.constructor.apply(this, arguments);\n    }\n\n    Initial.prototype.isInitial = function() {\n      return true;\n    };\n\n    Initial.prototype.isNext = function() {\n      return false;\n    };\n\n    Initial.prototype.apply = function(value) {\n      return new Initial(value);\n    };\n\n    Initial.prototype.toNext = function() {\n      return new Next(this);\n    };\n\n    return Initial;\n\n  })(Next);\n\n  End = (function(superClass) {\n    extend(End, superClass);\n\n    function End() {\n      return End.__super__.constructor.apply(this, arguments);\n    }\n\n    End.prototype.isEnd = function() {\n      return true;\n    };\n\n    End.prototype.fmap = function() {\n      return this;\n    };\n\n    End.prototype.apply = function() {\n      return this;\n    };\n\n    End.prototype.toString = function() {\n      return \"<end>\";\n    };\n\n    return End;\n\n  })(Event);\n\n  Error = (function(superClass) {\n    extend(Error, superClass);\n\n    function Error(error1) {\n      this.error = error1;\n    }\n\n    Error.prototype.isError = function() {\n      return true;\n    };\n\n    Error.prototype.fmap = function() {\n      return this;\n    };\n\n    Error.prototype.apply = function() {\n      return this;\n    };\n\n    Error.prototype.toString = function() {\n      return \"<error> \" + _.toString(this.error);\n    };\n\n    return Error;\n\n  })(Event);\n\n  Bacon.Event = Event;\n\n  Bacon.Initial = Initial;\n\n  Bacon.Next = Next;\n\n  Bacon.End = End;\n\n  Bacon.Error = Error;\n\n  initialEvent = function(value) {\n    return new Initial(value, true);\n  };\n\n  nextEvent = function(value) {\n    return new Next(value, true);\n  };\n\n  endEvent = function() {\n    return new End();\n  };\n\n  toEvent = function(x) {\n    if (x instanceof Event) {\n      return x;\n    } else {\n      return nextEvent(x);\n    }\n  };\n\n  idCounter = 0;\n\n  registerObs = function() {};\n\n  Observable = (function() {\n    function Observable(desc) {\n      this.id = ++idCounter;\n      withDescription(desc, this);\n      this.initialDesc = this.desc;\n    }\n\n    Observable.prototype.subscribe = function(sink) {\n      return UpdateBarrier.wrappedSubscribe(this, sink);\n    };\n\n    Observable.prototype.subscribeInternal = function(sink) {\n      return this.dispatcher.subscribe(sink);\n    };\n\n    Observable.prototype.onValue = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return this.subscribe(function(event) {\n        if (event.hasValue()) {\n          return f(event.value());\n        }\n      });\n    };\n\n    Observable.prototype.onValues = function(f) {\n      return this.onValue(function(args) {\n        return f.apply(null, args);\n      });\n    };\n\n    Observable.prototype.onError = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return this.subscribe(function(event) {\n        if (event.isError()) {\n          return f(event.error);\n        }\n      });\n    };\n\n    Observable.prototype.onEnd = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return this.subscribe(function(event) {\n        if (event.isEnd()) {\n          return f();\n        }\n      });\n    };\n\n    Observable.prototype.name = function(name) {\n      this._name = name;\n      return this;\n    };\n\n    Observable.prototype.withDescription = function() {\n      return describe.apply(null, arguments).apply(this);\n    };\n\n    Observable.prototype.toString = function() {\n      if (this._name) {\n        return this._name;\n      } else {\n        return this.desc.toString();\n      }\n    };\n\n    Observable.prototype.internalDeps = function() {\n      return this.initialDesc.deps();\n    };\n\n    return Observable;\n\n  })();\n\n  Observable.prototype.assign = Observable.prototype.onValue;\n\n  Observable.prototype.forEach = Observable.prototype.onValue;\n\n  Observable.prototype.inspect = Observable.prototype.toString;\n\n  Bacon.Observable = Observable;\n\n  CompositeUnsubscribe = (function() {\n    function CompositeUnsubscribe(ss) {\n      var j, len1, s;\n      if (ss == null) {\n        ss = [];\n      }\n      this.unsubscribe = bind(this.unsubscribe, this);\n      this.unsubscribed = false;\n      this.subscriptions = [];\n      this.starting = [];\n      for (j = 0, len1 = ss.length; j < len1; j++) {\n        s = ss[j];\n        this.add(s);\n      }\n    }\n\n    CompositeUnsubscribe.prototype.add = function(subscription) {\n      var ended, unsub, unsubMe;\n      if (this.unsubscribed) {\n        return;\n      }\n      ended = false;\n      unsub = nop;\n      this.starting.push(subscription);\n      unsubMe = (function(_this) {\n        return function() {\n          if (_this.unsubscribed) {\n            return;\n          }\n          ended = true;\n          _this.remove(unsub);\n          return _.remove(subscription, _this.starting);\n        };\n      })(this);\n      unsub = subscription(this.unsubscribe, unsubMe);\n      if (!(this.unsubscribed || ended)) {\n        this.subscriptions.push(unsub);\n      } else {\n        unsub();\n      }\n      _.remove(subscription, this.starting);\n      return unsub;\n    };\n\n    CompositeUnsubscribe.prototype.remove = function(unsub) {\n      if (this.unsubscribed) {\n        return;\n      }\n      if ((_.remove(unsub, this.subscriptions)) !== void 0) {\n        return unsub();\n      }\n    };\n\n    CompositeUnsubscribe.prototype.unsubscribe = function() {\n      var j, len1, ref, s;\n      if (this.unsubscribed) {\n        return;\n      }\n      this.unsubscribed = true;\n      ref = this.subscriptions;\n      for (j = 0, len1 = ref.length; j < len1; j++) {\n        s = ref[j];\n        s();\n      }\n      this.subscriptions = [];\n      return this.starting = [];\n    };\n\n    CompositeUnsubscribe.prototype.count = function() {\n      if (this.unsubscribed) {\n        return 0;\n      }\n      return this.subscriptions.length + this.starting.length;\n    };\n\n    CompositeUnsubscribe.prototype.empty = function() {\n      return this.count() === 0;\n    };\n\n    return CompositeUnsubscribe;\n\n  })();\n\n  Bacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\n  Dispatcher = (function() {\n    function Dispatcher(_subscribe, _handleEvent) {\n      this._subscribe = _subscribe;\n      this._handleEvent = _handleEvent;\n      this.subscribe = bind(this.subscribe, this);\n      this.handleEvent = bind(this.handleEvent, this);\n      this.subscriptions = [];\n      this.queue = [];\n      this.pushing = false;\n      this.ended = false;\n      this.prevError = void 0;\n      this.unsubSrc = void 0;\n    }\n\n    Dispatcher.prototype.hasSubscribers = function() {\n      return this.subscriptions.length > 0;\n    };\n\n    Dispatcher.prototype.removeSub = function(subscription) {\n      return this.subscriptions = _.without(subscription, this.subscriptions);\n    };\n\n    Dispatcher.prototype.push = function(event) {\n      if (event.isEnd()) {\n        this.ended = true;\n      }\n      return UpdateBarrier.inTransaction(event, this, this.pushIt, [event]);\n    };\n\n    Dispatcher.prototype.pushToSubscriptions = function(event) {\n      var e, j, len1, reply, sub, tmp;\n      try {\n        tmp = this.subscriptions;\n        for (j = 0, len1 = tmp.length; j < len1; j++) {\n          sub = tmp[j];\n          reply = sub.sink(event);\n          if (reply === Bacon.noMore || event.isEnd()) {\n            this.removeSub(sub);\n          }\n        }\n        return true;\n      } catch (_error) {\n        e = _error;\n        this.pushing = false;\n        this.queue = [];\n        throw e;\n      }\n    };\n\n    Dispatcher.prototype.pushIt = function(event) {\n      if (!this.pushing) {\n        if (event === this.prevError) {\n          return;\n        }\n        if (event.isError()) {\n          this.prevError = event;\n        }\n        this.pushing = true;\n        this.pushToSubscriptions(event);\n        this.pushing = false;\n        while (this.queue.length) {\n          event = this.queue.shift();\n          this.push(event);\n        }\n        if (this.hasSubscribers()) {\n          return Bacon.more;\n        } else {\n          this.unsubscribeFromSource();\n          return Bacon.noMore;\n        }\n      } else {\n        this.queue.push(event);\n        return Bacon.more;\n      }\n    };\n\n    Dispatcher.prototype.handleEvent = function(event) {\n      if (this._handleEvent) {\n        return this._handleEvent(event);\n      } else {\n        return this.push(event);\n      }\n    };\n\n    Dispatcher.prototype.unsubscribeFromSource = function() {\n      if (this.unsubSrc) {\n        this.unsubSrc();\n      }\n      return this.unsubSrc = void 0;\n    };\n\n    Dispatcher.prototype.subscribe = function(sink) {\n      var subscription;\n      if (this.ended) {\n        sink(endEvent());\n        return nop;\n      } else {\n        assertFunction(sink);\n        subscription = {\n          sink: sink\n        };\n        this.subscriptions.push(subscription);\n        if (this.subscriptions.length === 1) {\n          this.unsubSrc = this._subscribe(this.handleEvent);\n          assertFunction(this.unsubSrc);\n        }\n        return (function(_this) {\n          return function() {\n            _this.removeSub(subscription);\n            if (!_this.hasSubscribers()) {\n              return _this.unsubscribeFromSource();\n            }\n          };\n        })(this);\n      }\n    };\n\n    return Dispatcher;\n\n  })();\n\n  EventStream = (function(superClass) {\n    extend(EventStream, superClass);\n\n    function EventStream(desc, subscribe, handler) {\n      if (_.isFunction(desc)) {\n        handler = subscribe;\n        subscribe = desc;\n        desc = [];\n      }\n      EventStream.__super__.constructor.call(this, desc);\n      assertFunction(subscribe);\n      this.dispatcher = new Dispatcher(subscribe, handler);\n      registerObs(this);\n    }\n\n    EventStream.prototype.toProperty = function(initValue_) {\n      var disp, initValue;\n      initValue = arguments.length === 0 ? None : toOption(function() {\n        return initValue_;\n      });\n      disp = this.dispatcher;\n      return new Property(describe(this, \"toProperty\", initValue_), function(sink) {\n        var initSent, reply, sendInit, unsub;\n        initSent = false;\n        unsub = nop;\n        reply = Bacon.more;\n        sendInit = function() {\n          if (!initSent) {\n            return initValue.forEach(function(value) {\n              initSent = true;\n              reply = sink(new Initial(value));\n              if (reply === Bacon.noMore) {\n                unsub();\n                return unsub = nop;\n              }\n            });\n          }\n        };\n        unsub = disp.subscribe(function(event) {\n          if (event.hasValue()) {\n            if (initSent && event.isInitial()) {\n              return Bacon.more;\n            } else {\n              if (!event.isInitial()) {\n                sendInit();\n              }\n              initSent = true;\n              initValue = new Some(event);\n              return sink(event);\n            }\n          } else {\n            if (event.isEnd()) {\n              reply = sendInit();\n            }\n            if (reply !== Bacon.noMore) {\n              return sink(event);\n            }\n          }\n        });\n        sendInit();\n        return unsub;\n      });\n    };\n\n    EventStream.prototype.toEventStream = function() {\n      return this;\n    };\n\n    EventStream.prototype.withHandler = function(handler) {\n      return new EventStream(describe(this, \"withHandler\", handler), this.dispatcher.subscribe, handler);\n    };\n\n    return EventStream;\n\n  })(Observable);\n\n  Bacon.EventStream = EventStream;\n\n  Bacon.never = function() {\n    return new EventStream(describe(Bacon, \"never\"), function(sink) {\n      sink(endEvent());\n      return nop;\n    });\n  };\n\n  Bacon.when = function() {\n    var f, i, index, ix, j, k, len, len1, len2, needsBarrier, pat, patSources, pats, patterns, ref, resultStream, s, sources, triggerFound, usage;\n    if (arguments.length === 0) {\n      return Bacon.never();\n    }\n    len = arguments.length;\n    usage = \"when: expecting arguments in the form (Observable+,function)+\";\n    assert(usage, len % 2 === 0);\n    sources = [];\n    pats = [];\n    i = 0;\n    patterns = [];\n    while (i < len) {\n      patterns[i] = arguments[i];\n      patterns[i + 1] = arguments[i + 1];\n      patSources = _.toArray(arguments[i]);\n      f = constantToFunction(arguments[i + 1]);\n      pat = {\n        f: f,\n        ixs: []\n      };\n      triggerFound = false;\n      for (j = 0, len1 = patSources.length; j < len1; j++) {\n        s = patSources[j];\n        index = _.indexOf(sources, s);\n        if (!triggerFound) {\n          triggerFound = Source.isTrigger(s);\n        }\n        if (index < 0) {\n          sources.push(s);\n          index = sources.length - 1;\n        }\n        ref = pat.ixs;\n        for (k = 0, len2 = ref.length; k < len2; k++) {\n          ix = ref[k];\n          if (ix.index === index) {\n            ix.count++;\n          }\n        }\n        pat.ixs.push({\n          index: index,\n          count: 1\n        });\n      }\n      assert(\"At least one EventStream required\", triggerFound || (!patSources.length));\n      if (patSources.length > 0) {\n        pats.push(pat);\n      }\n      i = i + 2;\n    }\n    if (!sources.length) {\n      return Bacon.never();\n    }\n    sources = _.map(Source.fromObservable, sources);\n    needsBarrier = (_.any(sources, function(s) {\n      return s.flatten;\n    })) && (containsDuplicateDeps(_.map((function(s) {\n      return s.obs;\n    }), sources)));\n    return resultStream = new EventStream(describe.apply(null, [Bacon, \"when\"].concat(slice.call(patterns))), function(sink) {\n      var cannotMatch, cannotSync, ends, match, nonFlattened, part, triggers;\n      triggers = [];\n      ends = false;\n      match = function(p) {\n        var l, len3, ref1;\n        ref1 = p.ixs;\n        for (l = 0, len3 = ref1.length; l < len3; l++) {\n          i = ref1[l];\n          if (!sources[i.index].hasAtLeast(i.count)) {\n            return false;\n          }\n        }\n        return true;\n      };\n      cannotSync = function(source) {\n        return !source.sync || source.ended;\n      };\n      cannotMatch = function(p) {\n        var l, len3, ref1;\n        ref1 = p.ixs;\n        for (l = 0, len3 = ref1.length; l < len3; l++) {\n          i = ref1[l];\n          if (!sources[i.index].mayHave(i.count)) {\n            return true;\n          }\n        }\n      };\n      nonFlattened = function(trigger) {\n        return !trigger.source.flatten;\n      };\n      part = function(source) {\n        return function(unsubAll) {\n          var flush, flushLater, flushWhileTriggers;\n          flushLater = function() {\n            return UpdateBarrier.whenDoneWith(resultStream, flush);\n          };\n          flushWhileTriggers = function() {\n            var events, l, len3, p, reply, trigger;\n            if (triggers.length > 0) {\n              reply = Bacon.more;\n              trigger = triggers.pop();\n              for (l = 0, len3 = pats.length; l < len3; l++) {\n                p = pats[l];\n                if (match(p)) {\n                  events = (function() {\n                    var len4, m, ref1, results;\n                    ref1 = p.ixs;\n                    results = [];\n                    for (m = 0, len4 = ref1.length; m < len4; m++) {\n                      i = ref1[m];\n                      results.push(sources[i.index].consume());\n                    }\n                    return results;\n                  })();\n                  reply = sink(trigger.e.apply(function() {\n                    var event, values;\n                    values = (function() {\n                      var len4, m, results;\n                      results = [];\n                      for (m = 0, len4 = events.length; m < len4; m++) {\n                        event = events[m];\n                        results.push(event.value());\n                      }\n                      return results;\n                    })();\n                    return p.f.apply(p, values);\n                  }));\n                  if (triggers.length) {\n                    triggers = _.filter(nonFlattened, triggers);\n                  }\n                  if (reply === Bacon.noMore) {\n                    return reply;\n                  } else {\n                    return flushWhileTriggers();\n                  }\n                }\n              }\n            } else {\n              return Bacon.more;\n            }\n          };\n          flush = function() {\n            var reply;\n            reply = flushWhileTriggers();\n            if (ends) {\n              ends = false;\n              if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n                reply = Bacon.noMore;\n                sink(endEvent());\n              }\n            }\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          };\n          return source.subscribe(function(e) {\n            var reply;\n            if (e.isEnd()) {\n              ends = true;\n              source.markEnded();\n              flushLater();\n            } else if (e.isError()) {\n              reply = sink(e);\n            } else {\n              source.push(e);\n              if (source.sync) {\n                triggers.push({\n                  source: source,\n                  e: e\n                });\n                if (needsBarrier || UpdateBarrier.hasWaiters()) {\n                  flushLater();\n                } else {\n                  flush();\n                }\n              }\n            }\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply || Bacon.more;\n          });\n        };\n      };\n      return new Bacon.CompositeUnsubscribe((function() {\n        var l, len3, results;\n        results = [];\n        for (l = 0, len3 = sources.length; l < len3; l++) {\n          s = sources[l];\n          results.push(part(s));\n        }\n        return results;\n      })()).unsubscribe;\n    });\n  };\n\n  containsDuplicateDeps = function(observables, state) {\n    var checkObservable;\n    if (state == null) {\n      state = [];\n    }\n    checkObservable = function(obs) {\n      var deps;\n      if (_.contains(state, obs)) {\n        return true;\n      } else {\n        deps = obs.internalDeps();\n        if (deps.length) {\n          state.push(obs);\n          return _.any(deps, checkObservable);\n        } else {\n          state.push(obs);\n          return false;\n        }\n      }\n    };\n    return _.any(observables, checkObservable);\n  };\n\n  constantToFunction = function(f) {\n    if (_.isFunction(f)) {\n      return f;\n    } else {\n      return _.always(f);\n    }\n  };\n\n  Bacon.groupSimultaneous = function() {\n    var s, sources, streams;\n    streams = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (streams.length === 1 && isArray(streams[0])) {\n      streams = streams[0];\n    }\n    sources = (function() {\n      var j, len1, results;\n      results = [];\n      for (j = 0, len1 = streams.length; j < len1; j++) {\n        s = streams[j];\n        results.push(new BufferingSource(s));\n      }\n      return results;\n    })();\n    return withDescription.apply(null, [Bacon, \"groupSimultaneous\"].concat(slice.call(streams), [Bacon.when(sources, (function() {\n      var xs;\n      xs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return xs;\n    }))]));\n  };\n\n  PropertyDispatcher = (function(superClass) {\n    extend(PropertyDispatcher, superClass);\n\n    function PropertyDispatcher(property1, subscribe, handleEvent) {\n      this.property = property1;\n      this.subscribe = bind(this.subscribe, this);\n      PropertyDispatcher.__super__.constructor.call(this, subscribe, handleEvent);\n      this.current = None;\n      this.currentValueRootId = void 0;\n      this.propertyEnded = false;\n    }\n\n    PropertyDispatcher.prototype.push = function(event) {\n      if (event.isEnd()) {\n        this.propertyEnded = true;\n      }\n      if (event.hasValue()) {\n        this.current = new Some(event);\n        this.currentValueRootId = UpdateBarrier.currentEventId();\n      }\n      return PropertyDispatcher.__super__.push.call(this, event);\n    };\n\n    PropertyDispatcher.prototype.maybeSubSource = function(sink, reply) {\n      if (reply === Bacon.noMore) {\n        return nop;\n      } else if (this.propertyEnded) {\n        sink(endEvent());\n        return nop;\n      } else {\n        return Dispatcher.prototype.subscribe.call(this, sink);\n      }\n    };\n\n    PropertyDispatcher.prototype.subscribe = function(sink) {\n      var dispatchingId, initSent, reply, valId;\n      initSent = false;\n      reply = Bacon.more;\n      if (this.current.isDefined && (this.hasSubscribers() || this.propertyEnded)) {\n        dispatchingId = UpdateBarrier.currentEventId();\n        valId = this.currentValueRootId;\n        if (!this.propertyEnded && valId && dispatchingId && dispatchingId !== valId) {\n          UpdateBarrier.whenDoneWith(this.property, (function(_this) {\n            return function() {\n              if (_this.currentValueRootId === valId) {\n                return sink(initialEvent(_this.current.get().value()));\n              }\n            };\n          })(this));\n          return this.maybeSubSource(sink, reply);\n        } else {\n          UpdateBarrier.inTransaction(void 0, this, (function() {\n            return reply = sink(initialEvent(this.current.get().value()));\n          }), []);\n          return this.maybeSubSource(sink, reply);\n        }\n      } else {\n        return this.maybeSubSource(sink, reply);\n      }\n    };\n\n    return PropertyDispatcher;\n\n  })(Dispatcher);\n\n  Property = (function(superClass) {\n    extend(Property, superClass);\n\n    function Property(desc, subscribe, handler) {\n      if (_.isFunction(desc)) {\n        handler = subscribe;\n        subscribe = desc;\n        desc = [];\n      }\n      Property.__super__.constructor.call(this, desc);\n      assertFunction(subscribe);\n      this.dispatcher = new PropertyDispatcher(this, subscribe, handler);\n      registerObs(this);\n    }\n\n    Property.prototype.changes = function() {\n      return new EventStream(describe(this, \"changes\"), (function(_this) {\n        return function(sink) {\n          return _this.dispatcher.subscribe(function(event) {\n            if (!event.isInitial()) {\n              return sink(event);\n            }\n          });\n        };\n      })(this));\n    };\n\n    Property.prototype.withHandler = function(handler) {\n      return new Property(describe(this, \"withHandler\", handler), this.dispatcher.subscribe, handler);\n    };\n\n    Property.prototype.toProperty = function() {\n      assertNoArguments(arguments);\n      return this;\n    };\n\n    Property.prototype.toEventStream = function() {\n      return new EventStream(describe(this, \"toEventStream\"), (function(_this) {\n        return function(sink) {\n          return _this.dispatcher.subscribe(function(event) {\n            if (event.isInitial()) {\n              event = event.toNext();\n            }\n            return sink(event);\n          });\n        };\n      })(this));\n    };\n\n    return Property;\n\n  })(Observable);\n\n  Bacon.Property = Property;\n\n  Bacon.constant = function(value) {\n    return new Property(describe(Bacon, \"constant\", value), function(sink) {\n      sink(initialEvent(value));\n      sink(endEvent());\n      return nop;\n    });\n  };\n\n  Bacon.fromBinder = function(binder, eventTransformer) {\n    if (eventTransformer == null) {\n      eventTransformer = _.id;\n    }\n    return new EventStream(describe(Bacon, \"fromBinder\", binder, eventTransformer), function(sink) {\n      var shouldUnbind, unbind, unbinder, unbound;\n      unbound = false;\n      shouldUnbind = false;\n      unbind = function() {\n        if (!unbound) {\n          if (typeof unbinder !== \"undefined\" && unbinder !== null) {\n            unbinder();\n            return unbound = true;\n          } else {\n            return shouldUnbind = true;\n          }\n        }\n      };\n      unbinder = binder(function() {\n        var args, event, j, len1, reply, value;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        value = eventTransformer.apply(this, args);\n        if (!(isArray(value) && _.last(value) instanceof Event)) {\n          value = [value];\n        }\n        reply = Bacon.more;\n        for (j = 0, len1 = value.length; j < len1; j++) {\n          event = value[j];\n          reply = sink(event = toEvent(event));\n          if (reply === Bacon.noMore || event.isEnd()) {\n            unbind();\n            return reply;\n          }\n        }\n        return reply;\n      });\n      if (shouldUnbind) {\n        unbind();\n      }\n      return unbind;\n    });\n  };\n\n  eventMethods = [[\"addEventListener\", \"removeEventListener\"], [\"addListener\", \"removeListener\"], [\"on\", \"off\"], [\"bind\", \"unbind\"]];\n\n  findHandlerMethods = function(target) {\n    var j, len1, methodPair, pair;\n    for (j = 0, len1 = eventMethods.length; j < len1; j++) {\n      pair = eventMethods[j];\n      methodPair = [target[pair[0]], target[pair[1]]];\n      if (methodPair[0] && methodPair[1]) {\n        return methodPair;\n      }\n    }\n    throw new Error(\"No suitable event methods in \" + target);\n  };\n\n  Bacon.fromEventTarget = function(target, eventName, eventTransformer) {\n    var ref, sub, unsub;\n    ref = findHandlerMethods(target), sub = ref[0], unsub = ref[1];\n    return withDescription(Bacon, \"fromEvent\", target, eventName, Bacon.fromBinder(function(handler) {\n      sub.call(target, eventName, handler);\n      return function() {\n        return unsub.call(target, eventName, handler);\n      };\n    }, eventTransformer));\n  };\n\n  Bacon.fromEvent = Bacon.fromEventTarget;\n\n  Bacon.Observable.prototype.map = function() {\n    var args, p;\n    p = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return convertArgsToFunction(this, p, args, function(f) {\n      return withDescription(this, \"map\", f, this.withHandler(function(event) {\n        return this.push(event.fmap(f));\n      }));\n    });\n  };\n\n  Bacon.combineAsArray = function() {\n    var index, j, len1, s, sources, stream, streams;\n    streams = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (streams.length === 1 && isArray(streams[0])) {\n      streams = streams[0];\n    }\n    for (index = j = 0, len1 = streams.length; j < len1; index = ++j) {\n      stream = streams[index];\n      if (!(isObservable(stream))) {\n        streams[index] = Bacon.constant(stream);\n      }\n    }\n    if (streams.length) {\n      sources = (function() {\n        var k, len2, results;\n        results = [];\n        for (k = 0, len2 = streams.length; k < len2; k++) {\n          s = streams[k];\n          results.push(new Source(s, true));\n        }\n        return results;\n      })();\n      return withDescription.apply(null, [Bacon, \"combineAsArray\"].concat(slice.call(streams), [Bacon.when(sources, (function() {\n        var xs;\n        xs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return xs;\n      })).toProperty()]));\n    } else {\n      return Bacon.constant([]);\n    }\n  };\n\n  Bacon.onValues = function() {\n    var f, j, streams;\n    streams = 2 <= arguments.length ? slice.call(arguments, 0, j = arguments.length - 1) : (j = 0, []), f = arguments[j++];\n    return Bacon.combineAsArray(streams).onValues(f);\n  };\n\n  Bacon.combineWith = function() {\n    var f, streams;\n    f = arguments[0], streams = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return withDescription.apply(null, [Bacon, \"combineWith\", f].concat(slice.call(streams), [Bacon.combineAsArray(streams).map(function(values) {\n      return f.apply(null, values);\n    })]));\n  };\n\n  Bacon.combineTemplate = function(template) {\n    var applyStreamValue, combinator, compile, compileTemplate, constantValue, current, funcs, mkContext, setValue, streams;\n    funcs = [];\n    streams = [];\n    current = function(ctxStack) {\n      return ctxStack[ctxStack.length - 1];\n    };\n    setValue = function(ctxStack, key, value) {\n      return current(ctxStack)[key] = value;\n    };\n    applyStreamValue = function(key, index) {\n      return function(ctxStack, values) {\n        return setValue(ctxStack, key, values[index]);\n      };\n    };\n    constantValue = function(key, value) {\n      return function(ctxStack) {\n        return setValue(ctxStack, key, value);\n      };\n    };\n    mkContext = function(template) {\n      if (isArray(template)) {\n        return [];\n      } else {\n        return {};\n      }\n    };\n    compile = function(key, value) {\n      var popContext, pushContext;\n      if (isObservable(value)) {\n        streams.push(value);\n        return funcs.push(applyStreamValue(key, streams.length - 1));\n      } else if (value === Object(value) && typeof value !== \"function\" && !(value instanceof RegExp) && !(value instanceof Date)) {\n        pushContext = function(key) {\n          return function(ctxStack) {\n            var newContext;\n            newContext = mkContext(value);\n            setValue(ctxStack, key, newContext);\n            return ctxStack.push(newContext);\n          };\n        };\n        popContext = function(ctxStack) {\n          return ctxStack.pop();\n        };\n        funcs.push(pushContext(key));\n        compileTemplate(value);\n        return funcs.push(popContext);\n      } else {\n        return funcs.push(constantValue(key, value));\n      }\n    };\n    compileTemplate = function(template) {\n      return _.each(template, compile);\n    };\n    compileTemplate(template);\n    combinator = function(values) {\n      var ctxStack, f, j, len1, rootContext;\n      rootContext = mkContext(template);\n      ctxStack = [rootContext];\n      for (j = 0, len1 = funcs.length; j < len1; j++) {\n        f = funcs[j];\n        f(ctxStack, values);\n      }\n      return rootContext;\n    };\n    return withDescription(Bacon, \"combineTemplate\", template, Bacon.combineAsArray(streams).map(combinator));\n  };\n\n  Bacon.Observable.prototype.combine = function(other, f) {\n    var combinator;\n    combinator = toCombinator(f);\n    return withDescription(this, \"combine\", other, f, Bacon.combineAsArray(this, other).map(function(values) {\n      return combinator(values[0], values[1]);\n    }));\n  };\n\n  Bacon.Observable.prototype.decode = function(cases) {\n    return withDescription(this, \"decode\", cases, this.combine(Bacon.combineTemplate(cases), function(key, values) {\n      return values[key];\n    }));\n  };\n\n  Bacon.Observable.prototype.withStateMachine = function(initState, f) {\n    var state;\n    state = initState;\n    return withDescription(this, \"withStateMachine\", initState, f, this.withHandler(function(event) {\n      var fromF, j, len1, newState, output, outputs, reply;\n      fromF = f(state, event);\n      newState = fromF[0], outputs = fromF[1];\n      state = newState;\n      reply = Bacon.more;\n      for (j = 0, len1 = outputs.length; j < len1; j++) {\n        output = outputs[j];\n        reply = this.push(output);\n        if (reply === Bacon.noMore) {\n          return reply;\n        }\n      }\n      return reply;\n    }));\n  };\n\n  Bacon.Observable.prototype.skipDuplicates = function(isEqual) {\n    if (isEqual == null) {\n      isEqual = function(a, b) {\n        return a === b;\n      };\n    }\n    return withDescription(this, \"skipDuplicates\", this.withStateMachine(None, function(prev, event) {\n      if (!event.hasValue()) {\n        return [prev, [event]];\n      } else if (event.isInitial() || prev === None || !isEqual(prev.get(), event.value())) {\n        return [new Some(event.value()), [event]];\n      } else {\n        return [prev, []];\n      }\n    }));\n  };\n\n  Bacon.Observable.prototype.awaiting = function(other) {\n    return withDescription(this, \"awaiting\", other, Bacon.groupSimultaneous(this, other).map(function(arg) {\n      var myValues, otherValues;\n      myValues = arg[0], otherValues = arg[1];\n      return otherValues.length === 0;\n    }).toProperty(false).skipDuplicates());\n  };\n\n  Bacon.Observable.prototype.not = function() {\n    return withDescription(this, \"not\", this.map(function(x) {\n      return !x;\n    }));\n  };\n\n  Bacon.Property.prototype.and = function(other) {\n    return withDescription(this, \"and\", other, this.combine(other, function(x, y) {\n      return x && y;\n    }));\n  };\n\n  Bacon.Property.prototype.or = function(other) {\n    return withDescription(this, \"or\", other, this.combine(other, function(x, y) {\n      return x || y;\n    }));\n  };\n\n  Bacon.scheduler = {\n    setTimeout: function(f, d) {\n      return setTimeout(f, d);\n    },\n    setInterval: function(f, i) {\n      return setInterval(f, i);\n    },\n    clearInterval: function(id) {\n      return clearInterval(id);\n    },\n    clearTimeout: function(id) {\n      return clearTimeout(id);\n    },\n    now: function() {\n      return new Date().getTime();\n    }\n  };\n\n  Bacon.EventStream.prototype.bufferWithTime = function(delay) {\n    return withDescription(this, \"bufferWithTime\", delay, this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n  };\n\n  Bacon.EventStream.prototype.bufferWithCount = function(count) {\n    return withDescription(this, \"bufferWithCount\", count, this.bufferWithTimeOrCount(void 0, count));\n  };\n\n  Bacon.EventStream.prototype.bufferWithTimeOrCount = function(delay, count) {\n    var flushOrSchedule;\n    flushOrSchedule = function(buffer) {\n      if (buffer.values.length === count) {\n        return buffer.flush();\n      } else if (delay !== void 0) {\n        return buffer.schedule();\n      }\n    };\n    return withDescription(this, \"bufferWithTimeOrCount\", delay, count, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n  };\n\n  Bacon.EventStream.prototype.buffer = function(delay, onInput, onFlush) {\n    var buffer, delayMs, reply;\n    if (onInput == null) {\n      onInput = nop;\n    }\n    if (onFlush == null) {\n      onFlush = nop;\n    }\n    buffer = {\n      scheduled: null,\n      end: void 0,\n      values: [],\n      flush: function() {\n        var reply;\n        if (this.scheduled) {\n          Bacon.scheduler.clearTimeout(this.scheduled);\n          this.scheduled = null;\n        }\n        if (this.values.length > 0) {\n          reply = this.push(nextEvent(this.values));\n          this.values = [];\n          if (this.end != null) {\n            return this.push(this.end);\n          } else if (reply !== Bacon.noMore) {\n            return onFlush(this);\n          }\n        } else {\n          if (this.end != null) {\n            return this.push(this.end);\n          }\n        }\n      },\n      schedule: function() {\n        if (!this.scheduled) {\n          return this.scheduled = delay((function(_this) {\n            return function() {\n              return _this.flush();\n            };\n          })(this));\n        }\n      }\n    };\n    reply = Bacon.more;\n    if (!_.isFunction(delay)) {\n      delayMs = delay;\n      delay = function(f) {\n        return Bacon.scheduler.setTimeout(f, delayMs);\n      };\n    }\n    return withDescription(this, \"buffer\", this.withHandler(function(event) {\n      buffer.push = (function(_this) {\n        return function(event) {\n          return _this.push(event);\n        };\n      })(this);\n      if (event.isError()) {\n        reply = this.push(event);\n      } else if (event.isEnd()) {\n        buffer.end = event;\n        if (!buffer.scheduled) {\n          buffer.flush();\n        }\n      } else {\n        buffer.values.push(event.value());\n        onInput(buffer);\n      }\n      return reply;\n    }));\n  };\n\n  Bacon.Observable.prototype.filter = function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return convertArgsToFunction(this, f, args, function(f) {\n      return withDescription(this, \"filter\", f, this.withHandler(function(event) {\n        if (event.filter(f)) {\n          return this.push(event);\n        } else {\n          return Bacon.more;\n        }\n      }));\n    });\n  };\n\n  Bacon.once = function(value) {\n    return new EventStream(describe(Bacon, \"once\", value), function(sink) {\n      sink(toEvent(value));\n      sink(endEvent());\n      return nop;\n    });\n  };\n\n  Bacon.EventStream.prototype.concat = function(right) {\n    var left;\n    left = this;\n    return new EventStream(describe(left, \"concat\", right), function(sink) {\n      var unsubLeft, unsubRight;\n      unsubRight = nop;\n      unsubLeft = left.dispatcher.subscribe(function(e) {\n        if (e.isEnd()) {\n          return unsubRight = right.dispatcher.subscribe(sink);\n        } else {\n          return sink(e);\n        }\n      });\n      return function() {\n        unsubLeft();\n        return unsubRight();\n      };\n    });\n  };\n\n  Bacon.Observable.prototype.flatMap = function() {\n    return flatMap_(this, makeSpawner(arguments));\n  };\n\n  Bacon.Observable.prototype.flatMapFirst = function() {\n    return flatMap_(this, makeSpawner(arguments), true);\n  };\n\n  flatMap_ = function(root, f, firstOnly, limit) {\n    var childDeps, result, rootDep;\n    rootDep = [root];\n    childDeps = [];\n    result = new EventStream(describe(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), f), function(sink) {\n      var checkEnd, checkQueue, composite, queue, spawn;\n      composite = new CompositeUnsubscribe();\n      queue = [];\n      spawn = function(event) {\n        var child;\n        child = makeObservable(f(event.value()));\n        childDeps.push(child);\n        return composite.add(function(unsubAll, unsubMe) {\n          return child.dispatcher.subscribe(function(event) {\n            var reply;\n            if (event.isEnd()) {\n              _.remove(child, childDeps);\n              checkQueue();\n              checkEnd(unsubMe);\n              return Bacon.noMore;\n            } else {\n              if (event instanceof Initial) {\n                event = event.toNext();\n              }\n              reply = sink(event);\n              if (reply === Bacon.noMore) {\n                unsubAll();\n              }\n              return reply;\n            }\n          });\n        });\n      };\n      checkQueue = function() {\n        var event;\n        event = queue.shift();\n        if (event) {\n          return spawn(event);\n        }\n      };\n      checkEnd = function(unsub) {\n        unsub();\n        if (composite.empty()) {\n          return sink(endEvent());\n        }\n      };\n      composite.add(function(__, unsubRoot) {\n        return root.dispatcher.subscribe(function(event) {\n          if (event.isEnd()) {\n            return checkEnd(unsubRoot);\n          } else if (event.isError()) {\n            return sink(event);\n          } else if (firstOnly && composite.count() > 1) {\n            return Bacon.more;\n          } else {\n            if (composite.unsubscribed) {\n              return Bacon.noMore;\n            }\n            if (limit && composite.count() > limit) {\n              return queue.push(event);\n            } else {\n              return spawn(event);\n            }\n          }\n        });\n      });\n      return composite.unsubscribe;\n    });\n    result.internalDeps = function() {\n      if (childDeps.length) {\n        return rootDep.concat(childDeps);\n      } else {\n        return rootDep;\n      }\n    };\n    return result;\n  };\n\n  makeSpawner = function(args) {\n    if (args.length === 1 && isObservable(args[0])) {\n      return _.always(args[0]);\n    } else {\n      return makeFunctionArgs(args);\n    }\n  };\n\n  makeObservable = function(x) {\n    if (isObservable(x)) {\n      return x;\n    } else {\n      return Bacon.once(x);\n    }\n  };\n\n  Bacon.Observable.prototype.flatMapWithConcurrencyLimit = function() {\n    var args, limit;\n    limit = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return withDescription.apply(null, [this, \"flatMapWithConcurrencyLimit\", limit].concat(slice.call(args), [flatMap_(this, makeSpawner(args), false, limit)]));\n  };\n\n  Bacon.Observable.prototype.flatMapConcat = function() {\n    return withDescription.apply(null, [this, \"flatMapConcat\"].concat(slice.call(arguments), [this.flatMapWithConcurrencyLimit.apply(this, [1].concat(slice.call(arguments)))]));\n  };\n\n  addPropertyInitValueToStream = function(property, stream) {\n    var justInitValue;\n    justInitValue = new EventStream(describe(property, \"justInitValue\"), function(sink) {\n      var unsub, value;\n      value = void 0;\n      unsub = property.dispatcher.subscribe(function(event) {\n        if (!event.isEnd()) {\n          value = event;\n        }\n        return Bacon.noMore;\n      });\n      UpdateBarrier.whenDoneWith(justInitValue, function() {\n        if (value != null) {\n          sink(value);\n        }\n        return sink(endEvent());\n      });\n      return unsub;\n    });\n    return justInitValue.concat(stream).toProperty();\n  };\n\n  Bacon.Observable.prototype.mapEnd = function() {\n    var f;\n    f = makeFunctionArgs(arguments);\n    return withDescription(this, \"mapEnd\", f, this.withHandler(function(event) {\n      if (event.isEnd()) {\n        this.push(nextEvent(f(event)));\n        this.push(endEvent());\n        return Bacon.noMore;\n      } else {\n        return this.push(event);\n      }\n    }));\n  };\n\n  Bacon.Observable.prototype.skipErrors = function() {\n    return withDescription(this, \"skipErrors\", this.withHandler(function(event) {\n      if (event.isError()) {\n        return Bacon.more;\n      } else {\n        return this.push(event);\n      }\n    }));\n  };\n\n  Bacon.EventStream.prototype.takeUntil = function(stopper) {\n    var endMarker;\n    endMarker = {};\n    return withDescription(this, \"takeUntil\", stopper, Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function(event) {\n      var data, j, len1, ref, reply, value;\n      if (!event.hasValue()) {\n        return this.push(event);\n      } else {\n        ref = event.value(), data = ref[0], stopper = ref[1];\n        if (stopper.length) {\n          return this.push(endEvent());\n        } else {\n          reply = Bacon.more;\n          for (j = 0, len1 = data.length; j < len1; j++) {\n            value = data[j];\n            if (value === endMarker) {\n              reply = this.push(endEvent());\n            } else {\n              reply = this.push(nextEvent(value));\n            }\n          }\n          return reply;\n        }\n      }\n    }));\n  };\n\n  Bacon.Property.prototype.takeUntil = function(stopper) {\n    var changes;\n    changes = this.changes().takeUntil(stopper);\n    return withDescription(this, \"takeUntil\", stopper, addPropertyInitValueToStream(this, changes));\n  };\n\n  Bacon.Observable.prototype.flatMapLatest = function() {\n    var f, stream;\n    f = makeSpawner(arguments);\n    stream = this.toEventStream();\n    return withDescription(this, \"flatMapLatest\", f, stream.flatMap(function(value) {\n      return makeObservable(f(value)).takeUntil(stream);\n    }));\n  };\n\n  Bacon.fromPoll = function(delay, poll) {\n    return withDescription(Bacon, \"fromPoll\", delay, poll, Bacon.fromBinder((function(handler) {\n      var id;\n      id = Bacon.scheduler.setInterval(handler, delay);\n      return function() {\n        return Bacon.scheduler.clearInterval(id);\n      };\n    }), poll));\n  };\n\n  Bacon.later = function(delay, value) {\n    return withDescription(Bacon, \"later\", delay, value, Bacon.fromBinder(function(sink) {\n      var id, sender;\n      sender = function() {\n        return sink([value, endEvent()]);\n      };\n      id = Bacon.scheduler.setTimeout(sender, delay);\n      return function() {\n        return Bacon.scheduler.clearTimeout(id);\n      };\n    }));\n  };\n\n  Bacon.sequentially = function(delay, values) {\n    var index;\n    index = 0;\n    return withDescription(Bacon, \"sequentially\", delay, values, Bacon.fromPoll(delay, function() {\n      var value;\n      value = values[index++];\n      if (index < values.length) {\n        return value;\n      } else if (index === values.length) {\n        return [value, endEvent()];\n      } else {\n        return endEvent();\n      }\n    }));\n  };\n\n  Bacon.repeatedly = function(delay, values) {\n    var index;\n    index = 0;\n    return withDescription(Bacon, \"repeatedly\", delay, values, Bacon.fromPoll(delay, function() {\n      return values[index++ % values.length];\n    }));\n  };\n\n  Bacon.interval = function(delay, value) {\n    if (value == null) {\n      value = {};\n    }\n    return withDescription(Bacon, \"interval\", delay, value, Bacon.fromPoll(delay, function() {\n      return nextEvent(value);\n    }));\n  };\n\n  Bacon.EventStream.prototype.delay = function(delay) {\n    return withDescription(this, \"delay\", delay, this.flatMap(function(value) {\n      return Bacon.later(delay, value);\n    }));\n  };\n\n  Bacon.Property.prototype.delay = function(delay) {\n    return this.delayChanges(\"delay\", delay, function(changes) {\n      return changes.delay(delay);\n    });\n  };\n\n  Bacon.Property.prototype.delayChanges = function() {\n    var desc, f, j;\n    desc = 2 <= arguments.length ? slice.call(arguments, 0, j = arguments.length - 1) : (j = 0, []), f = arguments[j++];\n    return withDescription.apply(null, [this].concat(slice.call(desc), [addPropertyInitValueToStream(this, f(this.changes()))]));\n  };\n\n  Bacon.Observable.prototype.bufferingThrottle = function(minimumInterval) {\n    return withDescription(this, \"bufferingThrottle\", minimumInterval, this.flatMapConcat(function(x) {\n      return Bacon.once(x).concat(Bacon.later(minimumInterval).filter(false));\n    }));\n  };\n\n  Bacon.Property.prototype.bufferingThrottle = function() {\n    return Bacon.Observable.prototype.bufferingThrottle.apply(this, arguments).toProperty();\n  };\n\n  Bus = (function(superClass) {\n    extend(Bus, superClass);\n\n    function Bus() {\n      this.guardedSink = bind(this.guardedSink, this);\n      this.subscribeAll = bind(this.subscribeAll, this);\n      this.unsubAll = bind(this.unsubAll, this);\n      this.sink = void 0;\n      this.subscriptions = [];\n      this.ended = false;\n      Bus.__super__.constructor.call(this, describe(Bacon, \"Bus\"), this.subscribeAll);\n    }\n\n    Bus.prototype.unsubAll = function() {\n      var j, len1, ref, sub;\n      ref = this.subscriptions;\n      for (j = 0, len1 = ref.length; j < len1; j++) {\n        sub = ref[j];\n        if (typeof sub.unsub === \"function\") {\n          sub.unsub();\n        }\n      }\n      return void 0;\n    };\n\n    Bus.prototype.subscribeAll = function(newSink) {\n      var j, len1, ref, subscription;\n      this.sink = newSink;\n      ref = cloneArray(this.subscriptions);\n      for (j = 0, len1 = ref.length; j < len1; j++) {\n        subscription = ref[j];\n        this.subscribeInput(subscription);\n      }\n      return this.unsubAll;\n    };\n\n    Bus.prototype.guardedSink = function(input) {\n      return (function(_this) {\n        return function(event) {\n          if (event.isEnd()) {\n            _this.unsubscribeInput(input);\n            return Bacon.noMore;\n          } else {\n            return _this.sink(event);\n          }\n        };\n      })(this);\n    };\n\n    Bus.prototype.subscribeInput = function(subscription) {\n      return subscription.unsub = subscription.input.dispatcher.subscribe(this.guardedSink(subscription.input));\n    };\n\n    Bus.prototype.unsubscribeInput = function(input) {\n      var i, j, len1, ref, sub;\n      ref = this.subscriptions;\n      for (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n        sub = ref[i];\n        if (sub.input === input) {\n          if (typeof sub.unsub === \"function\") {\n            sub.unsub();\n          }\n          this.subscriptions.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    Bus.prototype.plug = function(input) {\n      var sub;\n      assertObservable(input);\n      if (this.ended) {\n        return;\n      }\n      sub = {\n        input: input\n      };\n      this.subscriptions.push(sub);\n      if ((this.sink != null)) {\n        this.subscribeInput(sub);\n      }\n      return (function(_this) {\n        return function() {\n          return _this.unsubscribeInput(input);\n        };\n      })(this);\n    };\n\n    Bus.prototype.end = function() {\n      this.ended = true;\n      this.unsubAll();\n      return typeof this.sink === \"function\" ? this.sink(endEvent()) : void 0;\n    };\n\n    Bus.prototype.push = function(value) {\n      return typeof this.sink === \"function\" ? this.sink(nextEvent(value)) : void 0;\n    };\n\n    Bus.prototype.error = function(error) {\n      return typeof this.sink === \"function\" ? this.sink(new Error(error)) : void 0;\n    };\n\n    return Bus;\n\n  })(EventStream);\n\n  Bacon.Bus = Bus;\n\n  liftCallback = function(desc, wrapped) {\n    return withMethodCallSupport(function() {\n      var args, f, stream;\n      f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      stream = partiallyApplied(wrapped, [\n        function(values, callback) {\n          return f.apply(null, slice.call(values).concat([callback]));\n        }\n      ]);\n      return withDescription.apply(null, [Bacon, desc, f].concat(slice.call(args), [Bacon.combineAsArray(args).flatMap(stream)]));\n    });\n  };\n\n  Bacon.fromCallback = liftCallback(\"fromCallback\", function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return Bacon.fromBinder(function(handler) {\n      makeFunction(f, args)(handler);\n      return nop;\n    }, (function(value) {\n      return [value, endEvent()];\n    }));\n  });\n\n  Bacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return Bacon.fromBinder(function(handler) {\n      makeFunction(f, args)(handler);\n      return nop;\n    }, function(error, value) {\n      if (error) {\n        return [new Error(error), endEvent()];\n      }\n      return [value, endEvent()];\n    });\n  });\n\n  Bacon.EventStream.prototype.debounce = function(delay) {\n    return withDescription(this, \"debounce\", delay, this.flatMapLatest(function(value) {\n      return Bacon.later(delay, value);\n    }));\n  };\n\n  Bacon.Property.prototype.debounce = function(delay) {\n    return this.delayChanges(\"debounce\", delay, function(changes) {\n      return changes.debounce(delay);\n    });\n  };\n\n  Bacon.EventStream.prototype.debounceImmediate = function(delay) {\n    return withDescription(this, \"debounceImmediate\", delay, this.flatMapFirst(function(value) {\n      return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n    }));\n  };\n\n  Bacon.Observable.prototype.scan = function(seed, f) {\n    var acc, resultProperty, subscribe;\n    f = toCombinator(f);\n    acc = toOption(seed);\n    subscribe = (function(_this) {\n      return function(sink) {\n        var initSent, reply, sendInit, unsub;\n        initSent = false;\n        unsub = nop;\n        reply = Bacon.more;\n        sendInit = function() {\n          if (!initSent) {\n            return acc.forEach(function(value) {\n              initSent = true;\n              reply = sink(new Initial(function() {\n                return value;\n              }));\n              if (reply === Bacon.noMore) {\n                unsub();\n                return unsub = nop;\n              }\n            });\n          }\n        };\n        unsub = _this.dispatcher.subscribe(function(event) {\n          var next, prev;\n          if (event.hasValue()) {\n            if (initSent && event.isInitial()) {\n              return Bacon.more;\n            } else {\n              if (!event.isInitial()) {\n                sendInit();\n              }\n              initSent = true;\n              prev = acc.getOrElse(void 0);\n              next = f(prev, event.value());\n              acc = new Some(next);\n              return sink(event.apply(function() {\n                return next;\n              }));\n            }\n          } else {\n            if (event.isEnd()) {\n              reply = sendInit();\n            }\n            if (reply !== Bacon.noMore) {\n              return sink(event);\n            }\n          }\n        });\n        UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n        return unsub;\n      };\n    })(this);\n    return resultProperty = new Property(describe(this, \"scan\", seed, f), subscribe);\n  };\n\n  Bacon.Observable.prototype.diff = function(start, f) {\n    f = toCombinator(f);\n    return withDescription(this, \"diff\", start, f, this.scan([start], function(prevTuple, next) {\n      return [next, f(prevTuple[0], next)];\n    }).filter(function(tuple) {\n      return tuple.length === 2;\n    }).map(function(tuple) {\n      return tuple[1];\n    }));\n  };\n\n  Bacon.Observable.prototype.doAction = function() {\n    var f;\n    f = makeFunctionArgs(arguments);\n    return withDescription(this, \"doAction\", f, this.withHandler(function(event) {\n      if (event.hasValue()) {\n        f(event.value());\n      }\n      return this.push(event);\n    }));\n  };\n\n  Bacon.Observable.prototype.endOnError = function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (f == null) {\n      f = true;\n    }\n    return convertArgsToFunction(this, f, args, function(f) {\n      return withDescription(this, \"endOnError\", this.withHandler(function(event) {\n        if (event.isError() && f(event.error)) {\n          this.push(event);\n          return this.push(endEvent());\n        } else {\n          return this.push(event);\n        }\n      }));\n    });\n  };\n\n  Observable.prototype.errors = function() {\n    return withDescription(this, \"errors\", this.filter(function() {\n      return false;\n    }));\n  };\n\n  valueAndEnd = (function(value) {\n    return [value, endEvent()];\n  });\n\n  Bacon.fromPromise = function(promise, abort) {\n    return withDescription(Bacon, \"fromPromise\", promise, Bacon.fromBinder(function(handler) {\n      var ref;\n      if ((ref = promise.then(handler, function(e) {\n        return handler(new Error(e));\n      })) != null) {\n        if (typeof ref.done === \"function\") {\n          ref.done();\n        }\n      }\n      return function() {\n        if (abort) {\n          return typeof promise.abort === \"function\" ? promise.abort() : void 0;\n        }\n      };\n    }, valueAndEnd));\n  };\n\n  Bacon.Observable.prototype.mapError = function() {\n    var f;\n    f = makeFunctionArgs(arguments);\n    return withDescription(this, \"mapError\", f, this.withHandler(function(event) {\n      if (event.isError()) {\n        return this.push(nextEvent(f(event.error)));\n      } else {\n        return this.push(event);\n      }\n    }));\n  };\n\n  Bacon.Observable.prototype.flatMapError = function(fn) {\n    return withDescription(this, \"flatMapError\", fn, this.mapError(function(err) {\n      return new Error(err);\n    }).flatMap(function(x) {\n      if (x instanceof Error) {\n        return fn(x.error);\n      } else {\n        return Bacon.once(x);\n      }\n    }));\n  };\n\n  Bacon.EventStream.prototype.sampledBy = function(sampler, combinator) {\n    return withDescription(this, \"sampledBy\", sampler, combinator, this.toProperty().sampledBy(sampler, combinator));\n  };\n\n  Bacon.Property.prototype.sampledBy = function(sampler, combinator) {\n    var lazy, result, samplerSource, stream, thisSource;\n    if (combinator != null) {\n      combinator = toCombinator(combinator);\n    } else {\n      lazy = true;\n      combinator = function(f) {\n        return f.value();\n      };\n    }\n    thisSource = new Source(this, false, lazy);\n    samplerSource = new Source(sampler, true, lazy);\n    stream = Bacon.when([thisSource, samplerSource], combinator);\n    result = sampler instanceof Property ? stream.toProperty() : stream;\n    return withDescription(this, \"sampledBy\", sampler, combinator, result);\n  };\n\n  Bacon.Property.prototype.sample = function(interval) {\n    return withDescription(this, \"sample\", interval, this.sampledBy(Bacon.interval(interval, {})));\n  };\n\n  Bacon.Observable.prototype.map = function() {\n    var args, p;\n    p = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (p instanceof Property) {\n      return p.sampledBy(this, former);\n    } else {\n      return convertArgsToFunction(this, p, args, function(f) {\n        return withDescription(this, \"map\", f, this.withHandler(function(event) {\n          return this.push(event.fmap(f));\n        }));\n      });\n    }\n  };\n\n  Bacon.Observable.prototype.fold = function(seed, f) {\n    return withDescription(this, \"fold\", seed, f, this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n  };\n\n  Observable.prototype.reduce = Observable.prototype.fold;\n\n  Bacon.EventStream.prototype.merge = function(right) {\n    var left;\n    assertEventStream(right);\n    left = this;\n    return withDescription(left, \"merge\", right, Bacon.mergeAll(this, right));\n  };\n\n  Bacon.mergeAll = function() {\n    var streams;\n    streams = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (isArray(streams[0])) {\n      streams = streams[0];\n    }\n    if (streams.length) {\n      return new EventStream(describe.apply(null, [Bacon, \"mergeAll\"].concat(slice.call(streams))), function(sink) {\n        var ends, sinks, smartSink;\n        ends = 0;\n        smartSink = function(obs) {\n          return function(unsubBoth) {\n            return obs.dispatcher.subscribe(function(event) {\n              var reply;\n              if (event.isEnd()) {\n                ends++;\n                if (ends === streams.length) {\n                  return sink(endEvent());\n                } else {\n                  return Bacon.more;\n                }\n              } else {\n                reply = sink(event);\n                if (reply === Bacon.noMore) {\n                  unsubBoth();\n                }\n                return reply;\n              }\n            });\n          };\n        };\n        sinks = _.map(smartSink, streams);\n        return new Bacon.CompositeUnsubscribe(sinks).unsubscribe;\n      });\n    } else {\n      return Bacon.never();\n    }\n  };\n\n  Bacon.Observable.prototype.take = function(count) {\n    if (count <= 0) {\n      return Bacon.never();\n    }\n    return withDescription(this, \"take\", count, this.withHandler(function(event) {\n      if (!event.hasValue()) {\n        return this.push(event);\n      } else {\n        count--;\n        if (count > 0) {\n          return this.push(event);\n        } else {\n          if (count === 0) {\n            this.push(event);\n          }\n          this.push(endEvent());\n          return Bacon.noMore;\n        }\n      }\n    }));\n  };\n\n  Bacon.fromArray = function(values) {\n    var i;\n    assertArray(values);\n    if (!values.length) {\n      return withDescription(Bacon, \"fromArray\", values, Bacon.never());\n    } else {\n      i = 0;\n      return new EventStream(describe(Bacon, \"fromArray\", values), function(sink) {\n        var push, reply, unsubd;\n        unsubd = false;\n        reply = Bacon.more;\n        push = function() {\n          var value;\n          if ((reply !== Bacon.noMore) && !unsubd) {\n            value = values[i++];\n            reply = sink(toEvent(value));\n            if (reply !== Bacon.noMore) {\n              if (i === values.length) {\n                return sink(endEvent());\n              } else {\n                return UpdateBarrier.afterTransaction(push);\n              }\n            }\n          }\n        };\n        push();\n        return function() {\n          return unsubd = true;\n        };\n      });\n    }\n  };\n\n  Bacon.EventStream.prototype.holdWhen = function(valve) {\n    var putToHold, releaseHold, valve_;\n    valve_ = valve.startWith(false);\n    releaseHold = valve_.filter(function(x) {\n      return !x;\n    });\n    putToHold = valve_.filter(_.id);\n    return withDescription(this, \"holdWhen\", valve, this.filter(false).merge(valve_.flatMapConcat((function(_this) {\n      return function(shouldHold) {\n        if (!shouldHold) {\n          return _this.takeUntil(putToHold);\n        } else {\n          return _this.scan([], (function(xs, x) {\n            return xs.concat([x]);\n          })).sampledBy(releaseHold).take(1).flatMap(Bacon.fromArray);\n        }\n      };\n    })(this))));\n  };\n\n  Bacon.$ = {};\n\n  Bacon.$.asEventStream = function(eventName, selector, eventTransformer) {\n    var ref;\n    if (_.isFunction(selector)) {\n      ref = [selector, void 0], eventTransformer = ref[0], selector = ref[1];\n    }\n    return withDescription(this.selector || this, \"asEventStream\", eventName, Bacon.fromBinder((function(_this) {\n      return function(handler) {\n        _this.on(eventName, selector, handler);\n        return function() {\n          return _this.off(eventName, selector, handler);\n        };\n      };\n    })(this), eventTransformer));\n  };\n\n  if ((ref = typeof jQuery !== \"undefined\" && jQuery !== null ? jQuery : typeof Zepto !== \"undefined\" && Zepto !== null ? Zepto : void 0) != null) {\n    ref.fn.asEventStream = Bacon.$.asEventStream;\n  }\n\n  Bacon.Observable.prototype.log = function() {\n    var args;\n    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    this.subscribe(function(event) {\n      return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log.apply(console, slice.call(args).concat([event.log()])) : void 0 : void 0;\n    });\n    return this;\n  };\n\n  Bacon.repeat = function(generator) {\n    var index;\n    index = 0;\n    return Bacon.fromBinder(function(sink) {\n      var flag, handleEvent, reply, subscribeNext, unsub;\n      flag = false;\n      reply = Bacon.more;\n      unsub = function() {};\n      handleEvent = function(event) {\n        if (event.isEnd()) {\n          if (!flag) {\n            return flag = true;\n          } else {\n            return subscribeNext();\n          }\n        } else {\n          return reply = sink(event);\n        }\n      };\n      subscribeNext = function() {\n        var next;\n        flag = true;\n        while (flag && reply !== Bacon.noMore) {\n          next = generator(index++);\n          flag = false;\n          if (next) {\n            unsub = next.subscribeInternal(handleEvent);\n          } else {\n            sink(endEvent());\n          }\n        }\n        return flag = true;\n      };\n      subscribeNext();\n      return function() {\n        return unsub();\n      };\n    });\n  };\n\n  Bacon.retry = function(options) {\n    var delay, error, finished, isRetryable, maxRetries, retries, source;\n    if (!_.isFunction(options.source)) {\n      throw new Exception(\"'source' option has to be a function\");\n    }\n    source = options.source;\n    retries = options.retries || 0;\n    maxRetries = options.maxRetries || retries;\n    delay = options.delay || function() {\n      return 0;\n    };\n    isRetryable = options.isRetryable || function() {\n      return true;\n    };\n    finished = false;\n    error = null;\n    return withDescription(Bacon, \"retry\", options, Bacon.repeat(function() {\n      var context, pause, valueStream;\n      if (finished) {\n        return null;\n      } else {\n        valueStream = function() {\n          return source().endOnError().withHandler(function(event) {\n            if (event.isError()) {\n              error = event;\n              if (isRetryable(error.error) && retries > 0) {\n\n              } else {\n                finished = true;\n                return this.push(event);\n              }\n            } else {\n              if (event.hasValue()) {\n                error = null;\n                finished = true;\n              }\n              return this.push(event);\n            }\n          });\n        };\n        if (error) {\n          context = {\n            error: error.error,\n            retriesDone: maxRetries - retries\n          };\n          pause = Bacon.later(delay(context)).filter(false);\n          retries = retries - 1;\n          return pause.concat(Bacon.once().flatMap(valueStream));\n        } else {\n          return valueStream();\n        }\n      }\n    }));\n  };\n\n  Bacon.Observable.prototype.skip = function(count) {\n    return withDescription(this, \"skip\", count, this.withHandler(function(event) {\n      if (!event.hasValue()) {\n        return this.push(event);\n      } else if (count > 0) {\n        count--;\n        return Bacon.more;\n      } else {\n        return this.push(event);\n      }\n    }));\n  };\n\n  Bacon.EventStream.prototype.skipUntil = function(starter) {\n    var started;\n    started = starter.take(1).map(true).toProperty(false);\n    return withDescription(this, \"skipUntil\", starter, this.filter(started));\n  };\n\n  Bacon.EventStream.prototype.skipWhile = function() {\n    var args, f, ok;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    ok = false;\n    return convertArgsToFunction(this, f, args, function(f) {\n      return withDescription(this, \"skipWhile\", f, this.withHandler(function(event) {\n        if (ok || !event.hasValue() || !f(event.value())) {\n          if (event.hasValue()) {\n            ok = true;\n          }\n          return this.push(event);\n        } else {\n          return Bacon.more;\n        }\n      }));\n    });\n  };\n\n  Bacon.Observable.prototype.slidingWindow = function(n, minValues) {\n    if (minValues == null) {\n      minValues = 0;\n    }\n    return withDescription(this, \"slidingWindow\", n, minValues, this.scan([], (function(window, value) {\n      return window.concat([value]).slice(-n);\n    })).filter((function(values) {\n      return values.length >= minValues;\n    })));\n  };\n\n  Bacon.spy = function(spy) {\n    return spys.push(spy);\n  };\n\n  spys = [];\n\n  registerObs = function(obs) {\n    var j, len1, spy;\n    if (spys.length) {\n      if (!registerObs.running) {\n        try {\n          registerObs.running = true;\n          for (j = 0, len1 = spys.length; j < len1; j++) {\n            spy = spys[j];\n            spy(obs);\n          }\n        } finally {\n          delete registerObs.running;\n        }\n      }\n    }\n    return void 0;\n  };\n\n  Bacon.Property.prototype.startWith = function(seed) {\n    return withDescription(this, \"startWith\", seed, this.scan(seed, function(prev, next) {\n      return next;\n    }));\n  };\n\n  Bacon.EventStream.prototype.startWith = function(seed) {\n    return withDescription(this, \"startWith\", seed, Bacon.once(seed).concat(this));\n  };\n\n  Bacon.Observable.prototype.takeWhile = function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return convertArgsToFunction(this, f, args, function(f) {\n      return withDescription(this, \"takeWhile\", f, this.withHandler(function(event) {\n        if (event.filter(f)) {\n          return this.push(event);\n        } else {\n          this.push(endEvent());\n          return Bacon.noMore;\n        }\n      }));\n    });\n  };\n\n  Bacon.update = function() {\n    var i, initial, lateBindFirst, patterns;\n    initial = arguments[0], patterns = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    lateBindFirst = function(f) {\n      return function() {\n        var args;\n        args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n        return function(i) {\n          return f.apply(null, [i].concat(args));\n        };\n      };\n    };\n    i = patterns.length - 1;\n    while (i > 0) {\n      if (!(patterns[i] instanceof Function)) {\n        patterns[i] = (function(x) {\n          return function() {\n            return x;\n          };\n        })(patterns[i]);\n      }\n      patterns[i] = lateBindFirst(patterns[i]);\n      i = i - 2;\n    }\n    return withDescription.apply(null, [Bacon, \"update\", initial].concat(slice.call(patterns), [Bacon.when.apply(Bacon, patterns).scan(initial, (function(x, f) {\n      return f(x);\n    }))]));\n  };\n\n  Bacon.zipAsArray = function() {\n    var streams;\n    streams = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (isArray(streams[0])) {\n      streams = streams[0];\n    }\n    return withDescription.apply(null, [Bacon, \"zipAsArray\"].concat(slice.call(streams), [Bacon.zipWith(streams, function() {\n      var xs;\n      xs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      return xs;\n    })]));\n  };\n\n  Bacon.zipWith = function() {\n    var f, ref1, streams;\n    f = arguments[0], streams = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (!_.isFunction(f)) {\n      ref1 = [f, streams[0]], streams = ref1[0], f = ref1[1];\n    }\n    streams = _.map((function(s) {\n      return s.toEventStream();\n    }), streams);\n    return withDescription.apply(null, [Bacon, \"zipWith\", f].concat(slice.call(streams), [Bacon.when(streams, f)]));\n  };\n\n  Bacon.Observable.prototype.zip = function(other, f) {\n    if (f == null) {\n      f = Array;\n    }\n    return withDescription(this, \"zip\", other, Bacon.zipWith([this, other], f));\n  };\n\n  \n\nBacon.Observable.prototype.first = function () {\n  return withDescription(this, \"first\", this.take(1));\n};\n\nBacon.Observable.prototype.last = function () {\n  var lastEvent;\n\n  return withDescription(this, \"last\", this.withHandler(function (event) {\n    if (event.isEnd()) {\n      if (lastEvent) {\n        this.push(lastEvent);\n      }\n      this.push(endEvent());\n      return Bacon.noMore;\n    } else {\n      lastEvent = event;\n    }\n  }));\n};\n\nBacon.EventStream.prototype.throttle = function (delay) {\n  return withDescription(this, \"throttle\", delay, this.bufferWithTime(delay).map(function (values) {\n    return values[values.length - 1];\n  }));\n};\n\nBacon.Property.prototype.throttle = function (delay) {\n  return this.delayChanges(\"throttle\", delay, function (changes) {\n    return changes.throttle(delay);\n  });\n};\n\nObservable.prototype.firstToPromise = function (PromiseCtr) {\n  var _this = this;\n\n  if (typeof PromiseCtr !== \"function\") {\n    if (typeof Promise === \"function\") {\n      PromiseCtr = Promise;\n    } else {\n      throw new Exception(\"There isn't default Promise, use shim or parameter\");\n    }\n  }\n\n  return new PromiseCtr(function (resolve, reject) {\n    return _this.subscribe(function (event) {\n      if (event.hasValue()) {\n        resolve(event.value());\n      }\n      if (event.isError()) {\n        reject(event.error);\n      }\n\n      return Bacon.noMore;\n    });\n  });\n};\n\nObservable.prototype.toPromise = function (PromiseCtr) {\n  return this.last().firstToPromise(PromiseCtr);\n};\n\nif ((\"function\" !== \"undefined\" && __webpack_require__(23) !== null) && (__webpack_require__(24) != null)) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return Bacon;\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    this.Bacon = Bacon;\n  } else if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = Bacon;\n    Bacon.Bacon = Bacon;\n  } else {\n    this.Bacon = Bacon;\n  }\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(25)(module)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/baconjs/dist/Bacon.js\n ** module id = 14\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/baconjs/dist/Bacon.js?");

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root) {\n\t\"use strict\";\n\tvar Tone;\n\t//constructs the main Tone object\n\tfunction MainModule(func){\n\t\tTone = func();\n\t}\n\t//invokes each of the modules with the main Tone object as the argument\n\tfunction ToneModule(func){\n\t\tfunc(Tone);\n\t}\n\n\t/**\n\t *  Tone.js\n\t *  @author Yotam Mann\n\t *  @license http://opensource.org/licenses/MIT MIT License\n\t *  @copyright 2014-2015 Yotam Mann\n\t */\n\tMainModule(function(){\n\n\t\t\n\n\t\t//////////////////////////////////////////////////////////////////////////\n\t\t//\tWEB AUDIO CONTEXT\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t//borrowed from underscore.js\n\t\tfunction isUndef(val){\n\t\t\treturn val === void 0;\n\t\t}\n\n\t\t//borrowed from underscore.js\n\t\tfunction isFunction(val){\n\t\t\treturn typeof val === \"function\";\n\t\t}\n\n\t\tvar audioContext;\n\n\t\t//polyfill for AudioContext and OfflineAudioContext\n\t\tif (isUndef(window.AudioContext)){\n\t\t\twindow.AudioContext = window.webkitAudioContext;\n\t\t} \n\t\tif (isUndef(window.OfflineAudioContext)){\n\t\t\twindow.OfflineAudioContext = window.webkitOfflineAudioContext;\n\t\t} \n\n\t\tif (!isUndef(AudioContext)){\n\t\t\taudioContext = new AudioContext();\n\t\t} else {\n\t\t\tthrow new Error(\"Web Audio is not supported in this browser\");\n\t\t}\n\n\t\t//SHIMS////////////////////////////////////////////////////////////////////\n\n\t\tif (!isFunction(AudioContext.prototype.createGain)){\n\t\t\tAudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t\t}\n\t\tif (!isFunction(AudioContext.prototype.createDelay)){\n\t\t\tAudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t\t}\n\t\tif (!isFunction(AudioContext.prototype.createPeriodicWave)){\n\t\t\tAudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;\n\t\t}\n\t\tif (!isFunction(AudioBufferSourceNode.prototype.start)){\n\t\t\tAudioBufferSourceNode.prototype.start = AudioBufferSourceNode.prototype.noteGrainOn;\n\t\t}\n\t\tif (!isFunction(AudioBufferSourceNode.prototype.stop)){\n\t\t\tAudioBufferSourceNode.prototype.stop = AudioBufferSourceNode.prototype.noteOff;\n\t\t}\n\t\tif (!isFunction(OscillatorNode.prototype.start)){\n\t\t\tOscillatorNode.prototype.start = OscillatorNode.prototype.noteOn;\n\t\t}\n\t\tif (!isFunction(OscillatorNode.prototype.stop)){\n\t\t\tOscillatorNode.prototype.stop = OscillatorNode.prototype.noteOff;\t\n\t\t}\n\t\tif (!isFunction(OscillatorNode.prototype.setPeriodicWave)){\n\t\t\tOscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;\t\n\t\t}\n\t\t//extend the connect function to include Tones\n\t\tAudioNode.prototype._nativeConnect = AudioNode.prototype.connect;\n\t\tAudioNode.prototype.connect = function(B, outNum, inNum){\n\t\t\tif (B.input){\n\t\t\t\tif (Array.isArray(B.input)){\n\t\t\t\t\tif (isUndef(inNum)){\n\t\t\t\t\t\tinNum = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis.connect(B.input[inNum]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.connect(B.input, outNum, inNum);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (B instanceof AudioNode){\n\t\t\t\t\t\tthis._nativeConnect(B, outNum, inNum);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._nativeConnect(B, outNum);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(\"error connecting to node: \"+B);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tTONE\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  @class  Tone is the base class of all other classes.  \n\t\t *  \n\t\t *  @constructor\n\t\t *  @alias Tone\n\t\t *  @param {number} [inputs=1] the number of input nodes\n\t\t *  @param {number} [outputs=1] the number of output nodes\n\t\t */\n\t\tvar Tone = function(inputs, outputs){\n\n\t\t\t/**\n\t\t\t *  the input node(s)\n\t\t\t *  @type {GainNode|Array}\n\t\t\t */\n\t\t\tif (isUndef(inputs) || inputs === 1){\n\t\t\t\tthis.input = this.context.createGain();\n\t\t\t} else if (inputs > 1){\n\t\t\t\tthis.input = new Array(inputs);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  the output node(s)\n\t\t\t *  @type {GainNode|Array}\n\t\t\t */\n\t\t\tif (isUndef(outputs) || outputs === 1){\n\t\t\t\tthis.output = this.context.createGain();\n\t\t\t} else if (outputs > 1){\n\t\t\t\tthis.output = new Array(inputs);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  Set the parameters at once. Either pass in an\n\t\t *  object mapping parameters to values, or to set a\n\t\t *  single parameter, by passing in a string and value.\n\t\t *  @example\n\t\t *  //set values using an object\n\t\t *  filter.set({\n\t\t *  \t\"frequency\" : 300,\n\t\t *  \t\"type\" : highpass\n\t\t *  });\n\t\t *  //or\n\t\t *  filter.set(\"type\", \"highpass\");\n\t\t *  //ramp to the value 220 over 3 seconds. \n\t\t *  oscillator.set({\n\t\t *  \t\"frequency\" : 220\n\t\t *  }, 3);\n\t\t *  @param {Object|string} params\n\t\t *  @param {number=} value\n\t\t *  @param {Tone.Time=} rampTime\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.set = function(params, value, rampTime){\n\t\t\tif (typeof params === \"object\"){\n\t\t\t\trampTime = value;\n\t\t\t} else if (typeof params === \"string\"){\n\t\t\t\tvar tmpObj = {};\n\t\t\t\ttmpObj[params] = value;\n\t\t\t\tparams = tmpObj;\n\t\t\t}\n\t\t\tfor (var attr in params){\n\t\t\t\tvar param = this[attr];\n\t\t\t\tif (isUndef(param)){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvalue = params[attr];\n\t\t\t\tif (param instanceof Tone.Signal){\n\t\t\t\t\tif (param.value !== value){\n\t\t\t\t\t\tif (isUndef(rampTime)){\n\t\t\t\t\t\t\tparam.value = value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparam.rampTo(value, rampTime);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (param instanceof AudioParam){\n\t\t\t\t\tif (param.value !== value){\n\t\t\t\t\t\tparam.value = value;\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t} else if (param instanceof Tone){\n\t\t\t\t\tparam.set(value);\n\t\t\t\t} else if (param !== value){\n\t\t\t\t\tthis[attr] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Get the object's attributes. \n\t\t *  @example\n\t\t *  osc.get();\n\t\t *  //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t\t *  osc.get(\"type\"); //returns { \"type\" : \"sine\"}\n\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t   all available.r\n\t\t */\n\t\tTone.prototype.get = function(params){\n\t\t\tif (isUndef(params)){\n\t\t\t\tparams = this._collectDefaults(this.constructor);\n\t\t\t}\n\t\t\tvar ret = {};\n\t\t\tfor (var i = 0; i < params.length; i++){\n\t\t\t\tvar attr = params[i];\n\t\t\t\tvar param = this[attr];\n\t\t\t\tif (param instanceof Tone.Signal){\n\t\t\t\t\tret[attr] = param.value;\n\t\t\t\t} else if (param instanceof AudioParam){\n\t\t\t\t\tret[attr] = param.value;\n\t\t\t\t} else if (param instanceof Tone){\n\t\t\t\t\tret[attr] = param.get();\n\t\t\t\t} else if (!isFunction(param) && !isUndef(param)){\n\t\t\t\t\tret[attr] = param;\n\t\t\t\t} \n\t\t\t}\n\t\t\treturn ret;\n\t\t};\n\n\t\t/**\n\t\t *  collect all of the default attributes in one\n\t\t *  @private\n\t\t *  @param {function} constr the constructor to find the defaults from\n\t\t *  @return {Array} all of the attributes which belong to the class\n\t\t */\n\t\tTone.prototype._collectDefaults = function(constr){\n\t\t\tvar ret = [];\n\t\t\tif (!isUndef(constr.defaults)){\n\t\t\t\tret = Object.keys(constr.defaults);\n\t\t\t}\n\t\t\tif (!isUndef(constr._super)){\n\t\t\t\tret = ret.concat(this._collectDefaults(constr._super));\n\t\t\t}\n\t\t\treturn ret;\n\t\t};\n\n\t\t/**\n\t\t *  Set the preset if it exists. \n\t\t *  @param {string} presetName the name of the preset\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.setPreset = function(presetName){\n\t\t\tif (!this.isUndef(this.preset) && this.preset.hasOwnProperty(presetName)){\n\t\t\t\tthis.set(this.preset[presetName]);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tCLASS VARS\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  A static pointer to the audio context accessible as `Tone.context`. \n\t\t *  @type {AudioContext}\n\t\t */\n\t\tTone.context = audioContext;\n\n\t\t/**\n\t\t *  The audio context.\n\t\t *  @type {AudioContext}\n\t\t */\n\t\tTone.prototype.context = Tone.context;\n\n\t\t/**\n\t\t *  the default buffer size\n\t\t *  @type {number}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t\tTone.prototype.bufferSize = 2048;\n\n\t\t/**\n\t\t *  the delay time of a single buffer frame\n\t\t *  @type {number}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t\tTone.prototype.bufferTime = Tone.prototype.bufferSize / Tone.context.sampleRate;\n\t\t\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tCONNECTIONS\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.dispose = function(){\n\t\t\tif (!this.isUndef(this.input)){\n\t\t\t\tif (this.input instanceof AudioNode){\n\t\t\t\t\tthis.input.disconnect();\n\t\t\t\t} \n\t\t\t\tthis.input = null;\n\t\t\t}\n\t\t\tif (!this.isUndef(this.output)){\n\t\t\t\tif (this.output instanceof AudioNode){\n\t\t\t\t\tthis.output.disconnect();\n\t\t\t\t} \n\t\t\t\tthis.output = null;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  a silent connection to the DesinationNode\n\t\t *  which will ensure that anything connected to it\n\t\t *  will not be garbage collected\n\t\t *  \n\t\t *  @private\n\t\t */\n\t\tvar _silentNode = null;\n\n\t\t/**\n\t\t *  makes a connection to ensure that the node will not be garbage collected\n\t\t *  until 'dispose' is explicitly called\n\t\t *\n\t\t *  use carefully. circumvents JS and WebAudio's normal Garbage Collection behavior\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.noGC = function(){\n\t\t\tthis.output.connect(_silentNode);\n\t\t\treturn this;\n\t\t};\n\n\t\tAudioNode.prototype.noGC = function(){\n\t\t\tthis.connect(_silentNode);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t\t *  @param  {Tone | AudioParam | AudioNode} unit \n\t\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.connect = function(unit, outputNum, inputNum){\n\t\t\tif (Array.isArray(this.output)){\n\t\t\t\toutputNum = this.defaultArg(outputNum, 0);\n\t\t\t\tthis.output[outputNum].connect(unit, 0, inputNum);\n\t\t\t} else {\n\t\t\t\tthis.output.connect(unit, outputNum, inputNum);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  disconnect the output\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.disconnect = function(outputNum){\n\t\t\tif (Array.isArray(this.output)){\n\t\t\t\toutputNum = this.defaultArg(outputNum, 0);\n\t\t\t\tthis.output[outputNum].disconnect();\n\t\t\t} else {\n\t\t\t\tthis.output.disconnect();\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  connect together all of the arguments in series\n\t\t *  @param {...AudioParam|Tone|AudioNode}\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.connectSeries = function(){\n\t\t\tif (arguments.length > 1){\n\t\t\t\tvar currentUnit = arguments[0];\n\t\t\t\tfor (var i = 1; i < arguments.length; i++){\n\t\t\t\t\tvar toUnit = arguments[i];\n\t\t\t\t\tcurrentUnit.connect(toUnit);\n\t\t\t\t\tcurrentUnit = toUnit;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  fan out the connection from the first argument to the rest of the arguments\n\t\t *  @param {...AudioParam|Tone|AudioNode}\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.connectParallel = function(){\n\t\t\tvar connectFrom = arguments[0];\n\t\t\tif (arguments.length > 1){\n\t\t\t\tfor (var i = 1; i < arguments.length; i++){\n\t\t\t\t\tvar connectTo = arguments[i];\n\t\t\t\t\tconnectFrom.connect(connectTo);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Connect the output of this node to the rest of the nodes in series.\n\t\t *  @example\n\t\t *  //connect a node to an effect, panVol and then to the master output\n\t\t *  node.chain(effect, panVol, Tone.Master);\n\t\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.chain = function(){\n\t\t\tif (arguments.length > 0){\n\t\t\t\tvar currentUnit = this;\n\t\t\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\t\t\tvar toUnit = arguments[i];\n\t\t\t\t\tcurrentUnit.connect(toUnit);\n\t\t\t\t\tcurrentUnit = toUnit;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  connect the output of this node to the rest of the nodes in parallel.\n\t\t *  @param {...AudioParam|Tone|AudioNode}\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.fan = function(){\n\t\t\tif (arguments.length > 0){\n\t\t\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\t\t\tthis.connect(arguments[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t//give native nodes chain and fan methods\n\t\tAudioNode.prototype.chain = Tone.prototype.chain;\n\t\tAudioNode.prototype.fan = Tone.prototype.fan;\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tUTILITIES / HELPERS / MATHS\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  if a the given is undefined, use the fallback. \n\t\t *  if both given and fallback are objects, given\n\t\t *  will be augmented with whatever properties it's\n\t\t *  missing which are in fallback\n\t\t *\n\t\t *  warning: if object is self referential, it will go into an an \n\t\t *  infinite recursive loop. \n\t\t *  \n\t\t *  @param  {*} given    \n\t\t *  @param  {*} fallback \n\t\t *  @return {*}          \n\t\t */\n\t\tTone.prototype.defaultArg = function(given, fallback){\n\t\t\tif (typeof given === \"object\" && typeof fallback === \"object\"){\n\t\t\t\tvar ret = {};\n\t\t\t\t//make a deep copy of the given object\n\t\t\t\tfor (var givenProp in given) {\n\t\t\t\t\tret[givenProp] = this.defaultArg(given[givenProp], given[givenProp]);\n\t\t\t\t}\n\t\t\t\tfor (var prop in fallback) {\n\t\t\t\t\tret[prop] = this.defaultArg(given[prop], fallback[prop]);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\treturn isUndef(given) ? fallback : given;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  returns the args as an options object with given arguments\n\t\t *  mapped to the names provided. \n\t\t *\n\t\t *  if the args given is an array containing an object, it is assumed\n\t\t *  that that's already the options object and will just return it. \n\t\t *  \n\t\t *  @param  {Array} values  the 'arguments' object of the function\n\t\t *  @param  {Array.<string>} keys the names of the arguments as they\n\t\t *                                 should appear in the options object\n\t\t *  @param {Object=} defaults optional defaults to mixin to the returned \n\t\t *                            options object                              \n\t\t *  @return {Object}       the options object with the names mapped to the arguments\n\t\t */\n\t\tTone.prototype.optionsObject = function(values, keys, defaults){\n\t\t\tvar options = {};\n\t\t\tif (values.length === 1 && typeof values[0] === \"object\"){\n\t\t\t\toptions = values[0];\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < keys.length; i++){\n\t\t\t\t\toptions[keys[i]] = values[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.isUndef(defaults)){\n\t\t\t\treturn this.defaultArg(options, defaults);\n\t\t\t} else {\n\t\t\t\treturn options;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  test if the arg is undefined\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is undefined\n\t\t *  @function\n\t\t */\n\t\tTone.prototype.isUndef = isUndef;\n\n\t\t/**\n\t\t *  test if the arg is a function\n\t\t *  @param {*} arg the argument to test\n\t\t *  @returns {boolean} true if the arg is a function\n\t\t *  @function\n\t\t */\n\t\tTone.prototype.isFunction = isFunction;\n\n\t\t/**\n\t\t *  interpolate the input value (0-1) to be between outputMin and outputMax\n\t\t *  @param  {number} input     \n\t\t *  @param  {number} outputMin \n\t\t *  @param  {number} outputMax \n\t\t *  @return {number}           \n\t\t */\n\t\tTone.prototype.interpolate = function(input, outputMin, outputMax){\n\t\t\treturn input*(outputMax - outputMin) + outputMin;\n\t\t};\n\n\t\t/**\n\t\t *  normalize the input to 0-1 from between inputMin to inputMax\n\t\t *  @param  {number} input    \n\t\t *  @param  {number} inputMin \n\t\t *  @param  {number} inputMax \n\t\t *  @return {number}          \n\t\t */\n\t\tTone.prototype.normalize = function(input, inputMin, inputMax){\n\t\t\t//make sure that min < max\n\t\t\tif (inputMin > inputMax){\n\t\t\t\tvar tmp = inputMax;\n\t\t\t\tinputMax = inputMin;\n\t\t\t\tinputMin = tmp;\n\t\t\t} else if (inputMin == inputMax){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn (input - inputMin) / (inputMax - inputMin);\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t// GAIN CONVERSIONS\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  equal power gain scale\n\t\t *  good for cross-fading\n\t\t *  @param  {number} percent (0-1)\n\t\t *  @return {number}         output gain (0-1)\n\t\t */\n\t\tTone.prototype.equalPowerScale = function(percent){\n\t\t\tvar piFactor = 0.5 * Math.PI;\n\t\t\treturn Math.sin(percent * piFactor);\n\t\t};\n\n\t\t/**\n\t\t *  convert db scale to gain scale (0-1)\n\t\t *  @param  {number} db\n\t\t *  @return {number}   \n\t\t */\n\t\tTone.prototype.dbToGain = function(db) {\n\t\t\treturn Math.pow(2, db / 6);\n\t\t};\n\n\t\t/**\n\t\t *  convert gain scale to decibels\n\t\t *  @param  {number} gain (0-1)\n\t\t *  @return {number}   \n\t\t */\n\t\tTone.prototype.gainToDb = function(gain) {\n\t\t\treturn  20 * (Math.log(gain) / Math.LN10);\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tTIMING\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  @return {number} the currentTime from the AudioContext\n\t\t */\n\t\tTone.prototype.now = function(){\n\t\t\treturn this.context.currentTime;\n\t\t};\n\n\t\t/**\n\t\t *  convert a sample count to seconds\n\t\t *  @param  {number} samples \n\t\t *  @return {number}         \n\t\t */\n\t\tTone.prototype.samplesToSeconds = function(samples){\n\t\t\treturn samples / this.context.sampleRate;\n\t\t};\n\n\t\t/**\n\t\t *  convert a time into samples\n\t\t *  \n\t\t *  @param  {Tone.time} time\n\t\t *  @return {number}         \n\t\t */\n\t\tTone.prototype.toSamples = function(time){\n\t\t\tvar seconds = this.toSeconds(time);\n\t\t\treturn Math.round(seconds * this.context.sampleRate);\n\t\t};\n\n\t\t/**\n\t\t *  convert time to seconds\n\t\t *\n\t\t *  this is a simplified version which only handles numbers and \n\t\t *  'now' relative numbers. If the Transport is included this \n\t\t *  method is overridden to include many other features including \n\t\t *  notationTime, Frequency, and transportTime\n\t\t *  \n\t\t *  @param  {number=} time \n\t\t *  @param {number=} now if passed in, this number will be \n\t\t *                       used for all 'now' relative timings\n\t\t *  @return {number}   \tseconds in the same timescale as the AudioContext\n\t\t */\n\t\tTone.prototype.toSeconds = function(time, now){\n\t\t\tnow = this.defaultArg(now, this.now());\n\t\t\tif (typeof time === \"number\"){\n\t\t\t\treturn time; //assuming that it's seconds\n\t\t\t} else if (typeof time === \"string\"){\n\t\t\t\tvar plusTime = 0;\n\t\t\t\tif(time.charAt(0) === \"+\") {\n\t\t\t\t\ttime = time.slice(1);\t\n\t\t\t\t\tplusTime = now;\t\t\t\n\t\t\t\t} \n\t\t\t\treturn parseFloat(time) + plusTime;\n\t\t\t} else {\n\t\t\t\treturn now;\n\t\t\t}\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t// FREQUENCY CONVERSION\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  true if the input is in the format number+hz\n\t\t *  i.e.: 10hz\n\t\t *\n\t\t *  @param {number} freq \n\t\t *  @return {boolean} \n\t\t *  @function\n\t\t */\n\t\tTone.prototype.isFrequency = (function(){\n\t\t\tvar freqFormat = new RegExp(/\\d*\\.?\\d+hz$/i);\n\t\t\treturn function(freq){\n\t\t\t\treturn freqFormat.test(freq);\n\t\t\t};\n\t\t})();\n\n\t\t/**\n\t\t *  Convert a frequency into seconds.\n\t\t *  Accepts numbers and strings: i.e. `\"10hz\"` or \n\t\t *  `10` both return `0.1`. \n\t\t *  \n\t\t *  @param  {number|string} freq \n\t\t *  @return {number}      \n\t\t */\n\t\tTone.prototype.frequencyToSeconds = function(freq){\n\t\t\treturn 1 / parseFloat(freq);\n\t\t};\n\n\t\t/**\n\t\t *  Convert a number in seconds to a frequency.\n\t\t *  @param  {number} seconds \n\t\t *  @return {number}         \n\t\t */\n\t\tTone.prototype.secondsToFrequency = function(seconds){\n\t\t\treturn 1/seconds;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tINHERITANCE\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t\t *  to inherit the parent's properties, make sure to call \n\t\t *  Parent.call(this) in the child's constructor\n\t\t *\n\t\t *  based on closure library's inherit function\n\t\t *\n\t\t *  @static\n\t\t *  @param  {function} \tchild  \n\t\t *  @param  {function=} parent (optional) parent to inherit from\n\t\t *                             if no parent is supplied, the child\n\t\t *                             will inherit from Tone\n\t\t */\n\t\tTone.extend = function(child, parent){\n\t\t\tif (isUndef(parent)){\n\t\t\t\tparent = Tone;\n\t\t\t}\n\t\t\tfunction TempConstructor(){}\n\t\t\tTempConstructor.prototype = parent.prototype;\n\t\t\tchild.prototype = new TempConstructor();\n\t\t\t/** @override */\n\t\t\tchild.prototype.constructor = child;\n\t\t\tchild._super = parent;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tCONTEXT\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  array of callbacks to be invoked when a new context is added\n\t\t *  @private \n\t\t *  @private\n\t\t */\n\t\tvar newContextCallbacks = [];\n\n\t\t/**\n\t\t *  invoke this callback when a new context is added\n\t\t *  will be invoked initially with the first context\n\t\t *  @private \n\t\t *  @static\n\t\t *  @param {function(AudioContext)} callback the callback to be invoked\n\t\t *                                           with the audio context\n\t\t */\n\t\tTone._initAudioContext = function(callback){\n\t\t\t//invoke the callback with the existing AudioContext\n\t\t\tcallback(Tone.context);\n\t\t\t//add it to the array\n\t\t\tnewContextCallbacks.push(callback);\n\t\t};\n\n\t\t/**\n\t\t *  Tone.js automatically creates a context on init, but if you are working\n\t\t *  with other libraries which also create an AudioContext, it can be\n\t\t *  useful to set your own. If you are going to set your own context, \n\t\t *  be sure to do it at the start of your code, before creating any objects.\n\t\t *  @static\n\t\t *  @param {AudioContext} ctx The new audio context to set\n\t\t */\n\t\tTone.setContext = function(ctx){\n\t\t\t//set the prototypes\n\t\t\tTone.prototype.context = ctx;\n\t\t\tTone.context = ctx;\n\t\t\t//invoke all the callbacks\n\t\t\tfor (var i = 0; i < newContextCallbacks.length; i++){\n\t\t\t\tnewContextCallbacks[i](ctx);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  Bind this to a touchstart event to start the audio on mobile devices. \n\t\t *  <br>\n\t\t *  http://stackoverflow.com/questions/12517000/no-sound-on-ios-6-web-audio-api/12569290#12569290\n\t\t *  @static\n\t\t */\n\t\tTone.startMobile = function(){\n\t\t\tvar osc = Tone.context.createOscillator();\n\t\t\tvar silent = Tone.context.createGain();\n\t\t\tsilent.gain.value = 0;\n\t\t\tosc.connect(silent);\n\t\t\tsilent.connect(Tone.context.destination);\n\t\t\tvar now = Tone.context.currentTime;\n\t\t\tosc.start(now);\n\t\t\tosc.stop(now+1);\n\t\t};\n\n\t\t//setup the context\n\t\tTone._initAudioContext(function(audioContext){\n\t\t\t//set the bufferTime\n\t\t\tTone.prototype.bufferTime = Tone.prototype.bufferSize / audioContext.sampleRate;\n\t\t\t_silentNode = audioContext.createGain();\n\t\t\t_silentNode.gain.value = 0;\n\t\t\t_silentNode.connect(audioContext.destination);\n\t\t});\n\n\t\tconsole.log(\"%c * Tone.js r4 * \", \"background: #000; color: #fff\");\n\n\t\treturn Tone;\n\t});\n\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Base class for all Signals\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t\tTone.SignalBase = function(){\n\n\t\t};\n\n\t\tTone.extend(Tone.SignalBase);\n\n\t\t/**\n\t\t *  When signals connect to other signals or AudioParams, \n\t\t *  they take over the output value of that signal or AudioParam. \n\t\t *  For all other nodes, the behavior is the same as a normal `connect`. \n\t\t *\n\t\t *  @override\n\t\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node \n\t\t *  @param {number} [outputNumber=0] \n\t\t *  @param {number} [inputNumber=0] \n\t\t *  @returns {Tone.SignalBase} `this`\n\t\t */\n\t\tTone.SignalBase.prototype.connect = function(node, outputNumber, inputNumber){\n\t\t\t//zero it out so that the signal can have full control\n\t\t\tif (node.constructor === Tone.Signal){\n\t\t\t\t//cancel changes\n\t\t\t\tnode._value.cancelScheduledValues(0);\n\t\t\t\t//reset the value\n\t\t\t\tnode._value.value = 0;\n\t\t\t} else if (node instanceof AudioParam){\n\t\t\t\tnode.cancelScheduledValues(0);\n\t\t\t\tnode.value = 0;\n\t\t\t} \n\t\t\tTone.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.SignalBase;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Wraps the WaveShaperNode\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {function(number, number)|Array|number} mapping the function used to define the values. \n\t\t *                                    The mapping function should take two arguments: \n\t\t *                                    the first is the value at the current position \n\t\t *                                    and the second is the array position. \n\t\t *                                    If the argument is an array, that array will be\n\t\t *                                    set as the wave shapping function\n\t\t *  @param {number} [bufferLen=1024] the length of the WaveShaperNode buffer.\n\t\t *  @example\n\t\t *  var timesTwo = new Tone.WaveShaper(function(val){\n\t\t *  \treturn val * 2;\n\t\t *  }, 2048);\n\t\t */\n\t\tTone.WaveShaper = function(mapping, bufferLen){\n\n\t\t\t/**\n\t\t\t *  the waveshaper\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._shaper = this.input = this.output = this.context.createWaveShaper();\n\n\t\t\t/**\n\t\t\t *  the waveshapers curve\n\t\t\t *  @type {Float32Array}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._curve = null;\n\n\t\t\tif (Array.isArray(mapping)){\n\t\t\t\tthis.curve = mapping;\n\t\t\t} else if (isFinite(mapping) || this.isUndef(mapping)){\n\t\t\t\tthis._curve = new Float32Array(this.defaultArg(mapping, 1024));\n\t\t\t} else if (this.isFunction(mapping)){\n\t\t\t\tthis._curve = new Float32Array(this.defaultArg(bufferLen, 1024));\n\t\t\t\tthis.setMap(mapping);\n\t\t\t} \n\t\t};\n\n\t\tTone.extend(Tone.WaveShaper, Tone.SignalBase);\n\n\t\t/**\n\t\t *  uses a mapping function to set the value of the curve\n\t\t *  @param {function(number, number)} mapping the function used to define the values. \n\t\t *                                    The mapping function should take two arguments: \n\t\t *                                    the first is the value at the current position \n\t\t *                                    and the second is the array position\n\t\t *  @returns {Tone.WaveShaper} `this`\n\t\t */\n\t\tTone.WaveShaper.prototype.setMap = function(mapping){\n\t\t\tfor (var i = 0, len = this._curve.length; i < len; i++){\n\t\t\t\tvar normalized = (i / (len)) * 2 - 1;\n\t\t\t\tthis._curve[i] = mapping(normalized, i);\n\t\t\t}\n\t\t\tthis._shaper.curve = this._curve;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * The array to set as the waveshaper curve\n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {Array}\n\t\t * @name curve\n\t\t */\n\t\tObject.defineProperty(Tone.WaveShaper.prototype, \"curve\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._shaper.curve;\n\t\t\t},\n\t\t\tset : function(mapping){\n\t\t\t\t//fixes safari WaveShaperNode bug\n\t\t\t\tif (this._isSafari()){\n\t\t\t\t\tvar first = mapping[0];\n\t\t\t\t\tmapping.unshift(first);\t\n\t\t\t\t}\n\t\t\t\tthis._curve = new Float32Array(mapping);\n\t\t\t\tthis._shaper.curve = this._curve;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The oversampling. Can either be \"none\", \"2x\" or \"4x\"\n\t\t * @memberOf Tone.WaveShaper#\n\t\t * @type {string}\n\t\t * @name curve\n\t\t */\n\t\tObject.defineProperty(Tone.WaveShaper.prototype, \"oversample\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._shaper.oversample;\n\t\t\t},\n\t\t\tset : function(oversampling){\n\t\t\t\tthis._shaper.oversample = oversampling;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  returns true if the browser is safari\n\t\t *  @return  {boolean} \n\t\t *  @private\n\t\t */\n\t\tTone.WaveShaper.prototype._isSafari = function(){\n\t\t\tvar ua = navigator.userAgent.toLowerCase(); \n\t\t\treturn ua.indexOf(\"safari\") !== -1 && ua.indexOf(\"chrome\") === -1;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.WaveShaper} `this`\n\t\t */\n\t\tTone.WaveShaper.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._shaper.disconnect();\n\t\t\tthis._shaper = null;\n\t\t\tthis._curve = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.WaveShaper;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Constant audio-rate signal.\n\t\t *          Tone.Signal is a core component which allows for sample-accurate \n\t\t *          synchronization of many components. Tone.Signal can be scheduled \n\t\t *          with all of the functions available to AudioParams\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number|AudioParam} [value=0] initial value or the AudioParam to control\n\t\t *                                       note that the signal has no output\n\t\t *                                       if an AudioParam is passed in.\n\t\t *  @param {Tone.Signal.Unit} [units=Number] unit the units the signal is in\n\t\t *  @example\n\t\t *  var signal = new Tone.Signal(10);\n\t\t */\n\t\tTone.Signal = function(value, units){\n\n\t\t\t/**\n\t\t\t * the units the signal is in\n\t\t\t * @type {Tone.Signal.Type}\n\t\t\t */\n\t\t\tthis.units = this.defaultArg(units, Tone.Signal.Units.Number);\n\n\t\t\t/**\n\t\t\t * The node where the constant signal value is scaled.\n\t\t\t * @type {AudioParam}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis.output = this._scaler = this.context.createGain();\n\n\t\t\t/**\n\t\t\t * The node where the value is set.\n\t\t\t * @type {AudioParam}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis.input = this._value = this._scaler.gain;\n\n\t\t\tif (value instanceof AudioParam){\n\t\t\t\tthis._scaler.connect(value);\n\t\t\t\t//zero out the value\n\t\t\t\tvalue.value = 0;\n\t\t\t} else {\n\t\t\t\tthis.value = this.defaultArg(value, Tone.Signal.defaults.value);\n\t\t\t}\n\n\t\t\t//connect the constant 1 output to the node output\n\t\t\tTone.Signal._constant.chain(this._scaler);\n\t\t};\n\n\t\tTone.extend(Tone.Signal, Tone.SignalBase);\n\n\t\t/**\n\t\t *  The default values\n\t\t *  @type  {Object}\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t\tTone.Signal.defaults = {\n\t\t\t\"value\" : 0\n\t\t};\n\n\t\t/**\n\t\t * The value of the signal. \n\t\t * @memberOf Tone.Signal#\n\t\t * @type {Tone.Time|Tone.Frequency|number}\n\t\t * @name value\n\t\t */\n\t\tObject.defineProperty(Tone.Signal.prototype, \"value\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._toUnits(this._value.value);\n\t\t\t},\n\t\t\tset : function(value){\n\t\t\t\tvar convertedVal = this._fromUnits(value);\n\t\t\t\t//is this what you want?\n\t\t\t\tthis.cancelScheduledValues(0);\n\t\t\t\tthis._value.value = convertedVal;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @private\n\t\t * @param  {Tone.Time|Tone.Volume|Tone.Frequency|number|undefined} val the value to convert\n\t\t * @return {number}     the number which the value should be set to\n\t\t */\n\t\tTone.Signal.prototype._fromUnits = function(val){\n\t\t\tswitch(this.units){\n\t\t\t\tcase Tone.Signal.Units.Time: \n\t\t\t\t\treturn this.toSeconds(val);\n\t\t\t\tcase Tone.Signal.Units.Frequency: \n\t\t\t\t\treturn this.toFrequency(val);\n\t\t\t\tcase Tone.Signal.Units.Decibels: \n\t\t\t\t\treturn this.dbToGain(val);\n\t\t\t\tcase Tone.Signal.Units.Normal: \n\t\t\t\t\treturn Math.min(Math.max(val, 0), 1);\n\t\t\t\tcase Tone.Signal.Units.Audio: \n\t\t\t\t\treturn Math.min(Math.max(val, -1), 1);\n\t\t\t\tdefault:\n\t\t\t\t\treturn val;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * convert to the desired units\n\t\t * @private\n\t\t * @param  {number} val the value to convert\n\t\t * @return {number}\n\t\t */\n\t\tTone.Signal.prototype._toUnits = function(val){\n\t\t\tswitch(this.units){\n\t\t\t\tcase Tone.Signal.Units.Decibels: \n\t\t\t\t\treturn this.gainToDb(val);\n\t\t\t\tdefault:\n\t\t\t\t\treturn val;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  Schedules a parameter value change at the given time.\n\t\t *  @param {number}\t\tvalue \n\t\t *  @param {Tone.Time}  time \n\t\t *  @returns {Tone.Signal} `this`\n\t\t */\n\t\tTone.Signal.prototype.setValueAtTime = function(value, time){\n\t\t\tvalue = this._fromUnits(value);\n\t\t\tthis._value.setValueAtTime(value, this.toSeconds(time));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Creates a schedule point with the current value at the current time.\n\t\t *\n\t\t *  @param {number=} now (optionally) pass the now value in\n\t\t *  @returns {Tone.Signal} `this`\n\t\t */\n\t\tTone.Signal.prototype.setCurrentValueNow = function(now){\n\t\t\tnow = this.defaultArg(now, this.now());\n\t\t\tvar currentVal = this._value.value;\n\t\t\tthis.cancelScheduledValues(now);\n\t\t\tthis._value.setValueAtTime(currentVal, now);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Schedules a linear continuous change in parameter value from the \n\t\t *  previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Tone.Time} endTime \n\t\t *  @returns {Tone.Signal} `this`\n\t\t */\n\t\tTone.Signal.prototype.linearRampToValueAtTime = function(value, endTime){\n\t\t\tvalue = this._fromUnits(value);\n\t\t\tthis._value.linearRampToValueAtTime(value, this.toSeconds(endTime));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the previous scheduled parameter value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Tone.Time} endTime \n\t\t *  @returns {Tone.Signal} `this`\n\t\t */\n\t\tTone.Signal.prototype.exponentialRampToValueAtTime = function(value, endTime){\n\t\t\tvalue = this._fromUnits(value);\n\t\t\t//can't go below a certain value\n\t\t\tvalue = Math.max(0.00001, value);\n\t\t\tthis._value.exponentialRampToValueAtTime(value, this.toSeconds(endTime));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Schedules an exponential continuous change in parameter value from \n\t\t *  the current time and current value to the given value.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Tone.Time} rampTime the time that it takes the \n\t\t *                               value to ramp from it's current value\n\t\t *  @returns {Tone.Signal} `this`\n\t\t *  @example\n\t\t *  //exponentially ramp to the value 2 over 4 seconds. \n\t\t *  signal.exponentialRampToValueNow(2, 4);\n\t\t */\n\t\tTone.Signal.prototype.exponentialRampToValueNow = function(value, rampTime ){\n\t\t\tvar now = this.now();\n\t\t\tthis.setCurrentValueNow(now);\n\t\t\tthis.exponentialRampToValueAtTime(value, now + this.toSeconds(rampTime ));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Schedules an linear continuous change in parameter value from \n\t\t *  the current time and current value to the given value at the given time.\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Tone.Time} rampTime the time that it takes the \n\t\t *                               value to ramp from it's current value\n\t\t *  @returns {Tone.Signal} `this`\n\t\t *  @example\n\t\t *  //linearly ramp to the value 4 over 3 seconds. \n\t\t *  signal.linearRampToValueNow(4, 3);\n\t\t */\n\t\tTone.Signal.prototype.linearRampToValueNow = function(value, rampTime){\n\t\t\tvar now = this.now();\n\t\t\tthis.setCurrentValueNow(now);\n\t\t\tthis.linearRampToValueAtTime(value, now + this.toSeconds(rampTime));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Start exponentially approaching the target value at the given time with\n\t\t *  a rate having the given time constant.\n\t\t *  @param {number} value        \n\t\t *  @param {Tone.Time} startTime    \n\t\t *  @param {number} timeConstant \n\t\t *  @returns {Tone.Signal} `this`\n\t\t */\n\t\tTone.Signal.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\t\t\tvalue = this._fromUnits(value);\n\t\t\tthis._value.setTargetAtTime(value, this.toSeconds(startTime), timeConstant);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Sets an array of arbitrary parameter values starting at the given time\n\t\t *  for the given duration.\n\t\t *  \t\n\t\t *  @param {Array<number>} values    \n\t\t *  @param {Tone.Time} startTime \n\t\t *  @param {Tone.Time} duration  \n\t\t *  @returns {Tone.Signal} `this`\n\t\t */\n\t\tTone.Signal.prototype.setValueCurveAtTime = function(values, startTime, duration){\n\t\t\tfor (var i = 0; i < values.length; i++){\n\t\t\t\tvalues[i] = this._fromUnits(values[i]);\n\t\t\t}\n\t\t\tthis._value.setValueCurveAtTime(values, this.toSeconds(startTime), this.toSeconds(duration));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Cancels all scheduled parameter changes with times greater than or \n\t\t *  equal to startTime.\n\t\t *  \n\t\t *  @param  {Tone.Time} startTime\n\t\t *  @returns {Tone.Signal} `this`\n\t\t */\n\t\tTone.Signal.prototype.cancelScheduledValues = function(startTime){\n\t\t\tthis._value.cancelScheduledValues(this.toSeconds(startTime));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Ramps to the given value over the duration of the rampTime. \n\t\t *  Automatically selects the best ramp type (exponential or linear)\n\t\t *  depending on the `units` of the signal\n\t\t *  \n\t\t *  @param  {number} value   \n\t\t *  @param  {Tone.Time} rampTime the time that it takes the \n\t\t *                               value to ramp from it's current value\n\t\t *  @returns {Tone.Signal} `this`\n\t\t *  @example\n\t\t *  //ramp to the value either linearly or exponentially \n\t\t *  //depending on the \"units\" value of the signal\n\t\t *  signal.rampTo(0, 10);\n\t\t */\n\t\tTone.Signal.prototype.rampTo = function(value, rampTime){\n\t\t\trampTime = this.defaultArg(rampTime, 0);\n\t\t\tif (this.units === Tone.Signal.Units.Frequency || this.units === Tone.Signal.Units.BPM){\n\t\t\t\tthis.exponentialRampToValueNow(value, rampTime);\n\t\t\t} else {\n\t\t\t\tthis.linearRampToValueNow(value, rampTime);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Signal} `this`\n\t\t */\n\t\tTone.Signal.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._value = null;\n\t\t\tthis._scaler = null;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * The units the Signal is in\n\t\t * @enum {string}\n\t\t */\n\t\tTone.Signal.Units = {\n\t\t\t/** The default type. */\n\t\t\tNumber : \"number\",\n\t\t\t/** Tone.Time will be converted into seconds. */\n\t\t\tTime : \"time\",\n\t\t\t/** Tone.Frequency will be converted into hertz. */\n\t\t\tFrequency : \"frequency\",\n\t\t\t/** A Gain value. */\n\t\t\tGain : \"gain\",\n\t\t\t/** Within normal range [0,1]. */\n\t\t\tNormal : \"normal\",\n\t\t\t/** Within normal range [-1,1]. */\n\t\t\tAudio : \"audio\",\n\t\t\t/** In decibels. */\n\t\t\tDecibels : \"db\",\n\t\t\t/** In half-step increments, i.e. 12 is an octave above the root. */\n\t\t\tInterval : \"interval\",\n\t\t\t/** Beats per minute. */\n\t\t\tBPM : \"bpm\"\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tSTATIC\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  the constant signal generator\n\t\t *  @static\n\t\t *  @private\n\t\t *  @const\n\t\t *  @type {OscillatorNode}\n\t\t */\n\t\tTone.Signal._generator = null;\n\n\t\t/**\n\t\t *  the signal generator waveshaper. makes the incoming signal\n\t\t *  only output 1 for all inputs.\n\t\t *  @static\n\t\t *  @private\n\t\t *  @const\n\t\t *  @type {Tone.WaveShaper}\n\t\t */\n\t\tTone.Signal._constant = null;\n\n\t\t/**\n\t\t *  initializer function\n\t\t */\n\t\tTone._initAudioContext(function(audioContext){\n\t\t\tTone.Signal._generator = audioContext.createOscillator();\n\t\t\tTone.Signal._constant = new Tone.WaveShaper([1,1]);\n\t\t\tTone.Signal._generator.connect(Tone.Signal._constant);\n\t\t\tTone.Signal._generator.start(0);\n\t\t\tTone.Signal._generator.noGC();\n\t\t});\n\n\t\treturn Tone.Signal;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t\t *         must be in the range -1,1\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {number} exp the exponent to apply to the incoming signal, must be at least 2. \n\t\t *  @example\n\t\t *  var pow = new Tone.Pow(2);\n\t\t *  var sig = new Tone.Signal(0.5).connect(pow);\n\t\t *  //output of pow is 0.25. \n\t\t */\n\t\tTone.Pow = function(exp){\n\n\t\t\t/**\n\t\t\t * the exponent\n\t\t\t * @private\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tthis._exp = this.defaultArg(exp, 1);\n\n\t\t\t/**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t\t};\n\n\t\tTone.extend(Tone.Pow, Tone.SignalBase);\n\n\t\t/**\n\t\t * The value of the exponent\n\t\t * @memberOf Tone.Pow#\n\t\t * @type {number}\n\t\t * @name value\n\t\t */\n\t\tObject.defineProperty(Tone.Pow.prototype, \"value\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._exp;\n\t\t\t},\n\t\t\tset : function(exp){\n\t\t\t\tthis._exp = exp;\n\t\t\t\tthis._expScaler.setMap(this._expFunc(this._exp));\n\t\t\t}\n\t\t});\n\n\n\t\t/**\n\t\t *  the function which maps the waveshaper\n\t\t *  @param   {number} exp\n\t\t *  @return {function}\n\t\t *  @private\n\t\t */\n\t\tTone.Pow.prototype._expFunc = function(exp){\n\t\t\treturn function(val){\n\t\t\t\treturn Math.pow(Math.abs(val), exp);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Pow} `this`\n\t\t */\n\t\tTone.Pow.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._expScaler.dispose();\n\t\t\tthis._expScaler = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Pow;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  ADSR envelope generator attaches to an AudioParam or Signal. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Tone.Time|Object} [attack=0.01]\tthe attack time in seconds\n\t\t *  @param {Tone.Time} [decay=0.1]\tthe decay time in seconds\n\t\t *  @param {number} [sustain=0.5] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Tone.Time} [release=1]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var gainNode = Tone.context.createGain();\n\t\t *  var env = new Tone.Envelope({\n\t\t *  \t\"attack\" : 0.1,\n\t\t *  \t\"decay\" : 0.2,\n\t\t *  \t\"sustain\" : 1,\n\t\t *  \t\"release\" : 0.8,\n\t\t *  });\n\t\t *  env.connect(gainNode.gain);\n\t\t */\n\t\tTone.Envelope = function(){\n\n\t\t\t//get all of the defaults\n\t\t\tvar options = this.optionsObject(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope.defaults);\n\n\t\t\t/** \n\t\t\t *  The attack time\n\t\t\t *  @type {Tone.Time}\n\t\t\t */\n\t\t\tthis.attack = options.attack;\n\n\t\t\t/**\n\t\t\t *  The decay time\n\t\t\t *  @type {Tone.Time}\n\t\t\t */\n\t\t\tthis.decay = options.decay;\n\t\t\t\n\t\t\t/**\n\t\t\t *  the sustain is a value between 0-1\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis.sustain = options.sustain;\n\n\t\t\t/**\n\t\t\t *  The release time\n\t\t\t *  @type {Tone.Time}\n\t\t\t */\n\t\t\tthis.release = options.release;\n\n\t\t\t/**\n\t\t\t *  the signal\n\t\t\t *  @type {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sig = this.output = new Tone.Signal(0);\n\t\t};\n\n\t\tTone.extend(Tone.Envelope);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t */\n\t\tTone.Envelope.defaults = {\n\t\t\t\"attack\" : 0.01,\n\t\t\t\"decay\" : 0.1,\n\t\t\t\"sustain\" : 0.5,\n\t\t\t\"release\" : 1,\n\t\t};\n\n\t\t/**\n\t\t *  the envelope time multipler\n\t\t *  @type {number}\n\t\t *  @private\n\t\t */\n\t\tTone.Envelope.prototype._timeMult = 0.25;\n\n\t\t/**\n\t\t *  Trigger the attack/decay portion of the ADSR envelope. \n\t\t *  @param  {Tone.Time} [time=now]\n\t\t *  @param {number} [velocity=1] the velocity of the envelope scales the vales.\n\t\t *                               number between 0-1\n\t\t *  @returns {Tone.Envelope} `this`\n\t\t *  @example\n\t\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t\t */\n\t\tTone.Envelope.prototype.triggerAttack = function(time, velocity){\n\t\t\tvelocity = this.defaultArg(velocity, 1);\n\t\t\tvar attack = this.toSeconds(this.attack);\n\t\t\tvar decay = this.toSeconds(this.decay);\n\t\t\tvar scaledMax = velocity;\n\t\t\tvar sustainVal = this.sustain * scaledMax;\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis._sig.cancelScheduledValues(time);\n\t\t\tthis._sig.setTargetAtTime(scaledMax, time, attack * this._timeMult);\n\t\t\tthis._sig.setTargetAtTime(sustainVal, time + attack, decay * this._timeMult);\t\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t/**\n\t\t *  Triggers the release of the envelope.\n\t\t *  @param  {Tone.Time} [time=now]\n\t\t *  @returns {Tone.Envelope} `this`\n\t\t *  @example\n\t\t *  //trigger release immediately\n\t\t *  env.triggerRelease();\n\t\t */\n\t\tTone.Envelope.prototype.triggerRelease = function(time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis._sig.cancelScheduledValues(time);\n\t\t\tvar release = this.toSeconds(this.release);\n\t\t\tthis._sig.setTargetAtTime(0, time, release * this._timeMult);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Trigger the attack and release after a sustain time\n\t\t *  @param {Tone.Time} duration the duration of the note\n\t\t *  @param {Tone.Time} [time=now] the time of the attack\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.Envelope} `this`\n\t\t *  @example\n\t\t *  //trigger the attack and then the release after 0.6 seconds.\n\t\t *  env.triggerAttackRelease(0.6);\n\t\t */\n\t\tTone.Envelope.prototype.triggerAttackRelease = function(duration, time, velocity) {\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis.triggerAttack(time, velocity);\n\t\t\tthis.triggerRelease(time + this.toSeconds(duration));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Borrows the connect method from {@link Tone.Signal}\n\t\t *  @function\n\t\t */\n\t\tTone.Envelope.prototype.connect = Tone.Signal.prototype.connect;\n\n\t\t/**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone.Envelope} `this`\n\t\t */\n\t\tTone.Envelope.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._sig.dispose();\n\t\t\tthis._sig = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Envelope;\n\t});\n\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  An Envelope connected to a gain node which can be used as an amplitude envelope.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @param {Tone.Time|Object} [attack=0.01]\tthe attack time in seconds\n\t\t *  @param {Tone.Time} [decay=0.1]\tthe decay time in seconds\n\t\t *  @param {number} [sustain=0.5] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Tone.Time} [release=1]\tthe release time in seconds\n\t\t *  @example\n\t\t *  \n\t\t *  var ampEnv = new Tone.AmplitudeEnvelope(0.1, 0.2, 1, 0.8);\n\t\t *  var osc = new Tone.Oscillator();\n\t\t *  //or with an object\n\t\t *  osc.chain(ampEnv, Tone.Master);\n\t\t */\n\t\tTone.AmplitudeEnvelope = function(){\n\n\t\t\tTone.Envelope.apply(this, arguments);\n\n\t\t\t/**\n\t\t\t *  the input node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.input = this.output = this.context.createGain();\n\n\t\t\tthis._sig.connect(this.output.gain);\n\t\t};\n\n\t\tTone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\n\t\treturn Tone.AmplitudeEnvelope;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A thin wrapper around the DynamicsCompressorNode\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {number} [threshold=-24] threshold in decibels\n\t\t *  @param {number} [ratio=12] gain reduction ratio\n\t\t *  @example\n\t\t *  var comp = new Tone.Compressor(-30, 3);\n\t\t */\n\t\tTone.Compressor = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"threshold\", \"ratio\"], Tone.Compressor.defaults);\n\n\t\t\t/**\n\t\t\t *  the compressor node\n\t\t\t *  @type {DynamicsCompressorNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._compressor = this.context.createDynamicsCompressor();\n\n\t\t\t/**\n\t\t\t *  the input and output\n\t\t\t */\n\t\t\tthis.input = this.output = this._compressor;\n\n\t\t\t/**\n\t\t\t *  the threshold vaue\n\t\t\t *  @type {AudioParam}\n\t\t\t */\n\t\t\tthis.threshold = this._compressor.threshold;\n\n\t\t\t/**\n\t\t\t *  The attack parameter\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.attack = new Tone.Signal(this._compressor.attack, Tone.Signal.Units.Time);\n\n\t\t\t/**\n\t\t\t *  The release parameter\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.release = new Tone.Signal(this._compressor.release, Tone.Signal.Units.Time);\n\n\t\t\t/**\n\t\t\t *  The knee parameter\n\t\t\t *  @type {AudioParam}\n\t\t\t */\n\t\t\tthis.knee = this._compressor.knee;\n\n\t\t\t/**\n\t\t\t *  The ratio value\n\t\t\t *  @type {AudioParam}\n\t\t\t */\n\t\t\tthis.ratio = this._compressor.ratio;\n\n\t\t\t//set the defaults\n\t\t\tthis.set(options);\n\t\t};\n\n\t\tTone.extend(Tone.Compressor);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Compressor.defaults = {\n\t\t\t\"ratio\" : 12,\n\t\t\t\"threshold\" : -24,\n\t\t\t\"release\" : 0.25,\n\t\t\t\"attack\" : 0.003,\n\t\t\t\"knee\" : 30\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Compressor} `this`\n\t\t */\n\t\tTone.Compressor.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._compressor.disconnect();\n\t\t\tthis._compressor = null;\n\t\t\tthis.attack.dispose();\n\t\t\tthis.attack = null;\n\t\t\tthis.release.dispose();\n\t\t\tthis.release = null;\n\t\t\tthis.threshold = null;\n\t\t\tthis.ratio = null;\n\t\t\tthis.knee = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Compressor;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Add a signal and a number or two signals. <br><br>\n\t\t *         input 0: augend. input 1: addend. <br><br>\n\t\t *         Add can be used in two ways, either constructed with a value,\n\t\t *         or constructed with no initial value and with signals connected\n\t\t *         to each of its two inputs. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value if no value is provided, Tone.Add will sum the first\n\t\t *                         and second inputs. \n\t\t *  @example\n\t\t *  var signal = new Tone.Signal(2);\n\t\t *  var add = new Tone.Add(2);\n\t\t *  signal.connect(add);\n\t\t *  //the output of add equals 4\n\t\t *\n\t\t *  //if constructed with no arguments\n\t\t *  //it will add the first and second inputs\n\t\t *  var add = new Tone.Add();\n\t\t *  var sig0 = new Tone.Signal(3).connect(add, 0, 0);\n\t\t *  var sig1 = new Tone.Signal(4).connect(add, 0, 1);\n\t\t *  //the output of add equals 7. \n\t\t */\n\t\tTone.Add = function(value){\n\n\t\t\tTone.call(this, 2, 0);\n\n\t\t\t/**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sum = this.input[0] = this.input[1] = this.output = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis._value = this.input[1] = new Tone.Signal(value);\n\n\t\t\tthis._value.connect(this._sum);\n\t\t};\n\n\t\tTone.extend(Tone.Add, Tone.Signal);\n\t\t\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Add} `this`\n\t\t */\n\t\tTone.Add.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._sum.disconnect();\n\t\t\tthis._sum = null;\n\t\t\tthis._value.dispose();\n\t\t\tthis._value = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.Add;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Multiply the incoming signal by a number or Multiply two signals.\n\t\t *          input 0: multiplicand.\n\t\t *          input 1: multiplier.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} value constant value to multiple. if no value is provided\n\t\t *                         it will be multiplied by the value of input 1.\n\t\t *  @example\n\t\t *  var mult = new Tone.Multiply(3);\n\t\t *  var sig = new Tone.Signal(2).connect(mult);\n\t\t *  //output of mult is 6. \n\t\t */\n\t\tTone.Multiply = function(value){\n\n\t\t\tTone.call(this, 2, 0);\n\n\t\t\t/**\n\t\t\t *  the input node is the same as the output node\n\t\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t\t *  \n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._mult = this.input[0] = this.output = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the scaling parameter\n\t\t\t *  @type {AudioParam}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._value = this.input[1] = this.output.gain;\n\t\t\t\n\t\t\tthis._value.value = this.defaultArg(value, 0);\n\t\t};\n\n\t\tTone.extend(Tone.Multiply, Tone.Signal);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Multiply} `this`\n\t\t */\n\t\tTone.Multiply.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._mult = null;\n\t\t\tthis._value = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.Multiply;\n\t});\n\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t *  var neg = new Tone.Negate();\n\t\t *  var sig = new Tone.Signal(-2).connect(neg);\n\t\t *  //output of neg is positive 2. \n\t\t */\n\t\tTone.Negate = function(){\n\t\t\t/**\n\t\t\t *  negation is done by multiplying by -1\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._multiply = this.input = this.output= new Tone.Multiply(-1);\n\t\t};\n\n\t\tTone.extend(Tone.Negate, Tone.SignalBase);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Negate} `this`\n\t\t */\n\t\tTone.Negate.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._multiply.dispose();\n\t\t\tthis._multiply = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.Negate;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Subtract a signal and a number or two signals. \n\t\t *         input 0 : minuend.\n\t\t *         input 1 : subtrahend\n\t\t *\n\t\t *  @extends {Tone.Signal}\n\t\t *  @constructor\n\t\t *  @param {number=} value value to subtract from the incoming signal. If the value\n\t\t *                         is omitted, it will subtract the second signal from the first\n\t\t *  @example\n\t\t *  var sub = new Tone.Subtract(1);\n\t\t *  var sig = new Tone.Signal(4).connect(sub);\n\t\t *  //the output of sub is 3. \n\t\t */\n\t\tTone.Subtract = function(value){\n\n\t\t\tTone.call(this, 2, 0);\n\n\t\t\t/**\n\t\t\t *  the summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sum = this.input[0] = this.output = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  negate the input of the second input before connecting it\n\t\t\t *  to the summing node.\n\t\t\t *  @type {Tone.Negate}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._neg = new Tone.Negate();\n\n\t\t\t/**\n\t\t\t *  the node where the value is set\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis._value = this.input[1] = new Tone.Signal(value);\n\n\t\t\tthis._value.chain(this._neg, this._sum);\n\t\t};\n\n\t\tTone.extend(Tone.Subtract, Tone.Signal);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.SignalBase} `this`\n\t\t */\n\t\tTone.Subtract.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._neg.dispose();\n\t\t\tthis._neg = null;\n\t\t\tthis._sum.disconnect();\n\t\t\tthis._sum = null;\n\t\t\tthis._value.dispose();\n\t\t\tthis._value = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Subtract;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t *  var gt0 = new Tone.GreaterThanZero();\n\t\t *  var sig = new Tone.Signal(0.01).connect(gt0);\n\t\t *  //the output of gt0 is 1. \n\t\t *  sig.value = 0;\n\t\t *  //the output of gt0 is 0. \n\t\t */\n\t\tTone.GreaterThanZero = function(){\n\t\t\t\n\t\t\t/**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._thresh = this.output = new Tone.WaveShaper(function(val){\n\t\t\t\tif (val <= 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/**\n\t\t\t *  scale the first thresholded signal by a large value.\n\t\t\t *  this will help with values which are very close to 0\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._scale = this.input = new Tone.Multiply(10000);\n\n\t\t\t//connections\n\t\t\tthis._scale.connect(this._thresh);\n\t\t};\n\n\t\tTone.extend(Tone.GreaterThanZero, Tone.SignalBase);\n\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThanZero} `this`\n\t\t */\n\t\tTone.GreaterThanZero.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._scale.dispose();\n\t\t\tthis._scale = null;\n\t\t\tthis._thresh.dispose();\n\t\t\tthis._thresh = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.GreaterThanZero;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  EqualZero outputs 1 when the input is strictly greater than zero\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t *  var eq0 = new Tone.EqualZero();\n\t\t *  var sig = new Tone.Signal(0).connect(eq0);\n\t\t *  //the output of eq0 is 1. \n\t\t */\n\t\tTone.EqualZero = function(){\n\n\t\t\t/**\n\t\t\t *  scale the incoming signal by a large factor\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t */\n\t\t\tthis._scale = this.input = new Tone.Multiply(10000);\n\t\t\t\n\t\t\t/**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._thresh = new Tone.WaveShaper(function(val){\n\t\t\t\tif (val === 0){\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}, 128);\n\n\t\t\t/**\n\t\t\t *  threshold the output so that it's 0 or 1\n\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._gtz = this.output = new Tone.GreaterThanZero();\n\n\t\t\t//connections\n\t\t\tthis._scale.chain(this._thresh, this._gtz);\n\t\t};\n\n\t\tTone.extend(Tone.EqualZero, Tone.SignalBase);\n\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.EqualZero} `this`\n\t\t */\n\t\tTone.EqualZero.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._gtz.dispose();\n\t\t\tthis._gtz = null;\n\t\t\tthis._scale.dispose();\n\t\t\tthis._scale = null;\n\t\t\tthis._thresh.dispose();\n\t\t\tthis._thresh = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.EqualZero;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Output 1 if the signal is equal to the value, otherwise outputs 0. \n\t\t *          Can accept two signals if connected to inputs 0 and 1.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} value the number to compare the incoming signal to\n\t\t *  @example\n\t\t *  var eq = new Tone.Equal(3);\n\t\t *  var sig = new Tone.Signal(3).connect(eq);\n\t\t *  //the output of eq is 1. \n\t\t */\n\t\tTone.Equal = function(value){\n\n\t\t\tTone.call(this, 2, 0);\n\n\t\t\t/**\n\t\t\t *  subtract the value from the incoming signal\n\t\t\t *  \n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sub = this.input[0] = new Tone.Subtract(value);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.EqualZero}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._equals = this.output = new Tone.EqualZero();\n\n\t\t\tthis._sub.connect(this._equals);\n\t\t\tthis.input[1] = this._sub.input[1];\n\t\t};\n\n\t\tTone.extend(Tone.Equal, Tone.SignalBase);\n\n\t\t/**\n\t\t * The value to compare to the incoming signal.\n\t\t * @memberOf Tone.Equal#\n\t\t * @type {number}\n\t\t * @name value\n\t\t */\n\t\tObject.defineProperty(Tone.Equal.prototype, \"value\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._sub.value;\n\t\t\t},\n\t\t\tset : function(value){\n\t\t\t\tthis._sub.value = value;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Equal} `this`\n\t\t */\n\t\tTone.Equal.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._equals.disconnect();\n\t\t\tthis._equals = null;\n\t\t\tthis._sub.dispose();\n\t\t\tthis._sub = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Equal;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Select between any number of inputs, sending the one \n\t\t *         selected by the gate signal to the output\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [sourceCount=2] the number of inputs the switch accepts\n\t\t *  @example\n\t\t *  var sel = new Tone.Select(2);\n\t\t *  var sigA = new Tone.Signal(10).connect(sel, 0, 0);\n\t\t *  var sigB = new Tone.Signal(20).connect(sel, 0, 1);\n\t\t *  sel.gate.value = 0;\n\t\t *  //sel outputs 10 (the value of sigA);\n\t\t *  sel.gate.value = 1;\n\t\t *  //sel outputs 20 (the value of sigB);\n\t\t */\n\t\tTone.Select = function(sourceCount){\n\n\t\t\tsourceCount = this.defaultArg(sourceCount, 2);\n\n\t\t\tTone.call(this, sourceCount, 1);\n\n\t\t\t/**\n\t\t\t *  the control signal\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.gate = new Tone.Signal(0);\n\n\t\t\t//make all the inputs and connect them\n\t\t\tfor (var i = 0; i < sourceCount; i++){\n\t\t\t\tvar switchGate = new SelectGate(i);\n\t\t\t\tthis.input[i] = switchGate;\n\t\t\t\tthis.gate.connect(switchGate.selecter);\n\t\t\t\tswitchGate.connect(this.output);\n\t\t\t}\n\t\t};\n\n\t\tTone.extend(Tone.Select, Tone.SignalBase);\n\n\t\t/**\n\t\t *  open one of the inputs and close the other\n\t\t *  @param {number} which open one of the gates (closes the other)\n\t\t *  @param {Tone.Time=} time the time when the switch will open\n\t\t *  @returns {Tone.Select} `this`\n\t\t *  @example\n\t\t *  //open input 1 in a half second from now\n\t\t *  sel.select(1, \"+0.5\");\n\t\t */\n\t\tTone.Select.prototype.select = function(which, time){\n\t\t\t//make sure it's an integer\n\t\t\twhich = Math.floor(which);\n\t\t\tthis.gate.setValueAtTime(which, this.toSeconds(time));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Select} `this`\n\t\t */\n\t\tTone.Select.prototype.dispose = function(){\n\t\t\tthis.gate.dispose();\n\t\t\tfor (var i = 0; i < this.input.length; i++){\n\t\t\t\tthis.input[i].dispose();\n\t\t\t\tthis.input[i] = null;\n\t\t\t}\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.gate = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\t////////////START HELPER////////////\n\n\t\t/**\n\t\t *  helper class for Tone.Select representing a single gate\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @private\n\t\t */\n\t\tvar SelectGate = function(num){\n\n\t\t\t/**\n\t\t\t *  the selector\n\t\t\t *  @type {Tone.Equal}\n\t\t\t */\n\t\t\tthis.selecter = new Tone.Equal(num);\n\n\t\t\t/**\n\t\t\t *  the gate\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.gate = this.input = this.output = this.context.createGain();\n\n\t\t\t//connect the selecter to the gate gain\n\t\t\tthis.selecter.connect(this.gate.gain);\n\t\t};\n\n\t\tTone.extend(SelectGate);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @private\n\t\t */\n\t\tSelectGate.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.selecter.dispose();\n\t\t\tthis.gate.disconnect();\n\t\t\tthis.selecter = null;\n\t\t\tthis.gate = null;\n\t\t};\n\n\t\t////////////END HELPER////////////\n\n\t\t//return Tone.Select\n\t\treturn Tone.Select;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class IfThenElse has three inputs. When the first input (if) is true (i.e. === 1), \n\t\t *         then it will pass the second input (then) through to the output, otherwise, \n\t\t *         if it's not true (i.e. === 0) then it will pass the third input (else) \n\t\t *         through to the output. \n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var ifThenElse = new Tone.IfThenElse();\n\t\t *  var ifSignal = new Tone.Signal(1).connect(ifThenElse, 0, 0);\n\t\t *  var thenSignal = new Tone.PWMOscillator().connect(ifThenElse, 0, 1);\n\t\t *  var elseSignal = new Tone.PulseOscillator().connect(ifThenElse, 0, 2);\n\t\t *  //ifThenElse outputs thenSignal\n\t\t *  signal.value = 0;\n\t\t *  //now ifThenElse outputs elseSignal\n\t\t */\n\t\tTone.IfThenElse = function(){\n\n\t\t\tTone.call(this, 3, 0);\n\n\t\t\t/**\n\t\t\t *  the selector node which is responsible for the routing\n\t\t\t *  @type {Tone.Select}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._selector = this.output = new Tone.Select(2);\n\n\t\t\t//the input mapping\n\t\t\tthis.if = this.input[0] = this._selector.gate;\n\t\t\tthis.then = this.input[1] = this._selector.input[1];\n\t\t\tthis.else = this.input[2] = this._selector.input[0];\n\t\t};\n\n\t\tTone.extend(Tone.IfThenElse, Tone.SignalBase);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.IfThenElse} `this`\n\t\t */\n\t\tTone.IfThenElse.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._selector.dispose();\n\t\t\tthis._selector = null;\n\t\t\tthis.if = null;\n\t\t\tthis.then = null;\n\t\t\tthis.else = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.IfThenElse;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class OR the inputs together. True if at least one of the inputs is true. \n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var or = new Tone.OR(2);\n\t\t *  var sigA = new Tone.Signal(0)connect(or, 0, 0);\n\t\t *  var sigB = new Tone.Signal(1)connect(or, 0, 1);\n\t\t *  //output of or is 1 because at least\n\t\t *  //one of the inputs is equal to 1. \n\t\t */\n\t\tTone.OR = function(inputCount){\n\n\t\t\tinputCount = this.defaultArg(inputCount, 2);\n\t\t\tTone.call(this, inputCount, 0);\n\n\t\t\t/**\n\t\t\t *  a private summing node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sum = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Equal}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._gtz = new Tone.GreaterThanZero();\n\n\t\t\t/**\n\t\t\t *  the output\n\t\t\t *  @type {Tone.Equal}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.output = this._gtz;\n\n\t\t\t//make each of the inputs an alias\n\t\t\tfor (var i = 0; i < inputCount; i++){\n\t\t\t\tthis.input[i] = this._sum;\n\t\t\t}\n\t\t\tthis._sum.connect(this._gtz);\n\t\t};\n\n\t\tTone.extend(Tone.OR, Tone.SignalBase);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.OR} `this`\n\t\t */\n\t\tTone.OR.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._gtz.dispose();\n\t\t\tthis._gtz = null;\n\t\t\tthis._sum.disconnect();\n\t\t\tthis._sum = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.OR;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class and returns 1 when all the inputs are equal to 1\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {number} [inputCount=2] the number of inputs. NOTE: all inputs are\n\t\t *                                 connected to the single AND input node\n\t\t *  @example\n\t\t *  var and = new Tone.AND(2);\n\t\t *  var sigA = new Tone.Signal(0).connect(and, 0, 0);\n\t\t *  var sigB = new Tone.Signal(1).connect(and, 0, 1);\n\t\t *  //the output of and is 0. \n\t\t */\n\t\tTone.AND = function(inputCount){\n\n\t\t\tinputCount = this.defaultArg(inputCount, 2);\n\n\t\t\tTone.call(this, inputCount, 0);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Equal}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._equals = this.output = new Tone.Equal(inputCount);\n\n\t\t\t//make each of the inputs an alias\n\t\t\tfor (var i = 0; i < inputCount; i++){\n\t\t\t\tthis.input[i] = this._equals;\n\t\t\t}\n\t\t};\n\n\t\tTone.extend(Tone.AND, Tone.SignalBase);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.AND} `this`\n\t\t */\n\t\tTone.AND.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._equals.dispose();\n\t\t\tthis._equals = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.AND;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Just an alias for EqualZero. but has the same effect as a NOT operator. \n\t\t *          Outputs 1 when input equals 0. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t *  var not = new Tone.NOT();\n\t\t *  var sig = new Tone.Signal(1).connect(not);\n\t\t *  //output of not equals 0. \n\t\t *  sig.value = 0;\n\t\t *  //output of not equals 1.\n\t\t */\n\t\tTone.NOT = Tone.EqualZero;\n\n\t\treturn Tone.NOT;\n\t});\n\tToneModule( \n\t\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.\n\t\t *          can compare two signals or a signal and a number. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t *  @example\n\t\t *  var gt = new Tone.GreaterThan(2);\n\t\t *  var sig = new Tone.Signal(4).connect(gt);\n\t\t *  //output of gt is equal 1. \n\t\t */\n\t\tTone.GreaterThan = function(value){\n\n\t\t\tTone.call(this, 2, 0);\n\t\t\t\n\t\t\t/**\n\t\t\t *  subtract the amount from the incoming signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._value = this.input[0] = new Tone.Subtract(value);\n\t\t\tthis.input[1] = this._value.input[1];\n\n\t\t\t/**\n\t\t\t *  compare that amount to zero\n\t\t\t *  @type {Tone.GreaterThanZero}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._gtz = this.output = new Tone.GreaterThanZero();\n\n\t\t\t//connect\n\t\t\tthis._value.connect(this._gtz);\n\t\t};\n\n\t\tTone.extend(Tone.GreaterThan, Tone.Signal);\n\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.GreaterThan} `this`\n\t\t */\n\t\tTone.GreaterThan.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._value.dispose();\n\t\t\tthis._value = null;\n\t\t\tthis._gtz.dispose();\n\t\t\tthis._gtz = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.GreaterThan;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Output 1 if the signal is less than the value, otherwise outputs 0.\n\t\t *          Can compare two signals or a signal and a number. <br><br>\n\t\t *          input 0: left hand side of comparison.<br><br>\n\t\t *          input 1: right hand side of comparison.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number} [value=0] the value to compare to the incoming signal\n\t\t *  @example\n\t\t *  var lt = new Tone.LessThan(2);\n\t\t *  var sig = new Tone.Signal(-1).connect(lt);\n\t\t *  //lt outputs 1 because sig < 2\n\t\t */\n\t\tTone.LessThan = function(value){\n\n\t\t\tTone.call(this, 2, 0);\n\n\t\t\t/**\n\t\t\t *  negate the incoming signal\n\t\t\t *  @type {Tone.Negate}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._neg = this.input[0] = new Tone.Negate();\n\n\t\t\t/**\n\t\t\t *  input < value === -input > -value\n\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._gt = this.output = new Tone.GreaterThan();\n\n\t\t\t/**\n\t\t\t *  negate the signal coming from the second input\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Negate}\n\t\t\t */\n\t\t\tthis._rhNeg = new Tone.Negate();\n\n\t\t\t/**\n\t\t\t *  the node where the value is set\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis._value = this.input[1] = new Tone.Signal(value);\n\n\t\t\t//connect\n\t\t\tthis._neg.connect(this._gt);\n\t\t\tthis._value.connect(this._rhNeg);\t\n\t\t\tthis._rhNeg.connect(this._gt, 0, 1);\n\t\t};\n\n\t\tTone.extend(Tone.LessThan, Tone.Signal);\n\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.LessThan} `this`\n\t\t */\n\t\tTone.LessThan.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._neg.dispose();\n\t\t\tthis._neg = null;\n\t\t\tthis._gt.dispose();\n\t\t\tthis._gt = null;\n\t\t\tthis._rhNeg.dispose();\n\t\t\tthis._rhNeg = null;\n\t\t\tthis._value.dispose();\n\t\t\tthis._value = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.LessThan;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class return the absolute value of an incoming signal\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t *  var signal = new Tone.Signal(-1);\n\t\t *  var abs = new Tone.Abs();\n\t\t *  signal.connect(abs);\n\t\t *  //the output of abs is 1. \n\t\t */\n\t\tTone.Abs = function(){\n\t\t\tTone.call(this, 1, 0);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.LessThan}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._ltz = new Tone.LessThan(0);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Select}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._switch = this.output = new Tone.Select(2);\n\t\t\t\n\t\t\t/**\n\t\t\t *  @type {Tone.Negate}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._negate = new Tone.Negate();\n\n\t\t\t//two signal paths, positive and negative\n\t\t\tthis.input.connect(this._switch, 0, 0);\n\t\t\tthis.input.connect(this._negate);\n\t\t\tthis._negate.connect(this._switch, 0, 1);\n\t\t\t\n\t\t\t//the control signal\n\t\t\tthis.input.chain(this._ltz, this._switch.gate);\n\t\t};\n\n\t\tTone.extend(Tone.Abs, Tone.SignalBase);\n\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Abs} `this`\n\t\t */\n\t\tTone.Abs.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._switch.dispose();\n\t\t\tthis._switch = null;\n\t\t\tthis._ltz.dispose();\n\t\t\tthis._ltz = null;\n\t\t\tthis._negate.dispose();\n\t\t\tthis._negate = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.Abs;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t * \t@class  outputs the greater of two signals. If a number is provided in the constructor\n\t\t * \t        it will use that instead of the signal. \n\t\t * \t\n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number=} max max value if provided. if not provided, it will use the\n\t\t *                       signal value from input 1. \n\t\t *  @example\n\t\t *  var max = new Tone.Max(2);\n\t\t *  var sig = new Tone.Signal(3).connect(max);\n\t\t *  //max outputs 3\n\t\t *  sig.value = 1;\n\t\t *  //max outputs 2\n\t\t */\n\t\tTone.Max = function(max){\n\n\t\t\tTone.call(this, 2, 0);\n\t\t\tthis.input[0] = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the max signal\n\t\t\t *  @type {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._value = this.input[1] = new Tone.Signal(max);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Select}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._ifThenElse = this.output = new Tone.IfThenElse();\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Select}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._gt = new Tone.GreaterThan();\n\n\t\t\t//connections\n\t\t\tthis.input[0].chain(this._gt, this._ifThenElse.if);\n\t\t\tthis.input[0].connect(this._ifThenElse.then);\n\t\t\tthis._value.connect(this._ifThenElse.else);\n\t\t\tthis._value.connect(this._gt, 0, 1);\n\t\t};\n\n\t\tTone.extend(Tone.Max, Tone.Signal);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Max} `this`\n\t\t */\n\t\tTone.Max.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._value.dispose();\n\t\t\tthis._ifThenElse.dispose();\n\t\t\tthis._gt.dispose();\n\t\t\tthis._value = null;\n\t\t\tthis._ifThenElse = null;\n\t\t\tthis._gt = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Max;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t * \t@class  Outputs the lesser of two signals. If a number is given \n\t\t * \t        in the constructor, it will use a signal and a number. \n\t\t * \t\n\t\t *  @constructor\n\t\t *  @extends {Tone.Signal}\n\t\t *  @param {number} min the minimum to compare to the incoming signal\n\t\t *  @example\n\t\t *  var min = new Tone.Min(2);\n\t\t *  var sig = new Tone.Signal(3).connect(min);\n\t\t *  //min outputs 2\n\t\t *  sig.value = 1;\n\t\t *  //min outputs 1\n\t\t */\n\t\tTone.Min = function(min){\n\n\t\t\tTone.call(this, 2, 0);\n\t\t\tthis.input[0] = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Select}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._ifThenElse = this.output = new Tone.IfThenElse();\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Select}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._lt = new Tone.LessThan();\n\n\t\t\t/**\n\t\t\t *  the min signal\n\t\t\t *  @type {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._value = this.input[1] = new Tone.Signal(min);\n\n\t\t\t//connections\n\t\t\tthis.input[0].chain(this._lt, this._ifThenElse.if);\n\t\t\tthis.input[0].connect(this._ifThenElse.then);\n\t\t\tthis._value.connect(this._ifThenElse.else);\n\t\t\tthis._value.connect(this._lt, 0, 1);\n\t\t};\n\n\t\tTone.extend(Tone.Min, Tone.Signal);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Min} `this`\n\t\t */\n\t\tTone.Min.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._value.dispose();\n\t\t\tthis._ifThenElse.dispose();\n\t\t\tthis._lt.dispose();\n\t\t\tthis._value = null;\n\t\t\tthis._ifThenElse = null;\n\t\t\tthis._lt = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Min;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Signal-rate modulo operator. Only works in audio range [-1, 1] and for modulus\n\t\t *         values less than 1. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} modulus the modulus to apply\n\t\t *  @example\n\t\t *  var mod = new Tone.Modulo(0.2)\n\t\t *  var sig = new Tone.Signal(0.5).connect(mod);\n\t\t *  //mod outputs 0.1\n\t\t */\n\t\tTone.Modulo = function(modulus){\n\n\t\t\tTone.call(this, 1, 1);\n\n\t\t\t/**\n\t\t\t *  A waveshaper gets the integer multiple of \n\t\t\t *  the input signal and the modulus.\n\t\t\t *  @private\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t */\n\t\t\tthis._shaper = new Tone.WaveShaper(Math.pow(2, 16));\n\n\t\t\t/**\n\t\t\t *  the integer multiple is multiplied by the modulus\n\t\t\t *  @type  {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._multiply = new Tone.Multiply();\n\n\t\t\t/**\n\t\t\t *  and subtracted from the input signal\n\t\t\t *  @type  {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._subtract = this.output = new Tone.Subtract();\n\n\t\t\t/**\n\t\t\t *  the modulus signal\n\t\t\t *  @type  {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._modSignal = new Tone.Signal(modulus);\n\n\t\t\t//connections\n\t\t\tthis.input.fan(this._shaper, this._subtract);\n\t\t\tthis._modSignal.connect(this._multiply, 0, 0);\n\t\t\tthis._shaper.connect(this._multiply, 0, 1);\n\t\t\tthis._multiply.connect(this._subtract, 0, 1);\n\t\t\tthis._setWaveShaper(modulus);\n\t\t};\n\n\t\tTone.extend(Tone.Modulo, Tone.SignalBase);\n\n\t\t/**\n\t\t *  @param  {number}  mod  the modulus to apply\n\t\t *  @private\n\t\t */\n\t\tTone.Modulo.prototype._setWaveShaper = function(mod){\n\t\t\tthis._shaper.setMap(function(val){\n\t\t\t\tvar multiple = Math.floor((val + 0.0001) / mod);\n\t\t\t\treturn multiple;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * The modulus value.\n\t\t * @memberOf Tone.Modulo#\n\t\t * @type {number}\n\t\t * @name value\n\t\t */\n\t\tObject.defineProperty(Tone.Modulo.prototype, \"value\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._modSignal.value;\n\t\t\t},\n\t\t\tset : function(mod){\n\t\t\t\tthis._modSignal.value = mod;\n\t\t\t\tthis._setWaveShaper(mod);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * clean up\n\t\t *  @returns {Tone.Modulo} `this`\n\t\t */\n\t\tTone.Modulo.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._shaper.dispose();\n\t\t\tthis._shaper = null;\n\t\t\tthis._multiply.dispose();\n\t\t\tthis._multiply = null;\n\t\t\tthis._subtract.dispose();\n\t\t\tthis._subtract = null;\n\t\t\tthis._modSignal.dispose();\n\t\t\tthis._modSignal = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Modulo;\n\t});\n\tToneModule( \n\t\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class evaluate an expression at audio rate. \n\t\t *         parsing code modified from https://code.google.com/p/tapdigit/\n\t\t *         Copyright 2011 2012 Ariya Hidayat, New BSD License\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {string} expr the expression to generate\n\t\t *  @example\n\t\t *  //adds the signals from input 0 and input 1.\n\t\t *  var expr = new Tone.Expr(\"$0 + $1\");\n\t\t */\n\t\tTone.Expr = function(){\n\n\t\t\tvar expr = this._replacements(Array.prototype.slice.call(arguments));\n\t\t\tvar inputCount = this._parseInputs(expr);\n\n\t\t\t/**\n\t\t\t *  hold onto all of the nodes for disposal\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._nodes = [];\n\n\t\t\t/**\n\t\t\t *  The inputs. The length is determined by the expression. \n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t\tthis.input = new Array(inputCount);\n\n\t\t\t//create a gain for each input\n\t\t\tfor (var i = 0; i < inputCount; i++){\n\t\t\t\tthis.input[i] = this.context.createGain();\n\t\t\t}\n\n\t\t\t//parse the syntax tree\n\t\t\tvar tree = this._parseTree(expr);\n\t\t\t//evaluate the results\n\t\t\tvar result;\n\t\t\ttry {\n\t\t\t\tresult = this._eval(tree);\n\t\t\t} catch (e){\n\t\t\t\tthis._disposeNodes();\n\t\t\t\tthrow new Error(\"Could evaluate expression: \"+expr);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *  The output node is the result of the expression\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t\t\tthis.output = result;\n\t\t};\n\n\t\tTone.extend(Tone.Expr, Tone.SignalBase);\n\n\t\t//some helpers to cut down the amount of code\n\t\tfunction applyBinary(Constructor, args, self){\n\t\t\tvar op = new Constructor();\n\t\t\tself._eval(args[0]).connect(op, 0, 0);\n\t\t\tself._eval(args[1]).connect(op, 0, 1);\n\t\t\treturn op;\n\t\t}\n\t\tfunction applyUnary(Constructor, args, self){\n\t\t\tvar op = new Constructor();\n\t\t\tself._eval(args[0]).connect(op, 0, 0);\n\t\t\treturn op;\n\t\t}\n\t\tfunction getNumber(arg){\n\t\t\treturn arg ? parseFloat(arg) : undefined;\n\t\t}\n\t\tfunction literalNumber(arg){\n\t\t\treturn arg && arg.args ? parseFloat(arg.args) : undefined;\n\t\t}\n\n\t\t/*\n\t\t *  the Expressions that Tone.Expr can parse.\n\t\t *\n\t\t *  each expression belongs to a group and contains a regexp \n\t\t *  for selecting the operator as well as that operators method\n\t\t *  \n\t\t *  @type {Object}\n\t\t *  @private\n\t\t */\n\t\tTone.Expr._Expressions = {\n\t\t\t//values\n\t\t\t\"value\" : {\n\t\t\t\t\"signal\" : {\n\t\t\t\t\tregexp : /^\\d+\\.\\d+|^\\d+/,\n\t\t\t\t\tmethod : function(arg){\n\t\t\t\t\t\tvar sig = new Tone.Signal(getNumber(arg));\n\t\t\t\t\t\treturn sig;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"input\" : {\n\t\t\t\t\tregexp : /^\\$\\d/,\n\t\t\t\t\tmethod : function(arg, self){\n\t\t\t\t\t\treturn self.input[getNumber(arg.substr(1))];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t//syntactic glue\n\t\t\t\"glue\" : {\n\t\t\t\t\"(\" : {\n\t\t\t\t\tregexp : /^\\(/,\n\t\t\t\t},\n\t\t\t\t\")\" : {\n\t\t\t\t\tregexp : /^\\)/,\n\t\t\t\t},\n\t\t\t\t\",\" : {\n\t\t\t\t\tregexp : /^,/,\n\t\t\t\t}\n\t\t\t},\n\t\t\t//functions\n\t\t\t\"func\" : {\n\t\t\t\t\"abs\" :  {\n\t\t\t\t\tregexp : /^abs/,\n\t\t\t\t\tmethod : applyUnary.bind(this, Tone.Abs)\n\t\t\t\t},\n\t\t\t\t\"min\" : {\n\t\t\t\t\tregexp : /^min/,\n\t\t\t\t\tmethod : applyBinary.bind(this, Tone.Min)\n\t\t\t\t},\n\t\t\t\t\"max\" : {\n\t\t\t\t\tregexp : /^max/,\n\t\t\t\t\tmethod : applyBinary.bind(this, Tone.Max)\n\t\t\t\t},\n\t\t\t\t\"if\" :  {\n\t\t\t\t\tregexp : /^if/,\n\t\t\t\t\tmethod : function(args, self){\n\t\t\t\t\t\tvar op = new Tone.IfThenElse();\n\t\t\t\t\t\tself._eval(args[0]).connect(op.if);\n\t\t\t\t\t\tself._eval(args[1]).connect(op.then);\n\t\t\t\t\t\tself._eval(args[2]).connect(op.else);\n\t\t\t\t\t\treturn op;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"gt0\" : {\n\t\t\t\t\tregexp : /^gt0/,\n\t\t\t\t\tmethod : applyUnary.bind(this, Tone.GreaterThanZero)\n\t\t\t\t},\n\t\t\t\t\"eq0\" : {\n\t\t\t\t\tregexp : /^eq0/,\n\t\t\t\t\tmethod : applyUnary.bind(this, Tone.EqualZero)\n\t\t\t\t},\n\t\t\t\t\"mod\" : {\n\t\t\t\t\tregexp : /^mod/,\n\t\t\t\t\tmethod : function(args, self){\n\t\t\t\t\t\tvar modulus = literalNumber(args[1]);\n\t\t\t\t\t\tvar op = new Tone.Modulo(modulus);\n\t\t\t\t\t\tself._eval(args[0]).connect(op);\n\t\t\t\t\t\treturn op;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"pow\" : {\n\t\t\t\t\tregexp : /^pow/,\n\t\t\t\t\tmethod : function(args, self){\n\t\t\t\t\t\tvar exp = literalNumber(args[1]);\n\t\t\t\t\t\tvar op = new Tone.Pow(exp);\n\t\t\t\t\t\tself._eval(args[0]).connect(op);\n\t\t\t\t\t\treturn op;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t//binary expressions\n\t\t\t\"binary\" : {\n\t\t\t\t\"+\" : {\n\t\t\t\t\tregexp : /^\\+/,\n\t\t\t\t\tprecedence : 1,\n\t\t\t\t\tmethod : applyBinary.bind(this, Tone.Add)\n\t\t\t\t},\n\t\t\t\t\"-\" : {\n\t\t\t\t\tregexp : /^\\-/,\n\t\t\t\t\tprecedence : 1,\n\t\t\t\t\tmethod : function(args, self){\n\t\t\t\t\t\t//both unary and binary op\n\t\t\t\t\t\tif (args.length === 1){\n\t\t\t\t\t\t\treturn applyUnary(Tone.Negate, args, self);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn applyBinary(Tone.Subtract, args, self);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"*\" : {\n\t\t\t\t\tregexp : /^\\*/,\n\t\t\t\t\tprecedence : 0,\n\t\t\t\t\tmethod : applyBinary.bind(this, Tone.Multiply)\n\t\t\t\t},\n\t\t\t\t\">\" : {\n\t\t\t\t\tregexp : /^\\>/,\n\t\t\t\t\tprecedence : 2,\n\t\t\t\t\tmethod : applyBinary.bind(this, Tone.GreaterThan)\n\t\t\t\t},\n\t\t\t\t\"<\" : {\n\t\t\t\t\tregexp : /^</,\n\t\t\t\t\tprecedence : 2,\n\t\t\t\t\tmethod : applyBinary.bind(this, Tone.LessThan)\n\t\t\t\t},\n\t\t\t\t\"==\" : {\n\t\t\t\t\tregexp : /^==/,\n\t\t\t\t\tprecedence : 3,\n\t\t\t\t\tmethod : applyBinary.bind(this, Tone.Equal)\n\t\t\t\t},\n\t\t\t\t\"&&\" : {\n\t\t\t\t\tregexp : /^&&/,\n\t\t\t\t\tprecedence : 4,\n\t\t\t\t\tmethod : applyBinary.bind(this, Tone.AND)\n\t\t\t\t},\n\t\t\t\t\"||\" : {\n\t\t\t\t\tregexp : /^\\|\\|/,\n\t\t\t\t\tprecedence : 5,\n\t\t\t\t\tmethod : applyBinary.bind(this, Tone.OR)\n\t\t\t\t},\n\t\t\t},\n\t\t\t//unary expressions\n\t\t\t\"unary\" : {\n\t\t\t\t\"-\" : {\n\t\t\t\t\tregexp : /^\\-/,\n\t\t\t\t\tmethod : applyUnary.bind(this, Tone.Negate)\n\t\t\t\t},\n\t\t\t\t\"!\" : {\n\t\t\t\t\tregexp : /^\\!/,\n\t\t\t\t\tmethod : applyUnary.bind(this, Tone.NOT)\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\t\t\n\t\t/**\n\t\t *  @param   {string} expr the expression string\n\t\t *  @return  {number}      the input count\n\t\t *  @private\n\t\t */\n\t\tTone.Expr.prototype._parseInputs = function(expr){\n\t\t\tvar inputArray = expr.match(/\\$\\d/g);\n\t\t\tvar inputMax = 0;\n\t\t\tif (inputArray !== null){\n\t\t\t\tfor (var i = 0; i < inputArray.length; i++){\n\t\t\t\t\tvar inputNum = parseInt(inputArray[i].substr(1)) + 1;\n\t\t\t\t\tinputMax = Math.max(inputMax, inputNum);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn inputMax;\n\t\t};\n\n\t\t/**\n\t\t *  @param   {Array} args \tan array of arguments\n\t\t *  @return  {string} the results of the replacements being replaced\n\t\t *  @private\n\t\t */\n\t\tTone.Expr.prototype._replacements = function(args){\n\t\t\tvar expr = args.shift();\n\t\t\tfor (var i = 0; i < args.length; i++){\n\t\t\t\texpr = expr.replace(/\\%/i, args[i]);\n\t\t\t}\n\t\t\treturn expr;\n\t\t};\n\n\t\t/**\n\t\t *  tokenize the expression based on the Expressions object\n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}      returns two methods on the tokenized list, next and peek\n\t\t *  @private\n\t\t */\n\t\tTone.Expr.prototype._tokenize = function(expr){\n\t\t\tvar position = -1;\n\t\t\tvar tokens = [];\n\n\t\t\twhile(expr.length > 0){\n\t\t\t\texpr = expr.trim();\n\t\t\t\tvar token =  getNextToken(expr);\n\t\t\t\ttokens.push(token);\n\t\t\t\texpr = expr.substr(token.value.length);\n\t\t\t}\n\n\t\t\tfunction getNextToken(expr){\n\t\t\t\tfor (var type in Tone.Expr._Expressions){\n\t\t\t\t\tvar group = Tone.Expr._Expressions[type];\n\t\t\t\t\tfor (var opName in group){\n\t\t\t\t\t\tvar op = group[opName];\n\t\t\t\t\t\tvar reg = op.regexp;\n\t\t\t\t\t\tvar match = expr.match(reg);\n\t\t\t\t\t\tif (match !== null){\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttype : type,\n\t\t\t\t\t\t\t\tvalue : match[0],\n\t\t\t\t\t\t\t\tmethod : op.method\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new SyntaxError(\"Unexpected token \"+expr);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tnext : function(){\n\t\t\t\t\treturn tokens[++position];\n\t\t\t\t},\n\t\t\t\tpeek : function(){\n\t\t\t\t\treturn tokens[position + 1];\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t *  recursively parse the string expression into a syntax tree\n\t\t *  \n\t\t *  @param   {string} expr \n\t\t *  @return  {Object}\n\t\t *  @private\n\t\t */\n\t\tTone.Expr.prototype._parseTree = function(expr){\n\t\t\tvar lexer = this._tokenize(expr);\n\t\t\tvar isUndef = this.isUndef.bind(this);\n\n\t\t\tfunction matchSyntax(token, syn) {\n\t\t\t\treturn !isUndef(token) && \n\t\t\t\t\ttoken.type === \"glue\" &&\n\t\t\t\t\ttoken.value === syn;\n\t\t\t}\n\n\t\t\tfunction matchGroup(token, groupName, prec) {\n\t\t\t\tvar ret = false;\n\t\t\t\tvar group = Tone.Expr._Expressions[groupName];\n\t\t\t\tif (!isUndef(token)){\n\t\t\t\t\tfor (var opName in group){\n\t\t\t\t\t\tvar op = group[opName];\n\t\t\t\t\t\tif (op.regexp.test(token.value)){\n\t\t\t\t\t\t\tif (!isUndef(prec)){\n\t\t\t\t\t\t\t\tif(op.precedence === prec){\t\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tfunction parseExpression(precedence) {\n\t\t\t\tif (isUndef(precedence)){\n\t\t\t\t\tprecedence = 5;\n\t\t\t\t}\n\t\t\t\tvar expr;\n\t\t\t\tif (precedence < 0){\n\t\t\t\t\texpr = parseUnary();\n\t\t\t\t} else {\n\t\t\t\t\texpr = parseExpression(precedence-1);\n\t\t\t\t}\n\t\t\t\tvar token = lexer.peek();\n\t\t\t\twhile (matchGroup(token, \"binary\", precedence)) {\n\t\t\t\t\ttoken = lexer.next();\n\t\t\t\t\texpr = {\n\t\t\t\t\t\toperator: token.value,\n\t\t\t\t\t\tmethod : token.method,\n\t\t\t\t\t\targs : [\n\t\t\t\t\t\t\texpr,\n\t\t\t\t\t\t\tparseExpression(precedence)\n\t\t\t\t\t\t]\n\t\t\t\t\t};\n\t\t\t\t\ttoken = lexer.peek();\n\t\t\t\t}\n\t\t\t\treturn expr;\n\t\t\t}\n\n\t\t\tfunction parseUnary() {\n\t\t\t\tvar token, expr;\n\t\t\t\ttoken = lexer.peek();\n\t\t\t\tif (matchGroup(token, \"unary\")) {\n\t\t\t\t\ttoken = lexer.next();\n\t\t\t\t\texpr = parseUnary();\n\t\t\t\t\treturn {\n\t\t\t\t\t\toperator: token.value,\n\t\t\t\t\t\tmethod : token.method,\n\t\t\t\t\t\targs : [expr]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn parsePrimary();\n\t\t\t}\n\n\t\t\tfunction parsePrimary() {\n\t\t\t\tvar token, expr;\n\t\t\t\ttoken = lexer.peek();\n\t\t\t\tif (isUndef(token)) {\n\t\t\t\t\tthrow new SyntaxError(\"Unexpected termination of expression\");\n\t\t\t\t}\n\t\t\t\tif (token.type === \"func\") {\n\t\t\t\t\ttoken = lexer.next();\n\t\t\t\t\treturn parseFunctionCall(token);\n\t\t\t\t}\n\t\t\t\tif (token.type === \"value\") {\n\t\t\t\t\ttoken = lexer.next();\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmethod : token.method,\n\t\t\t\t\t\targs : token.value\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (matchSyntax(token, \"(\")) {\n\t\t\t\t\tlexer.next();\n\t\t\t\t\texpr = parseExpression();\n\t\t\t\t\ttoken = lexer.next();\n\t\t\t\t\tif (!matchSyntax(token, \")\")) {\n\t\t\t\t\t\tthrow new SyntaxError(\"Expected )\");\n\t\t\t\t\t}\n\t\t\t\t\treturn expr;\n\t\t\t\t}\n\t\t\t\tthrow new SyntaxError(\"Parse error, cannot process token \" + token.value);\n\t\t\t}\n\n\t\t\tfunction parseFunctionCall(func) {\n\t\t\t\tvar token, args = [];\n\t\t\t\ttoken = lexer.next();\n\t\t\t\tif (!matchSyntax(token, \"(\")) {\n\t\t\t\t\tthrow new SyntaxError(\"Expected ( in a function call \\\"\" + func.value + \"\\\"\");\n\t\t\t\t}\n\t\t\t\ttoken = lexer.peek();\n\t\t\t\tif (!matchSyntax(token, \")\")) {\n\t\t\t\t\targs = parseArgumentList();\n\t\t\t\t}\n\t\t\t\ttoken = lexer.next();\n\t\t\t\tif (!matchSyntax(token, \")\")) {\n\t\t\t\t\tthrow new SyntaxError(\"Expected ) in a function call \\\"\" + func.value + \"\\\"\");\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tmethod : func.method,\n\t\t\t\t\targs : args,\n\t\t\t\t\tname : name\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfunction parseArgumentList() {\n\t\t\t\tvar token, expr, args = [];\n\t\t\t\twhile (true) {\n\t\t\t\t\texpr = parseExpression();\n\t\t\t\t\tif (isUndef(expr)) {\n\t\t\t\t\t\t// TODO maybe throw exception?\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\targs.push(expr);\n\t\t\t\t\ttoken = lexer.peek();\n\t\t\t\t\tif (!matchSyntax(token, \",\")) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlexer.next();\n\t\t\t\t}\n\t\t\t\treturn args;\n\t\t\t}\n\n\t\t\treturn parseExpression();\n\t\t};\n\n\t\t/**\n\t\t *  recursively evaluate the expression tree\n\t\t *  @param   {Object} tree \n\t\t *  @return  {AudioNode}      the resulting audio node from the expression\n\t\t *  @private\n\t\t */\n\t\tTone.Expr.prototype._eval = function(tree){\n\t\t\tif (!this.isUndef(tree)){\n\t\t\t\tvar node = tree.method(tree.args, this);\n\t\t\t\tthis._nodes.push(node);\n\t\t\t\treturn node;\n\t\t\t} \n\t\t};\n\n\t\t/**\n\t\t *  dispose all the nodes\n\t\t *  @private\n\t\t */\n\t\tTone.Expr.prototype._disposeNodes = function(){\n\t\t\tfor (var i = 0; i < this._nodes.length; i++){\n\t\t\t\tvar node = this._nodes[i];\n\t\t\t\tif (this.isFunction(node.dispose)) {\n\t\t\t\t\tnode.dispose();\n\t\t\t\t} else if (this.isFunction(node.disconnect)) {\n\t\t\t\t\tnode.disconnect();\n\t\t\t\t}\n\t\t\t\tnode = null;\n\t\t\t\tthis._nodes[i] = null;\n\t\t\t}\n\t\t\tthis._nodes = null;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t */\n\t\tTone.Expr.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._disposeNodes();\n\t\t};\n\n\t\treturn Tone.Expr;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var eqPowGain = new Tone.EqualPowerGain();\n\t\t */\n\t\tTone.EqualPowerGain = function(){\n\n\t\t\t/**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._eqPower = this.input = this.output = new Tone.WaveShaper(function(val){\n\t\t\t\tif (Math.abs(val) < 0.001){\n\t\t\t\t\t//should output 0 when input is 0\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\treturn this.equalPowerScale(val);\n\t\t\t\t}\n\t\t\t}.bind(this), 4096);\n\t\t};\n\n\t\tTone.extend(Tone.EqualPowerGain, Tone.SignalBase);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.EqualPowerGain} `this`\n\t\t */\n\t\tTone.EqualPowerGain.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._eqPower.dispose();\n\t\t\tthis._eqPower = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.EqualPowerGain;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t * @class  Equal power fading control values:<br>\n\t\t * \t       0 = 100% input 0<br>\n\t\t * \t       1 = 100% input 1<br>\n\t\t *\n\t\t * @constructor\n\t\t * @extends {Tone}\n\t\t * @param {number} [initialFade=0.5]\n\t\t * @example\n\t\t * var crossFade = new Tone.CrossFade(0.5);\n\t\t * effectA.connect(crossFade, 0, 0);\n\t\t * effectB.connect(crossFade, 0, 1);\n\t\t * crossFade.fade.value = 0;\n\t\t * // ^ only effectA is output\n\t\t * crossFade.fade.value = 1;\n\t\t * // ^ only effectB is output\n\t\t * crossFade.fade.value = 0.5;\n\t\t * // ^ the two signals are mixed equally. \n\t\t */\t\t\n\t\tTone.CrossFade = function(initialFade){\n\n\t\t\tTone.call(this, 2, 1);\n\n\t\t\t/**\n\t\t\t *  the first input. input \"a\".\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.a = this.input[0] = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the second input. input \"b\"\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.b = this.input[1] = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  0 is 100% signal `a` (input 0) and 1 is 100% signal `b` (input 1).\n\t\t\t *  Values between 0-1.\n\t\t\t *  \n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.fade = new Tone.Signal(this.defaultArg(initialFade, 0.5), Tone.Signal.Units.Normal);\n\n\t\t\t/**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t\t\tthis._equalPowerA = new Tone.EqualPowerGain();\n\n\t\t\t/**\n\t\t\t *  equal power gain cross fade\n\t\t\t *  @private\n\t\t\t *  @type {Tone.EqualPowerGain}\n\t\t\t */\n\t\t\tthis._equalPowerB = new Tone.EqualPowerGain();\n\t\t\t\n\t\t\t/**\n\t\t\t *  invert the incoming signal\n\t\t\t *  @private\n\t\t\t *  @type {Tone}\n\t\t\t */\n\t\t\tthis._invert = new Tone.Expr(\"1 - $0\");\n\n\t\t\t//connections\n\t\t\tthis.a.connect(this.output);\n\t\t\tthis.b.connect(this.output);\n\t\t\tthis.fade.chain(this._equalPowerB, this.b.gain);\n\t\t\tthis.fade.chain(this._invert, this._equalPowerA, this.a.gain);\n\t\t};\n\n\t\tTone.extend(Tone.CrossFade);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.CrossFade} `this`\n\t\t */\n\t\tTone.CrossFade.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._equalPowerA.dispose();\n\t\t\tthis._equalPowerA = null;\n\t\t\tthis._equalPowerB.dispose();\n\t\t\tthis._equalPowerB = null;\n\t\t\tthis.fade.dispose();\n\t\t\tthis.fade = null;\n\t\t\tthis._invert.dispose();\n\t\t\tthis._invert = null;\n\t\t\tthis.a.disconnect();\n\t\t\tthis.a = null;\n\t\t\tthis.b.disconnect();\n\t\t\tthis.b = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.CrossFade;\n\t});\n\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Filter object which allows for all of the same native methods\n\t\t *          as the BiquadFilter (with AudioParams implemented as Tone.Signals)\n\t\t *          but adds the ability to set the filter rolloff at -12 (default), \n\t\t *          -24 and -48. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {number|Object} [freq=350] the frequency\n\t\t *  @param {string} [type=lowpass] the type of filter\n\t\t *  @param {number} [rolloff=-12] the rolloff which is the drop per octave. \n\t\t *                                 3 choices: -12, -24, and -48\n\t\t *  @example\n\t\t *  var filter = new Tone.Filter(200, \"highpass\");\n\t\t */\n\t\tTone.Filter = function(){\n\t\t\tTone.call(this);\n\n\t\t\tvar options = this.optionsObject(arguments, [\"frequency\", \"type\", \"rolloff\"], Tone.Filter.defaults);\n\n\t\t\t/**\n\t\t\t *  the filter(s)\n\t\t\t *  @type {Array.<BiquadFilterNode>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._filters = [];\n\n\t\t\t/**\n\t\t\t *  the frequency of the filter\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Signal.Units.Frequency);\n\n\t\t\t/**\n\t\t\t *  the detune parameter\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.detune = new Tone.Signal(0);\n\n\t\t\t/**\n\t\t\t *  the gain of the filter, only used in certain filter types\n\t\t\t *  @type {AudioParam}\n\t\t\t */\n\t\t\tthis.gain = new Tone.Signal(options.gain, Tone.Signal.Units.Decibels);\n\n\t\t\t/**\n\t\t\t *  the Q or Quality of the filter\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.Q = new Tone.Signal(options.Q);\n\n\t\t\t/**\n\t\t\t *  the type of the filter\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._type = options.type;\n\n\t\t\t/**\n\t\t\t *  the rolloff value of the filter\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._rolloff = options.rolloff;\n\n\t\t\t//set the rolloff;\n\t\t\tthis.rolloff = options.rolloff;\n\t\t};\n\n\t\tTone.extend(Tone.Filter);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Filter.defaults = {\n\t\t\t\"type\" : \"lowpass\",\n\t\t\t\"frequency\" : 350,\n\t\t\t\"rolloff\" : -12,\n\t\t\t\"Q\" : 1,\n\t\t\t\"gain\" : 0,\n\t\t};\n\n\t\t/**\n\t\t * The type of the filter. Types: \"lowpass\", \"highpass\", \n\t\t * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\". \n\t\t * @memberOf Tone.Filter#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t\tObject.defineProperty(Tone.Filter.prototype, \"type\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._type;\n\t\t\t},\n\t\t\tset : function(type){\n\t\t\t\tvar types = [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n\t\t\t\tif (types.indexOf(type)=== -1){\n\t\t\t\t\tthrow new TypeError(\"Tone.Filter does not have filter type \"+type);\n\t\t\t\t}\n\t\t\t\tthis._type = type;\n\t\t\t\tfor (var i = 0; i < this._filters.length; i++){\n\t\t\t\t\tthis._filters[i].type = type;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The rolloff of the filter which is the drop in db\n\t\t * per octave. Implemented internally by cascading filters.\n\t\t * Only accepts the values -12, -24, and -48.\n\t\t * @memberOf Tone.Filter#\n\t\t * @type {number}\n\t\t * @name rolloff\n\t\t */\n\t\tObject.defineProperty(Tone.Filter.prototype, \"rolloff\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._rolloff;\n\t\t\t},\n\t\t\tset : function(rolloff){\n\t\t\t\tvar cascadingCount = Math.log(rolloff / -12) / Math.LN2 + 1;\n\t\t\t\t//check the rolloff is valid\n\t\t\t\tif (cascadingCount % 1 !== 0){\n\t\t\t\t\tthrow new RangeError(\"Filter rolloff can only be -12, -24, or -48\");\n\t\t\t\t}\n\t\t\t\tthis._rolloff = rolloff;\n\t\t\t\t//first disconnect the filters and throw them away\n\t\t\t\tthis.input.disconnect();\n\t\t\t\tfor (var i = 0; i < this._filters.length; i++) {\n\t\t\t\t\tthis._filters[i].disconnect();\n\t\t\t\t\tthis._filters[i] = null;\n\t\t\t\t}\n\t\t\t\tthis._filters = new Array(cascadingCount);\n\t\t\t\tfor (var count = 0; count < cascadingCount; count++){\n\t\t\t\t\tvar filter = this.context.createBiquadFilter();\n\t\t\t\t\tfilter.type = this._type;\n\t\t\t\t\tthis.frequency.connect(filter.frequency);\n\t\t\t\t\tthis.detune.connect(filter.detune);\n\t\t\t\t\tthis.Q.connect(filter.Q);\n\t\t\t\t\tthis.gain.connect(filter.gain);\n\t\t\t\t\tthis._filters[count] = filter;\n\t\t\t\t}\n\t\t\t\t//connect them up\n\t\t\t\tvar connectionChain = [this.input].concat(this._filters).concat([this.output]);\n\t\t\t\tthis.connectSeries.apply(this, connectionChain);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @return {Tone.Filter} `this`\n\t\t */\n\t\tTone.Filter.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tfor (var i = 0; i < this._filters.length; i++) {\n\t\t\t\tthis._filters[i].disconnect();\n\t\t\t\tthis._filters[i] = null;\n\t\t\t}\n\t\t\tthis._filters = null;\n\t\t\tthis.frequency.dispose();\n\t\t\tthis.Q.dispose();\n\t\t\tthis.frequency = null;\n\t\t\tthis.Q = null;\n\t\t\tthis.detune.dispose();\n\t\t\tthis.detune = null;\n\t\t\tthis.gain.dispose();\n\t\t\tthis.gain = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Filter;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Split the incoming signal into three bands (low, mid, high)\n\t\t *         with two crossover frequency controls. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {number} lowFrequency the low/mid crossover frequency\n\t\t *  @param {number} highFrequency the mid/high crossover frequency\n\t\t */\n\t\tTone.MultibandSplit = function(){\n\t\t\tvar options = this.optionsObject(arguments, [\"lowFrequency\", \"highFrequency\"], Tone.MultibandSplit.defaults);\n\n\t\t\t/**\n\t\t\t *  the input\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.input = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the outputs\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.output = new Array(3);\n\n\t\t\t/**\n\t\t\t *  the low band\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t\t\tthis.low = this.output[0] = new Tone.Filter(0, \"lowpass\");\n\n\t\t\t/**\n\t\t\t *  the lower filter of the mid band\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._lowMidFilter = new Tone.Filter(0, \"highpass\");\n\n\t\t\t/**\n\t\t\t *  the mid band\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t\t\tthis.mid = this.output[1] = new Tone.Filter(0, \"lowpass\");\n\n\t\t\t/**\n\t\t\t *  the high band\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t\t\tthis.high = this.output[2] = new Tone.Filter(0, \"highpass\");\n\n\t\t\t/**\n\t\t\t *  the low/mid crossover frequency\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.lowFrequency = new Tone.Signal(options.lowFrequency);\n\n\t\t\t/**\n\t\t\t *  the mid/high crossover frequency\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.highFrequency = new Tone.Signal(options.highFrequency);\n\n\t\t\tthis.input.fan(this.low, this.high);\n\t\t\tthis.input.chain(this._lowMidFilter, this.mid);\n\t\t\t//the frequency control signal\n\t\t\tthis.lowFrequency.connect(this.low.frequency);\n\t\t\tthis.lowFrequency.connect(this._lowMidFilter.frequency);\n\t\t\tthis.highFrequency.connect(this.mid.frequency);\n\t\t\tthis.highFrequency.connect(this.high.frequency);\n\t\t};\n\n\t\tTone.extend(Tone.MultibandSplit);\n\n\t\t/**\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.MultibandSplit.defaults = {\n\t\t\t\"lowFrequency\" : 400,\n\t\t\t\"highFrequency\" : 2500\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.MultibandSplit} `this`\n\t\t */\n\t\tTone.MultibandSplit.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.low.dispose();\n\t\t\tthis._lowMidFilter.dispose();\n\t\t\tthis.mid.dispose();\n\t\t\tthis.high.dispose();\n\t\t\tthis.lowFrequency.dispose();\n\t\t\tthis.highFrequency.dispose();\n\t\t\tthis.low = null;\n\t\t\tthis._lowMidFilter = null;\n\t\t\tthis.mid = null;\n\t\t\tthis.high = null;\n\t\t\tthis.lowFrequency = null;\n\t\t\tthis.highFrequency = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.MultibandSplit;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A 3 band EQ with control over low, mid, and high gain as\n\t\t *         well as the low and high crossover frequencies. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  \n\t\t *  @param {number|object} [lowLevel=0] the gain applied to the lows (in db)\n\t\t *  @param {number} [midLevel=0] the gain applied to the mid (in db)\n\t\t *  @param {number} [highLevel=0] the gain applied to the high (in db)\n\t\t *  @example\n\t\t *  var eq = new Tone.EQ(-10, 3, -20);\n\t\t */\n\t\tTone.EQ = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"low\", \"mid\", \"high\"], Tone.EQ.defaults);\n\n\t\t\t/**\n\t\t\t *  the output node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.output = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the multiband split\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._multibandSplit = this.input = new Tone.MultibandSplit({\n\t\t\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\t\t\"highFrequency\" : options.highFrequency\n\t\t\t});\n\n\t\t\t/**\n\t\t\t *  the low gain\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._lowGain = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the mid gain\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._midGain = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the high gain\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._highGain = this.context.createGain();\n\n\t\t\t/**\n\t\t\t * The gain in decibels of the low part\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.low = new Tone.Signal(this._lowGain.gain, Tone.Signal.Units.Decibels);\n\n\t\t\t/**\n\t\t\t * The gain in decibels of the mid part\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.mid = new Tone.Signal(this._midGain.gain, Tone.Signal.Units.Decibels);\n\n\t\t\t/**\n\t\t\t * The gain in decibels of the high part\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.high = new Tone.Signal(this._highGain.gain, Tone.Signal.Units.Decibels);\n\n\t\t\t/**\n\t\t\t *  the low/mid crossover frequency\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.lowFrequency = this._multibandSplit.lowFrequency;\n\n\t\t\t/**\n\t\t\t *  the mid/high crossover frequency\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.highFrequency = this._multibandSplit.highFrequency;\n\n\t\t\t//the frequency bands\n\t\t\tthis._multibandSplit.low.chain(this._lowGain, this.output);\n\t\t\tthis._multibandSplit.mid.chain(this._midGain, this.output);\n\t\t\tthis._multibandSplit.high.chain(this._highGain, this.output);\n\t\t\t//set the gains\n\t\t\tthis.high.value = options.low;\n\t\t\tthis.mid.value = options.mid;\n\t\t\tthis.low.value = options.high;\n\t\t};\n\n\t\tTone.extend(Tone.EQ);\n\n\t\t/**\n\t\t *  the default values\n\t\t *  @type {Object}\n\t\t *  @static\n\t\t */\n\t\tTone.EQ.defaults = {\n\t\t\t\"low\" : 0,\n\t\t\t\"mid\" : 0,\n\t\t\t\"high\" : 0,\n\t\t\t\"lowFrequency\" : 400,\n\t\t\t\"highFrequency\" : 2500\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.EQ} `this`\n\t\t */\n\t\tTone.EQ.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._multibandSplit.dispose();\n\t\t\tthis._multibandSplit = null;\n\t\t\tthis.lowFrequency = null;\n\t\t\tthis.highFrequency = null;\n\t\t\tthis._lowGain.disconnect();\n\t\t\tthis._lowGain = null;\n\t\t\tthis._midGain.disconnect();\n\t\t\tthis._midGain = null;\n\t\t\tthis._highGain.disconnect();\n\t\t\tthis._highGain = null;\n\t\t\tthis.low.dispose();\n\t\t\tthis.low = null;\n\t\t\tthis.mid.dispose();\n\t\t\tthis.mid = null;\n\t\t\tthis.high.dispose();\n\t\t\tthis.high = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.EQ;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\t\t\n\t\t/**\n\t\t *  @class  Performs a linear scaling on an input signal.\n\t\t *          Scales a normal gain input range [0,1] to between\n\t\t *          outputMin and outputMax\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0]\n\t\t *  @param {number} [outputMax=1]\n\t\t *  @example\n\t\t *  var scale = new Tone.Scale(50, 100);\n\t\t *  var signal = new Tone.Signal(0.5).connect(scale);\n\t\t *  //the output of scale equals 75\n\t\t */\n\t\tTone.Scale = function(outputMin, outputMax){\n\n\t\t\t/** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis._outputMin = this.defaultArg(outputMin, 0);\n\n\t\t\t/** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis._outputMax = this.defaultArg(outputMax, 1);\n\n\n\t\t\t/** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._scale = this.input = new Tone.Multiply(1);\n\t\t\t\n\t\t\t/** \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._add = this.output = new Tone.Add(0);\n\n\t\t\tthis._scale.connect(this._add);\n\t\t\tthis._setRange();\n\t\t};\n\n\t\tTone.extend(Tone.Scale, Tone.SignalBase);\n\n\t\t/**\n\t\t * The minimum output value.\n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t\tObject.defineProperty(Tone.Scale.prototype, \"min\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._outputMin;\n\t\t\t},\n\t\t\tset : function(min){\n\t\t\t\tthis._outputMin = min;\n\t\t\t\tthis._setRange();\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The maximum output value.\n\t\t * @memberOf Tone.Scale#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t\tObject.defineProperty(Tone.Scale.prototype, \"max\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._outputMax;\n\t\t\t},\n\t\t\tset : function(max){\n\t\t\t\tthis._outputMax = max;\n\t\t\t\tthis._setRange();\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t\tTone.Scale.prototype._setRange = function() {\n\t\t\tthis._add.value = this._outputMin;\n\t\t\tthis._scale.value = this._outputMax - this._outputMin;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Scale} `this`\n\t\t */\n\t\tTone.Scale.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._add.dispose();\n\t\t\tthis._add = null;\n\t\t\tthis._scale.dispose();\n\t\t\tthis._scale = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.Scale;\n\t});\n\n\tToneModule( \n\tfunction(Tone){\n\t\t\n\t\t/**\n\t\t *  @class  Performs an exponential scaling on an input signal.\n\t\t *          Scales a normal gain range [0,1] exponentially\n\t\t *          to the output range of outputMin to outputMax.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputMin=0]\n\t\t *  @param {number} [outputMax=1]\n\t\t *  @param {number} [exponent=2] the exponent which scales the incoming signal\n\t\t */\n\t\tTone.ScaleExp = function(outputMin, outputMax, exponent){\n\n\t\t\t/**\n\t\t\t *  scale the input to the output range\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._scale = this.output = new Tone.Scale(outputMin, outputMax);\n\n\t\t\t/**\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._exp = this.input = new Tone.Pow(this.defaultArg(exponent, 2));\n\n\t\t\tthis._exp.connect(this._scale);\n\t\t};\n\n\t\tTone.extend(Tone.ScaleExp, Tone.SignalBase);\n\n\t\t/**\n\t\t * The minimum output value.\n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t\tObject.defineProperty(Tone.ScaleExp.prototype, \"exponent\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._exp.value;\n\t\t\t},\n\t\t\tset : function(exp){\n\t\t\t\tthis._exp.value = exp;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The minimum output value.\n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t\tObject.defineProperty(Tone.ScaleExp.prototype, \"min\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._scale.min;\n\t\t\t},\n\t\t\tset : function(min){\n\t\t\t\tthis._scale.min = min;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The maximum output value.\n\t\t * @memberOf Tone.ScaleExp#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t\tObject.defineProperty(Tone.ScaleExp.prototype, \"max\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._scale.max;\n\t\t\t},\n\t\t\tset : function(max){\n\t\t\t\tthis._scale.max = max;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.ScaleExp} `this`\n\t\t */\n\t\tTone.ScaleExp.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._scale.dispose();\n\t\t\tthis._scale = null;\n\t\t\tthis._exp.dispose();\n\t\t\tthis._exp = null;\n\t\t\treturn this;\n\t\t}; \n\n\n\t\treturn Tone.ScaleExp;\n\t});\n\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A comb filter with feedback.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {number} [minDelay=0.01] the minimum delay time which the filter can have\n\t\t *  @param {number} [maxDelay=1] the maximum delay time which the filter can have\n\t\t */\n\t\tTone.FeedbackCombFilter = function(){\n\n\t\t\tTone.call(this);\n\t\t\tvar options = this.optionsObject(arguments, [\"minDelay\", \"maxDelay\"], Tone.FeedbackCombFilter.defaults);\n\n\t\t\tvar minDelay = options.minDelay;\n\t\t\tvar maxDelay = options.maxDelay;\n\t\t\t//the delay * samplerate = number of samples. \n\t\t\t// buffersize / number of samples = number of delays needed per buffer frame\n\t\t\tvar delayCount = Math.ceil(this.bufferSize / (minDelay * this.context.sampleRate));\n\t\t\t//set some ranges\n\t\t\tdelayCount = Math.min(delayCount, 10);\n\t\t\tdelayCount = Math.max(delayCount, 1);\n\n\t\t\t/**\n\t\t\t *  the number of filter delays\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._delayCount = delayCount;\n\n\t\t\t/**\n\t\t\t *  @type {Array.<FilterDelay>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._delays = new Array(this._delayCount);\n\n\t\t\t/**\n\t\t\t *  the resonance control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.resonance = new Tone.Signal(options.resonance, Tone.Signal.Units.Normal);\n\n\t\t\t/**\n\t\t\t *  scale the resonance value to the normal range\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._resScale = new Tone.ScaleExp(0.01, 1 / this._delayCount - 0.001, 0.5);\n\n\t\t\t/**\n\t\t\t *  internal flag for keeping track of when frequency\n\t\t\t *  correction has been used\n\t\t\t *  @type {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._highFrequencies = false;\n\n\t\t\t/**\n\t\t\t *  internal counter of delayTime\n\t\t\t *  @type {Tone.TIme}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._delayTime = options.delayTime;\n\n\t\t\t/**\n\t\t\t *  the feedback node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._feedback = this.context.createGain();\n\n\t\t\t//make the filters\n\t\t\tfor (var i = 0; i < this._delayCount; i++) {\n\t\t\t\tvar delay = this.context.createDelay(maxDelay);\n\t\t\t\tdelay.delayTime.value = minDelay;\n\t\t\t\tdelay.connect(this._feedback);\n\t\t\t\tthis._delays[i] = delay;\n\t\t\t}\n\n\t\t\t//connections\n\t\t\tthis.connectSeries.apply(this, this._delays);\n\t\t\tthis.input.connect(this._delays[0]);\n\t\t\t//set the delay to the min value initially\n\t\t\tthis._feedback.connect(this._delays[0]);\n\t\t\t//resonance control\n\t\t\tthis.resonance.chain(this._resScale, this._feedback.gain);\n\t\t\tthis._feedback.connect(this.output);\n\t\t\tthis.delayTime = options.delayTime;\n\t\t};\n\n\t\tTone.extend(Tone.FeedbackCombFilter);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.FeedbackCombFilter.defaults = {\n\t\t\t\"resonance\" : 0.5,\n\t\t\t\"minDelay\" : 0.1,\n\t\t\t\"maxDelay\" : 1,\n\t\t\t\"delayTime\" : 0.1\n\t\t};\n\n\t\t/**\n\t\t * the delay time of the FeedbackCombFilter\n\t\t * @memberOf Tone.FeedbackCombFilter#\n\t\t * @type {Tone.Time}\n\t\t * @name delayTime\n\t\t */\n\t\tObject.defineProperty(Tone.FeedbackCombFilter.prototype, \"delayTime\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._delayTime;\n\t\t\t},\n\t\t\tset : function(delayAmount){\n\t\t\t\tthis._delayTime = delayAmount;\n\t\t\t\tdelayAmount = this.toSeconds(delayAmount);\n\t\t\t\t//the number of samples to delay by\n\t\t\t\tvar sampleRate = this.context.sampleRate;\n\t\t\t\tvar delaySamples = sampleRate * delayAmount;\n\t\t\t\t// delayTime corection when frequencies get high\n\t\t\t\tvar now = this.now() + this.bufferTime;\n\t\t\t\tvar cutoff = 100;\n\t\t\t\tif (delaySamples < cutoff){\n\t\t\t\t\tthis._highFrequencies = true;\n\t\t\t\t\tvar changeNumber = Math.round((delaySamples / cutoff) * this._delayCount);\n\t\t\t\t\tfor (var i = 0; i < changeNumber; i++) {\n\t\t\t\t\t\tthis._delays[i].delayTime.setValueAtTime(1 / sampleRate + delayAmount, now);\n\t\t\t\t\t}\n\t\t\t\t\tdelayAmount = Math.floor(delaySamples) / sampleRate;\n\t\t\t\t} else if (this._highFrequencies){\n\t\t\t\t\tthis._highFrequencies = false;\n\t\t\t\t\tfor (var j = 0; j < this._delays.length; j++) {\n\t\t\t\t\t\tthis._delays[j].delayTime.setValueAtTime(delayAmount, now);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackCombFilter} `this`\n\t\t */\n\t\tTone.FeedbackCombFilter.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\t//dispose the filter delays\n\t\t\tfor (var i = 0; i < this._delays.length; i++) {\n\t\t\t\tthis._delays[i].disconnect();\n\t\t\t\tthis._delays[i] = null;\n\t\t\t}\n\t\t\tthis._delays = null;\n\t\t\tthis.resonance.dispose();\n\t\t\tthis.resonance = null;\n\t\t\tthis._resScale.dispose();\n\t\t\tthis._resScale = null;\n\t\t\tthis._feedback.disconnect();\n\t\t\tthis._feedback = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.FeedbackCombFilter;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Follow the envelope of the incoming signal. \n\t\t *          Careful with small (< 0.02) attack or decay values. \n\t\t *          The follower has some ripple which gets exaggerated\n\t\t *          by small values. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {Tone.Time} [attack = 0.05] \n\t\t *  @param {Tone.Time} [release = 0.5] \n\t\t *  @example\n\t\t *  var follower = new Tone.Follower(0.2, 0.4);\n\t\t */\n\t\tTone.Follower = function(){\n\n\t\t\tTone.call(this);\n\t\t\tvar options = this.optionsObject(arguments, [\"attack\", \"release\"], Tone.Follower.defaults);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Abs}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._abs = new Tone.Abs();\n\n\t\t\t/**\n\t\t\t *  the lowpass filter which smooths the input\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._filter = this.context.createBiquadFilter();\n\t\t\tthis._filter.type = \"lowpass\";\n\t\t\tthis._filter.frequency.value = 0;\n\t\t\tthis._filter.Q.value = -100;\n\n\t\t\t/**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._frequencyValues = new Tone.WaveShaper();\n\t\t\t\n\t\t\t/**\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sub = new Tone.Subtract();\n\n\t\t\t/**\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._delay = this.context.createDelay();\n\t\t\tthis._delay.delayTime.value = this.bufferTime;\n\n\t\t\t/**\n\t\t\t *  this keeps it far from 0, even for very small differences\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._mult = new Tone.Multiply(10000);\n\n\t\t\t/**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis._attack = options.attack;\n\n\t\t\t/**\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis._release = options.release;\n\n\t\t\t//the smoothed signal to get the values\n\t\t\tthis.input.chain(this._abs, this._filter, this.output);\n\t\t\t//the difference path\n\t\t\tthis._abs.connect(this._sub, 0, 1);\n\t\t\tthis._filter.chain(this._delay, this._sub);\n\t\t\t//threshold the difference and use the thresh to set the frequency\n\t\t\tthis._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);\n\t\t\t//set the attack and release values in the table\n\t\t\tthis._setAttackRelease(this._attack, this._release);\n\t\t};\n\n\t\tTone.extend(Tone.Follower);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Follower.defaults = {\n\t\t\t\"attack\" : 0.05, \n\t\t\t\"release\" : 0.5\n\t\t};\n\n\t\t/**\n\t\t *  sets the attack and release times in the wave shaper\n\t\t *  @param   {Tone.Time} attack  \n\t\t *  @param   {Tone.Time} release \n\t\t *  @private\n\t\t */\n\t\tTone.Follower.prototype._setAttackRelease = function(attack, release){\n\t\t\tvar minTime = this.bufferTime;\n\t\t\tattack = this.secondsToFrequency(this.toSeconds(attack));\n\t\t\trelease = this.secondsToFrequency(this.toSeconds(release));\n\t\t\tattack = Math.max(attack, minTime);\n\t\t\trelease = Math.max(release, minTime);\n\t\t\tthis._frequencyValues.setMap(function(val){\n\t\t\t\tif (val <= 0){\n\t\t\t\t\treturn attack;\n\t\t\t\t} else {\n\t\t\t\t\treturn release;\n\t\t\t\t} \n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * The attack time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Tone.Time}\n\t\t * @name attack\n\t\t */\n\t\tObject.defineProperty(Tone.Follower.prototype, \"attack\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._attack;\n\t\t\t},\n\t\t\tset : function(attack){\n\t\t\t\tthis._attack = attack;\n\t\t\t\tthis._setAttackRelease(this._attack, this._release);\t\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The release time.\n\t\t * @memberOf Tone.Follower#\n\t\t * @type {Tone.Time}\n\t\t * @name release\n\t\t */\n\t\tObject.defineProperty(Tone.Follower.prototype, \"release\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._release;\n\t\t\t},\n\t\t\tset : function(release){\n\t\t\t\tthis._release = release;\n\t\t\t\tthis._setAttackRelease(this._attack, this._release);\t\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  borrows the connect method from Signal so that the output can be used\n\t\t *  as a control signal {@link Tone.Signal}\n\t\t *  @function\n\t\t */\n\t\tTone.Follower.prototype.connect = Tone.Signal.prototype.connect;\n\n\t\t/**\n\t\t *  dispose\n\t\t *  @returns {Tone.Follower} `this`\n\t\t */\n\t\tTone.Follower.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._filter.disconnect();\n\t\t\tthis._filter = null;\n\t\t\tthis._frequencyValues.disconnect();\n\t\t\tthis._frequencyValues = null;\n\t\t\tthis._delay.disconnect();\n\t\t\tthis._delay = null;\n\t\t\tthis._sub.disconnect();\n\t\t\tthis._sub = null;\n\t\t\tthis._abs.dispose();\n\t\t\tthis._abs = null;\n\t\t\tthis._mult.dispose();\n\t\t\tthis._mult = null;\n\t\t\tthis._curve = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Follower;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Only pass signal through when it's signal exceeds the\n\t\t *          specified threshold.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {number} [threshold = -40] the threshold in Decibels\n\t\t *  @param {Tone.Time} [attack = 0.1] the follower's attack time\n\t\t *  @param {Tone.Time} [release = 0.1] the follower's release time\n\t\t *  @example\n\t\t *  var gate = new Tone.Gate(-30, 0.2, 0.3);\n\t\t */\n\t\tTone.Gate = function(){\n\t\t\t\n\t\t\tTone.call(this);\n\t\t\tvar options = this.optionsObject(arguments, [\"threshold\", \"attack\", \"release\"], Tone.Gate.defaults);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._follower = new Tone.Follower(options.attack, options.release);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._gt = new Tone.GreaterThan(this.dbToGain(options.threshold));\n\n\t\t\t//the connections\n\t\t\tthis.input.connect(this.output);\n\t\t\t//the control signal\n\t\t\tthis.input.chain(this._gt, this._follower, this.output.gain);\n\t\t};\n\n\t\tTone.extend(Tone.Gate);\n\n\t\t/**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Gate.defaults = {\n\t\t\t\"attack\" : 0.1, \n\t\t\t\"release\" : 0.1,\n\t\t\t\"threshold\" : -40\n\t\t};\n\n\t\t/**\n\t\t * The threshold of the gate in decibels\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {number}\n\t\t * @name threshold\n\t\t */\n\t\tObject.defineProperty(Tone.Gate.prototype, \"threshold\", {\n\t\t\tget : function(){\n\t\t\t\treturn this.gainToDb(this._gt.value);\n\t\t\t}, \n\t\t\tset : function(thresh){\n\t\t\t\tthis._gt.value = this.dbToGain(thresh);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The attack speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Tone.Time}\n\t\t * @name attack\n\t\t */\n\t\tObject.defineProperty(Tone.Gate.prototype, \"attack\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._follower.attack;\n\t\t\t}, \n\t\t\tset : function(attackTime){\n\t\t\t\tthis._follower.attack = attackTime;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The release speed of the gate\n\t\t * @memberOf Tone.Gate#\n\t\t * @type {Tone.Time}\n\t\t * @name release\n\t\t */\n\t\tObject.defineProperty(Tone.Gate.prototype, \"release\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._follower.release;\n\t\t\t}, \n\t\t\tset : function(releaseTime){\n\t\t\t\tthis._follower.release = releaseTime;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  dispose\n\t\t *  @returns {Tone.Gate} `this`\n\t\t */\n\t\tTone.Gate.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._follower.dispose();\n\t\t\tthis._gt.dispose();\n\t\t\tthis._follower = null;\n\t\t\tthis._gt = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Gate;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\t\t\n\t\t/**\n\t\t *  @class  a sample accurate clock built on an oscillator.\n\t\t *          Invokes the tick method at the set rate\n\t\t *\n\t\t * \t@private\n\t\t * \t@constructor\n\t\t * \t@extends {Tone}\n\t\t * \t@param {Tone.Frequency} frequency the rate of the callback\n\t\t * \t@param {function} callback the callback to be invoked with the time of the audio event\n\t\t */\n\t\tTone.Clock = function(frequency, callback){\n\n\t\t\t/**\n\t\t\t *  the oscillator\n\t\t\t *  @type {OscillatorNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._oscillator = null;\n\n\t\t\t/**\n\t\t\t *  the script processor which listens to the oscillator\n\t\t\t *  @type {ScriptProcessorNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._jsNode = this.context.createScriptProcessor(this.bufferSize, 1, 1);\n\t\t\tthis._jsNode.onaudioprocess = this._processBuffer.bind(this);\n\n\t\t\t/**\n\t\t\t *  the rate control signal\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = new Tone.Signal(frequency);\n\n\t\t\t/**\n\t\t\t *  whether the tick is on the up or down\n\t\t\t *  @type {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._upTick = false;\n\n\t\t\t/**\n\t\t\t *  the callback which is invoked on every tick\n\t\t\t *  with the time of that tick as the argument\n\t\t\t *  @type {function(number)}\n\t\t\t */\n\t\t\tthis.tick = callback;\n\n\t\t\t//setup\n\t\t\tthis._jsNode.noGC();\n\t\t};\n\n\t\tTone.extend(Tone.Clock);\n\n\t\t/**\n\t\t *  start the clock\n\t\t *  @param {Tone.Time} time the time when the clock should start\n\t\t *  @returns {Tone.Clock} `this`\n\t\t */\n\t\tTone.Clock.prototype.start = function(time){\n\t\t\tif (!this._oscillator){\n\t\t\t\tthis._oscillator = this.context.createOscillator();\n\t\t\t\tthis._oscillator.type = \"square\";\n\t\t\t\tthis._oscillator.connect(this._jsNode);\n\t\t\t\t//connect it up\n\t\t\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\t\t\tthis._upTick = false;\n\t\t\t\tvar startTime = this.toSeconds(time);\n\t\t\t\tthis._oscillator.start(startTime);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  stop the clock\n\t\t *  @param {Tone.Time} time the time when the clock should stop\n\t\t *  @param {function} onend called when the oscilator stops\n\t\t *  @returns {Tone.Clock} `this`\n\t\t */\n\t\tTone.Clock.prototype.stop = function(time, onend){\n\t\t\tif (this._oscillator){\n\t\t\t\tvar now = this.now();\n\t\t\t\tvar stopTime = this.toSeconds(time, now);\n\t\t\t\tthis._oscillator.stop(stopTime);\n\t\t\t\tthis._oscillator = null;\n\t\t\t\t//set a timeout for when it stops\n\t\t\t\tif (time){\n\t\t\t\t\tsetTimeout(onend, (stopTime - now) * 1000);\n\t\t\t\t} else {\n\t\t\t\t\tonend();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  @private\n\t\t *  @param  {AudioProcessingEvent} event\n\t\t */\n\t\tTone.Clock.prototype._processBuffer = function(event){\n\t\t\tvar now = this.defaultArg(event.playbackTime, this.now());\n\t\t\tvar bufferSize = this._jsNode.bufferSize;\n\t\t\tvar incomingBuffer = event.inputBuffer.getChannelData(0);\n\t\t\tvar upTick = this._upTick;\n\t\t\tvar self = this;\n\t\t\tfor (var i = 0; i < bufferSize; i++){\n\t\t\t\tvar sample = incomingBuffer[i];\n\t\t\t\tif (sample > 0 && !upTick){\n\t\t\t\t\tupTick = true;\t\n\t\t\t\t\t//get the callback out of audio thread\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t//to account for the double buffering\n\t\t\t\t\t\tvar tickTime = now + self.samplesToSeconds(i + bufferSize * 2);\n\t\t\t\t\t\treturn function(){\n\t\t\t\t\t\t\tif (self.tick){\n\t\t\t\t\t\t\t\tself.tick(tickTime);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}(), 0); // jshint ignore:line\n\t\t\t\t} else if (sample < 0 && upTick){\n\t\t\t\t\tupTick = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._upTick = upTick;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Clock} `this`\n\t\t */\n\t\tTone.Clock.prototype.dispose = function(){\n\t\t\tthis._jsNode.disconnect();\n\t\t\tthis.frequency.dispose();\n\t\t\tthis.frequency = null;\n\t\t\tif (this._oscillator){\n\t\t\t\tthis._oscillator.disconnect();\n\t\t\t\tthis._oscillator = null;\n\t\t\t}\n\t\t\tthis._jsNode.onaudioprocess = function(){};\n\t\t\tthis._jsNode = null;\n\t\t\tthis.tick = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Clock;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  Time can be descibed in a number of ways. \n\t\t *  Any Method which accepts Tone.Time as a parameter will accept: \n\t\t *  \n\t\t *  Numbers, which will be taken literally as the time (in seconds). \n\t\t *  \n\t\t *  Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values. \n\t\t *  \n\t\t *  Transport Time, (\"4:3:2\") will also provide tempo and time signature relative times \n\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t\t *  \n\t\t *  Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t\t *  \n\t\t *  Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as \n\t\t *  \"the current time plus whatever expression follows\".\n\t\t *  \n\t\t *  Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined \n\t\t *  into a mathematical expression which will be evaluated to compute the desired time.\n\t\t *  \n\t\t *  No Argument, for methods which accept time, no argument will be interpreted as \n\t\t *  \"now\" (i.e. the currentTime).\n\t\t *\n\t\t *  [Tone.Time Wiki](https://github.com/TONEnoTONE/Tone.js/wiki/Time)\n\t\t *  \n\t\t *  @typedef {number|string|undefined} Tone.Time \n\t\t */\n\n\t\t/**\n\t\t *  @class  Oscillator-based transport allows for simple musical timing\n\t\t *          supports tempo curves and time changes. Do not construct\n\t\t *          an instance of the transport. One is automatically created \n\t\t *          on init and additional transports cannot be created. <br><br>\n\t\t *          If you need to schedule highly independent callback functions,\n\t\t *          check out {@link Tone.Clock}.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t */\n\t\tTone.Transport = function(){\n\n\t\t\t/**\n\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t *  initially starts at 120bpm\n\t\t\t *  \n\t\t\t *  @private\n\t\t\t *  @type {Tone.Clock}\n\t\t\t */\n\t\t\tthis._clock = new Tone.Clock(0, this._processTick.bind(this));\n\n\t\t\t/** \n\t\t\t * \tIf the transport loops or not.\n\t\t\t *  @type {boolean}\n\t\t\t */\n\t\t\tthis.loop = false;\n\n\t\t\t/**\n\t\t\t *  the bpm value\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.bpm = new Tone.Signal(120, Tone.Signal.Units.BPM);\n\n\t\t\t/**\n\t\t\t *  the signal scalar\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._bpmMult = new Tone.Multiply(1/60 * tatum);\n\n\t\t\t/**\n\t\t\t * \tThe state of the transport. \n\t\t\t *  @type {TransportState}\n\t\t\t */\n\t\t\tthis.state = TransportState.STOPPED;\n\n\t\t\t//connect it all up\n\t\t\tthis.bpm.chain(this._bpmMult, this._clock.frequency);\n\t\t};\n\n\t\tTone.extend(Tone.Transport);\n\n\t\t/**\n\t\t *  the defaults\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t *  @static\n\t\t */\n\t\tTone.Transport.defaults = {\n\t\t\t\"bpm\" : 120,\n\t\t\t\"swing\" : 0,\n\t\t\t\"swingSubdivision\" : \"16n\",\n\t\t\t\"timeSignature\" : 4,\n\t\t\t\"loopStart\" : 0,\n\t\t\t\"loopEnd\" : \"4m\"\n\t\t};\n\n\t\t/** \n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tvar tatum = 12;\n\n\t\t/** \n\t\t * @private \n\t\t * @type {number} \n\t\t */\n\t\tvar timelineTicks = 0;\n\n\t\t/** \n\t\t * @private \n\t\t * @type {number} \n\t\t */\n\t\tvar transportTicks = 0;\n\n\t\t/**\n\t\t *  Which subdivision the swing is applied to.\n\t\t *  defaults to an 16th note\n\t\t *  @private\n\t\t *  @type {number}\n\t\t */\n\t\tvar swingSubdivision = \"16n\";\n\n\t\t/**\n\t\t *  controls which beat the swing is applied to\n\t\t *  defaults to an 16th note\n\t\t *  @private\n\t\t *  @type {number}\n\t\t */\n\t\tvar swingTatum = 3;\n\n\t\t/**\n\t\t *  controls which beat the swing is applied to\n\t\t *  @private\n\t\t *  @type {number}\n\t\t */\n\t\tvar swingAmount = 0;\n\n\t\t/** \n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tvar transportTimeSignature = 4;\n\n\t\t/** \n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tvar loopStart = 0;\n\n\t\t/** \n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tvar loopEnd = tatum * 4;\n\n\t\t/** \n\t\t * @private\n\t\t * @type {Array}\n\t\t */\n\t\tvar intervals = [];\n\t\t\n\t\t/** \n\t\t * @private\n\t\t * @type {Array}\n\t\t */\n\t\tvar timeouts = [];\n\t\t\n\t\t/** \n\t\t * @private\n\t\t * @type {Array}\n\t\t */\n\t\tvar transportTimeline = [];\n\t\t\n\t\t/** \n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tvar timelineProgress = 0;\n\n\t\t/** \n\t\t *  All of the synced components\n\t\t *  @private \n\t\t *  @type {Array<Tone>}\n\t\t */\n\t\tvar SyncedSources = [];\n\n\t\t/** \n\t\t *  All of the synced Signals\n\t\t *  @private \n\t\t *  @type {Array<Tone.Signal>}\n\t\t */\n\t\tvar SyncedSignals = [];\n\n\t\t/**\n\t\t *  @enum\n\t\t */\n\t\t var TransportState = {\n\t\t \tSTARTED : \"started\",\n\t\t \tPAUSED : \"paused\",\n\t\t \tSTOPPED : \"stopped\"\n\t\t };\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tTICKS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  called on every tick\n\t\t *  @param   {number} tickTime clock relative tick time\n\t\t *  @private\n\t\t */\n\t\tTone.Transport.prototype._processTick = function(tickTime){\n\t\t\tif (this.state === TransportState.STARTED){\n\t\t\t\tif (swingAmount > 0 && \n\t\t\t\t\ttimelineTicks % tatum !== 0 && //not on a downbeat\n\t\t\t\t\ttimelineTicks % swingTatum === 0){\n\t\t\t\t\t//add some swing\n\t\t\t\t\ttickTime += this._ticksToSeconds(swingTatum) * swingAmount;\n\t\t\t\t}\n\t\t\t\tprocessIntervals(tickTime);\n\t\t\t\tprocessTimeouts(tickTime);\n\t\t\t\tprocessTimeline(tickTime);\n\t\t\t\ttransportTicks += 1;\n\t\t\t\ttimelineTicks += 1;\n\t\t\t\tif (this.loop){\n\t\t\t\t\tif (timelineTicks === loopEnd){\n\t\t\t\t\t\tthis._setTicks(loopStart);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  jump to a specific tick in the timeline\n\t\t *  updates the timeline callbacks\n\t\t *  \n\t\t *  @param   {number} ticks the tick to jump to\n\t\t *  @private\n\t\t */\n\t\tTone.Transport.prototype._setTicks = function(ticks){\n\t\t\ttimelineTicks = ticks;\n\t\t\tfor (var i = 0; i < transportTimeline.length; i++){\n\t\t\t\tvar timeout = transportTimeline[i];\n\t\t\t\tif (timeout.callbackTick() >= ticks){\n\t\t\t\t\ttimelineProgress = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tEVENT PROCESSING\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  process the intervals\n\t\t *  @param  {number} time \n\t\t */\n\t\tvar processIntervals = function(time){\n\t\t\tfor (var i = 0, len = intervals.length; i<len; i++){\n\t\t\t\tvar interval = intervals[i];\n\t\t\t\tif (interval.testInterval(transportTicks)){\n\t\t\t\t\tinterval.doCallback(time);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  process the timeouts\n\t\t *  @param  {number} time \n\t\t */\n\t\tvar processTimeouts = function(time){\n\t\t\tvar removeTimeouts = 0;\n\t\t\tfor (var i = 0, len = timeouts.length; i<len; i++){\n\t\t\t\tvar timeout = timeouts[i];\n\t\t\t\tvar callbackTick = timeout.callbackTick();\n\t\t\t\tif (callbackTick <= transportTicks){\n\t\t\t\t\ttimeout.doCallback(time);\n\t\t\t\t\tremoveTimeouts++;\n\t\t\t\t} else if (callbackTick > transportTicks){\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t}\n\t\t\t//remove the timeouts off the front of the array after they've been called\n\t\t\ttimeouts.splice(0, removeTimeouts);\n\t\t};\n\n\t\t/**\n\t\t *  process the transportTimeline events\n\t\t *  @param  {number} time \n\t\t */\n\t\tvar processTimeline = function(time){\n\t\t\tfor (var i = timelineProgress, len = transportTimeline.length; i<len; i++){\n\t\t\t\tvar evnt = transportTimeline[i];\n\t\t\t\tvar callbackTick = evnt.callbackTick();\n\t\t\t\tif (callbackTick === timelineTicks){\n\t\t\t\t\ttimelineProgress = i;\n\t\t\t\t\tevnt.doCallback(time);\n\t\t\t\t} else if (callbackTick > timelineTicks){\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t}\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tINTERVAL\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Set a callback for a recurring event.\n\t\t *\n\t\t *  @param {function} callback\n\t\t *  @param {Tone.Time}   interval \n\t\t *  @return {number} the id of the interval\n\t\t *  @example\n\t\t *  //triggers a callback every 8th note with the exact time of the event\n\t\t *  Tone.Transport.setInterval(function(time){\n\t\t *  \tenvelope.triggerAttack(time);\n\t\t *  }, \"8n\");\n\t\t */\n\t\tTone.Transport.prototype.setInterval = function(callback, interval, ctx){\n\t\t\tvar tickTime = this._toTicks(interval);\n\t\t\tvar timeout = new TimelineEvent(callback, ctx, tickTime, transportTicks);\n\t\t\tintervals.push(timeout);\n\t\t\treturn timeout.id;\n\t\t};\n\n\t\t/**\n\t\t *  clear an interval from the processing array\n\t\t *  @param  {number} rmInterval \tthe interval to remove\n\t\t *  @return {boolean}            \ttrue if the event was removed\n\t\t */\n\t\tTone.Transport.prototype.clearInterval = function(rmInterval){\n\t\t\tfor (var i = 0; i < intervals.length; i++){\n\t\t\t\tvar interval = intervals[i];\n\t\t\t\tif (interval.id === rmInterval){\n\t\t\t\t\tintervals.splice(i, 1);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t *  removes all of the intervals that are currently set\n\t\t *  @return {boolean}            \ttrue if the event was removed\n\t\t */\n\t\tTone.Transport.prototype.clearIntervals = function(){\n\t\t\tvar willRemove = intervals.length > 0;\n\t\t\tintervals = [];\n\t\t\treturn willRemove;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tTIMEOUT\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Set a timeout to occur after time from now. NB: the transport must be \n\t\t *  running for this to be triggered. All timeout events are cleared when the \n\t\t *  transport is stopped. \n\t\t *\n\t\t *  @param {function} callback \n\t\t *  @param {Tone.Time}   time     \n\t\t *  @return {number} the id of the timeout for clearing timeouts\n\t\t *  @example\n\t\t *  //trigger an event to happen 1 second from now\n\t\t *  Tone.Transport.setTimeout(function(time){\n\t\t *  \tplayer.start(time);\n\t\t *  }, 1)\n\t\t */\n\t\tTone.Transport.prototype.setTimeout = function(callback, time, ctx){\n\t\t\tvar ticks = this._toTicks(time);\n\t\t\tvar timeout = new TimelineEvent(callback, ctx, ticks + transportTicks, 0);\n\t\t\t//put it in the right spot\n\t\t\tfor (var i = 0, len = timeouts.length; i<len; i++){\n\t\t\t\tvar testEvnt = timeouts[i];\n\t\t\t\tif (testEvnt.callbackTick() > timeout.callbackTick()){\n\t\t\t\t\ttimeouts.splice(i, 0, timeout);\n\t\t\t\t\treturn timeout.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//otherwise push it on the end\n\t\t\ttimeouts.push(timeout);\n\t\t\treturn timeout.id;\n\t\t};\n\n\t\t/**\n\t\t *  clear the timeout based on it's ID\n\t\t *  @param  {number} timeoutID \n\t\t *  @return {boolean}           true if the timeout was removed\n\t\t */\n\t\tTone.Transport.prototype.clearTimeout = function(timeoutID){\n\t\t\tfor (var i = 0; i < timeouts.length; i++){\n\t\t\t\tvar testTimeout = timeouts[i];\n\t\t\t\tif (testTimeout.id === timeoutID){\n\t\t\t\t\ttimeouts.splice(i, 1);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t *  removes all of the timeouts that are currently set\n\t\t *  @return {boolean}            \ttrue if the event was removed\n\t\t */\n\t\tTone.Transport.prototype.clearTimeouts = function(){\n\t\t\tvar willRemove = timeouts.length > 0;\n\t\t\ttimeouts = [];\n\t\t\treturn willRemove;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tTIMELINE\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Timeline events are synced to the transportTimeline of the Tone.Transport\n\t\t *  Unlike Timeout, Timeline events will restart after the \n\t\t *  Tone.Transport has been stopped and restarted. \n\t\t *\n\t\t *  @param {function} \tcallback \t\n\t\t *  @param {Tome.Time}  timeout  \n\t\t *  @return {number} \t\t\t\tthe id for clearing the transportTimeline event\n\t\t *  @example\n\t\t *  //trigger the start of a part on the 16th measure\n\t\t *  Tone.Transport.setTimeline(function(time){\n\t\t *  \tpart.start(time);\n\t\t *  }, \"16m\");\n\t\t */\n\t\tTone.Transport.prototype.setTimeline = function(callback, timeout, ctx){\n\t\t\tvar ticks = this._toTicks(timeout);\n\t\t\tvar timelineEvnt = new TimelineEvent(callback, ctx, ticks, 0);\n\t\t\t//put it in the right spot\n\t\t\tfor (var i = timelineProgress, len = transportTimeline.length; i<len; i++){\n\t\t\t\tvar testEvnt = transportTimeline[i];\n\t\t\t\tif (testEvnt.callbackTick() > timelineEvnt.callbackTick()){\n\t\t\t\t\ttransportTimeline.splice(i, 0, timelineEvnt);\n\t\t\t\t\treturn timelineEvnt.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//otherwise push it on the end\n\t\t\ttransportTimeline.push(timelineEvnt);\n\t\t\treturn timelineEvnt.id;\n\t\t};\n\n\t\t/**\n\t\t *  clear the transportTimeline event from the \n\t\t *  @param  {number} timelineID \n\t\t *  @return {boolean} true if it was removed\n\t\t */\n\t\tTone.Transport.prototype.clearTimeline = function(timelineID){\n\t\t\tfor (var i = 0; i < transportTimeline.length; i++){\n\t\t\t\tvar testTimeline = transportTimeline[i];\n\t\t\t\tif (testTimeline.id === timelineID){\n\t\t\t\t\ttransportTimeline.splice(i, 1);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t *  remove all events from the timeline\n\t\t *  @returns {boolean} true if the events were removed\n\t\t */\n\t\tTone.Transport.prototype.clearTimelines = function(){\n\t\t\ttimelineProgress = 0;\n\t\t\tvar willRemove = transportTimeline.length > 0;\n\t\t\ttransportTimeline = [];\n\t\t\treturn willRemove;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tTIME CONVERSIONS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  turns the time into\n\t\t *  @param  {Tone.Time} time\n\t\t *  @return {number}   \n\t\t *  @private   \n\t\t */\n\t\tTone.Transport.prototype._toTicks = function(time){\n\t\t\t//get the seconds\n\t\t\tvar seconds = this.toSeconds(time);\n\t\t\tvar quarter = this.notationToSeconds(\"4n\");\n\t\t\tvar quarters = seconds / quarter;\n\t\t\tvar tickNum = quarters * tatum;\n\t\t\t//quantize to tick value\n\t\t\treturn Math.round(tickNum);\n\t\t};\n\n\t\t/**\n\t\t *  convert ticks into seconds\n\t\t *  \n\t\t *  @param  {number} ticks \n\t\t *  @param {number=} bpm \n\t\t *  @param {number=} timeSignature\n\t\t *  @return {number}               seconds\n\t\t *  @private\n\t\t */\n\t\tTone.Transport.prototype._ticksToSeconds = function(ticks, bpm, timeSignature){\n\t\t\tticks = Math.floor(ticks);\n\t\t\tvar quater = this.notationToSeconds(\"4n\", bpm, timeSignature);\n\t\t\treturn (quater * ticks) / (tatum);\n\t\t};\n\n\t\t/**\n\t\t *  returns the time of the next beat\n\t\t *  @param  {string} [subdivision=\"4n\"]\n\t\t *  @return {number} \tthe time in seconds of the next subdivision\n\t\t */\n\t\tTone.Transport.prototype.nextBeat = function(subdivision){\n\t\t\tsubdivision = this.defaultArg(subdivision, \"4n\");\n\t\t\tvar tickNum = this._toTicks(subdivision);\n\t\t\tvar remainingTicks = (transportTicks % tickNum);\n\t\t\tvar nextTick = remainingTicks;\n\t\t\tif (remainingTicks > 0){\n\t\t\t\tnextTick = tickNum - remainingTicks;\n\t\t\t}\n\t\t\treturn this._ticksToSeconds(nextTick);\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tSTART/STOP/PAUSE\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  start the transport and all sources synced to the transport\n\t\t *  \n\t\t *  @param  {Tone.Time} time\n\t\t *  @param  {Tone.Time=} offset the offset position to start\n\t\t *  @returns {Tone.Transport} `this`\n\t\t */\n\t\tTone.Transport.prototype.start = function(time, offset){\n\t\t\tif (this.state === TransportState.STOPPED || this.state === TransportState.PAUSED){\n\t\t\t\tif (!this.isUndef(offset)){\n\t\t\t\t\tthis._setTicks(this._toTicks(offset));\n\t\t\t\t}\n\t\t\t\tthis.state = TransportState.STARTED;\n\t\t\t\tvar startTime = this.toSeconds(time);\n\t\t\t\tthis._clock.start(startTime);\n\t\t\t\t//call start on each of the synced sources\n\t\t\t\tfor (var i = 0; i < SyncedSources.length; i++){\n\t\t\t\t\tvar source = SyncedSources[i].source;\n\t\t\t\t\tvar delay = SyncedSources[i].delay;\n\t\t\t\t\tsource.start(startTime + delay);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\n\t\t/**\n\t\t *  stop the transport and all sources synced to the transport\n\t\t *  \n\t\t *  @param  {Tone.Time} time\n\t\t *  @returns {Tone.Transport} `this`\n\t\t */\n\t\tTone.Transport.prototype.stop = function(time){\n\t\t\tif (this.state === TransportState.STARTED || this.state === TransportState.PAUSED){\n\t\t\t\tvar stopTime = this.toSeconds(time);\n\t\t\t\tthis._clock.stop(stopTime, this._onended.bind(this));\n\t\t\t\t//call start on each of the synced sources\n\t\t\t\tfor (var i = 0; i < SyncedSources.length; i++){\n\t\t\t\t\tvar source = SyncedSources[i].source;\n\t\t\t\t\tsource.stop(stopTime);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._onended();\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  invoked when the transport is stopped\n\t\t *  @private\n\t\t */\n\t\tTone.Transport.prototype._onended = function(){\n\t\t\ttransportTicks = 0;\n\t\t\tthis._setTicks(0);\n\t\t\tthis.clearTimeouts();\n\t\t\tthis.state = TransportState.STOPPED;\n\t\t};\n\n\t\t/**\n\t\t *  pause the transport and all sources synced to the transport\n\t\t *  \n\t\t *  @param  {Tone.Time} time\n\t\t *  @returns {Tone.Transport} `this`\n\t\t */\n\t\tTone.Transport.prototype.pause = function(time){\n\t\t\tif (this.state === TransportState.STARTED){\n\t\t\t\tthis.state = TransportState.PAUSED;\n\t\t\t\tvar stopTime = this.toSeconds(time);\n\t\t\t\tthis._clock.stop(stopTime);\n\t\t\t\t//call pause on each of the synced sources\n\t\t\t\tfor (var i = 0; i < SyncedSources.length; i++){\n\t\t\t\t\tvar source = SyncedSources[i].source;\n\t\t\t\t\tsource.pause(stopTime);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tSETTERS/GETTERS\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Time signature as just the numerator over 4. \n\t\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {number}\n\t\t *  @name timeSignature\n\t\t */\n\t\tObject.defineProperty(Tone.Transport.prototype, \"timeSignature\", {\n\t\t\tget : function(){\n\t\t\t\treturn transportTimeSignature;\n\t\t\t},\n\t\t\tset : function(numerator){\n\t\t\t\ttransportTimeSignature = numerator;\n\t\t\t}\n\t\t});\n\n\n\t\t/**\n\t\t * The loop start point\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {Tone.Time}\n\t\t * @name loopStart\n\t\t */\n\t\tObject.defineProperty(Tone.Transport.prototype, \"loopStart\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._ticksToSeconds(loopStart);\n\t\t\t},\n\t\t\tset : function(startPosition){\n\t\t\t\tloopStart = this._toTicks(startPosition);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The loop end point\n\t\t * @memberOf Tone.Transport#\n\t\t * @type {Tone.Time}\n\t\t * @name loopEnd\n\t\t */\n\t\tObject.defineProperty(Tone.Transport.prototype, \"loopEnd\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._ticksToSeconds(loopEnd);\n\t\t\t},\n\t\t\tset : function(endPosition){\n\t\t\t\tloopEnd = this._toTicks(endPosition);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  shorthand loop setting\n\t\t *  @param {Tone.Time} startPosition \n\t\t *  @param {Tone.Time} endPosition   \n\t\t *  @returns {Tone.Transport} `this`\n\t\t */\n\t\tTone.Transport.prototype.setLoopPoints = function(startPosition, endPosition){\n\t\t\tthis.loopStart = startPosition;\n\t\t\tthis.loopEnd = endPosition;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  The swing value. Between 0-1 where 1 equal to \n\t\t *  the note + half the subdivision.\n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {number}\n\t\t *  @name swing\n\t\t */\n\t\tObject.defineProperty(Tone.Transport.prototype, \"swing\", {\n\t\t\tget : function(){\n\t\t\t\treturn swingAmount * 2;\n\t\t\t},\n\t\t\tset : function(amount){\n\t\t\t\t//scale the values to a normal range\n\t\t\t\tswingAmount = amount * 0.5;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  Set the subdivision which the swing will be applied to. \n\t\t *  The default values is a 16th note. Value must be less \n\t\t *  than a quarter note.\n\t\t *  \n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {Tone.Time}\n\t\t *  @name swingSubdivision\n\t\t */\n\t\tObject.defineProperty(Tone.Transport.prototype, \"swingSubdivision\", {\n\t\t\tget : function(){\n\t\t\t\treturn swingSubdivision;\n\t\t\t},\n\t\t\tset : function(subdivision){\n\t\t\t\t//scale the values to a normal range\n\t\t\t\tswingSubdivision = subdivision;\n\t\t\t\tswingTatum = this._toTicks(subdivision);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  The Transport's position in MEASURES:BEATS:SIXTEENTHS.\n\t\t *  Setting the value will jump to that position right away. \n\t\t *  \n\t\t *  @memberOf Tone.Transport#\n\t\t *  @type {string}\n\t\t *  @name position\n\t\t */\n\t\tObject.defineProperty(Tone.Transport.prototype, \"position\", {\n\t\t\tget : function(){\n\t\t\t\tvar quarters = timelineTicks / tatum;\n\t\t\t\tvar measures = Math.floor(quarters / transportTimeSignature);\n\t\t\t\tvar sixteenths = Math.floor((quarters % 1) * 4);\n\t\t\t\tquarters = Math.floor(quarters) % transportTimeSignature;\n\t\t\t\tvar progress = [measures, quarters, sixteenths];\n\t\t\t\treturn progress.join(\":\");\n\t\t\t},\n\t\t\tset : function(progress){\n\t\t\t\tvar ticks = this._toTicks(progress);\n\t\t\t\tthis._setTicks(ticks);\n\t\t\t}\n\t\t});\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tSYNCING\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  Sync a source to the transport so that \n\t\t *  @param  {Tone.Source} source the source to sync to the transport\n\t\t *  @param {Tone.Time} delay (optionally) start the source with a delay from the transport\n\t\t *  @returns {Tone.Transport} `this`\n\t\t */\n\t\tTone.Transport.prototype.syncSource = function(source, startDelay){\n\t\t\tSyncedSources.push({\n\t\t\t\tsource : source,\n\t\t\t\tdelay : this.toSeconds(this.defaultArg(startDelay, 0))\n\t\t\t});\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  remove the source from the list of Synced Sources\n\t\t *  \n\t\t *  @param  {Tone.Source} source [description]\n\t\t *  @returns {Tone.Transport} `this`\n\t\t */\n\t\tTone.Transport.prototype.unsyncSource = function(source){\n\t\t\tfor (var i = 0; i < SyncedSources.length; i++){\n\t\t\t\tif (SyncedSources[i].source === source){\n\t\t\t\t\tSyncedSources.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  attaches the signal to the tempo control signal so that \n\t\t *  any changes in the tempo will change the signal in the same\n\t\t *  ratio. \n\t\t *  \n\t\t *  @param  {Tone.Signal} signal \n\t\t *  @param {number=} ratio Optionally pass in the ratio between\n\t\t *                         the two signals. Otherwise it will be computed\n\t\t *                         based on their current values. \n\t\t *  @returns {Tone.Transport} `this`\n\t\t */\n\t\tTone.Transport.prototype.syncSignal = function(signal, ratio){\n\t\t\tif (!ratio){\n\t\t\t\t//get the sync ratio\n\t\t\t\tif (signal._value.value !== 0){\n\t\t\t\t\tratio = signal._value.value / this.bpm.value;\n\t\t\t\t} else {\n\t\t\t\t\tratio = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ratioSignal = this.context.createGain();\n\t\t\tratioSignal.gain.value = ratio;\n\t\t\tthis.bpm.chain(ratioSignal, signal._value);\n\t\t\tSyncedSignals.push({\n\t\t\t\t\"ratio\" : ratioSignal,\n\t\t\t\t\"signal\" : signal,\n\t\t\t\t\"initial\" : signal._value.value\n\t\t\t});\n\t\t\tsignal._value.value = 0;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Unsyncs a previously synced signal from the transport's control\n\t\t *  @param  {Tone.Signal} signal \n\t\t *  @returns {Tone.Transport} `this`\n\t\t */\n\t\tTone.Transport.prototype.unsyncSignal = function(signal){\n\t\t\tfor (var i = 0; i < SyncedSignals.length; i++){\n\t\t\t\tvar syncedSignal = SyncedSignals[i];\n\t\t\t\tif (syncedSignal.signal === signal){\n\t\t\t\t\tsyncedSignal.ratio.disconnect();\n\t\t\t\t\tsyncedSignal.signal._value.value = syncedSignal.initial;\n\t\t\t\t\tSyncedSignals.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Transport} `this`\n\t\t */\n\t\tTone.Transport.prototype.dispose = function(){\n\t\t\tthis._clock.dispose();\n\t\t\tthis._clock = null;\n\t\t\tthis.bpm.dispose();\n\t\t\tthis.bpm = null;\n\t\t\tthis._bpmMult.dispose();\n\t\t\tthis._bpmMult = null;\n\t\t\treturn this;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tTIMELINE EVENT\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {number}\n\t\t */\n\t\tvar TimelineEventIDCounter = 0;\n\n\t\t/**\n\t\t *  A Timeline event\n\t\t *\n\t\t *  @constructor\n\t\t *  @private\n\t\t *  @param {function(number)} callback   \n\t\t *  @param {Object}   context    \n\t\t *  @param {number}   tickTime\n\t \t *  @param {number}   startTicks\n\t\t */\n\t\tvar TimelineEvent = function(callback, context, tickTime, startTicks){\n\t\t\tthis.startTicks = startTicks;\n\t\t\tthis.tickTime = tickTime;\n\t\t\tthis.callback = callback;\n\t\t\tthis.context = context;\n\t\t\tthis.id = TimelineEventIDCounter++;\n\t\t};\n\t\t\n\t\t/**\n\t\t *  invoke the callback in the correct context\n\t\t *  passes in the playback time\n\t\t *  \n\t\t *  @param  {number} playbackTime \n\t\t */\n\t\tTimelineEvent.prototype.doCallback = function(playbackTime){\n\t\t\tthis.callback.call(this.context, playbackTime); \n\t\t};\n\n\t\t/**\n\t\t *  get the tick which the callback is supposed to occur on\n\t\t *  \n\t\t *  @return {number} \n\t\t */\n\t\tTimelineEvent.prototype.callbackTick = function(){\n\t\t\treturn this.startTicks + this.tickTime;\n\t\t};\n\n\t\t/**\n\t\t *  test if the tick occurs on the interval\n\t\t *  \n\t\t *  @param  {number} tick \n\t\t *  @return {boolean}      \n\t\t */\n\t\tTimelineEvent.prototype.testInterval = function(tick){\n\t\t\treturn (tick - this.startTicks) % this.tickTime === 0;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////////\n\t\t//\tAUGMENT TONE'S PROTOTYPE TO INCLUDE TRANSPORT TIMING\n\t\t///////////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  tests if a string is musical notation\n\t\t *  i.e.:\n\t\t *  \t4n = quarter note\n\t\t *   \t2m = two measures\n\t\t *    \t8t = eighth-note triplet\n\t\t *  defined in \"Tone/core/Transport\"\n\t\t *  \n\t\t *  @return {boolean} \n\t\t *  @method isNotation\n\t\t *  @lends Tone.prototype.isNotation\n\t\t */\n\t\tTone.prototype.isNotation = (function(){\n\t\t\tvar notationFormat = new RegExp(/[0-9]+[mnt]$/i);\n\t\t\treturn function(note){\n\t\t\t\treturn notationFormat.test(note);\n\t\t\t};\n\t\t})();\n\n\t\t/**\n\t\t *  tests if a string is transportTime\n\t\t *  i.e. :\n\t\t *  \t1:2:0 = 1 measure + two quarter notes + 0 sixteenth notes\n\t\t *  defined in \"Tone/core/Transport\"\n\t\t *  \t\n\t\t *  @return {boolean} \n\t\t *\n\t\t *  @method isTransportTime\n\t\t *  @lends Tone.prototype.isTransportTime\n\t\t */\n\t\tTone.prototype.isTransportTime = (function(){\n\t\t\tvar transportTimeFormat = new RegExp(/^\\d+(\\.\\d+)?:\\d+(\\.\\d+)?(:\\d+(\\.\\d+)?)?$/i);\n\t\t\treturn function(transportTime){\n\t\t\t\treturn transportTimeFormat.test(transportTime);\n\t\t\t};\n\t\t})();\n\n\t\t/**\n\t\t *\n\t\t *  convert notation format strings to seconds\n\t\t *  defined in \"Tone/core/Transport\"\n\t\t *  \n\t\t *  @param  {string} notation     \n\t\t *  @param {number=} bpm \n\t\t *  @param {number=} timeSignature \n\t\t *  @return {number} \n\t\t *                \n\t\t */\n\t\tTone.prototype.notationToSeconds = function(notation, bpm, timeSignature){\n\t\t\tbpm = this.defaultArg(bpm, Tone.Transport.bpm.value);\n\t\t\ttimeSignature = this.defaultArg(timeSignature, transportTimeSignature);\n\t\t\tvar beatTime = (60 / bpm);\n\t\t\tvar subdivision = parseInt(notation, 10);\n\t\t\tvar beats = 0;\n\t\t\tif (subdivision === 0){\n\t\t\t\tbeats = 0;\n\t\t\t}\n\t\t\tvar lastLetter = notation.slice(-1);\n\t\t\tif (lastLetter === \"t\"){\n\t\t\t\tbeats = (4 / subdivision) * 2/3;\n\t\t\t} else if (lastLetter === \"n\"){\n\t\t\t\tbeats = 4 / subdivision;\n\t\t\t} else if (lastLetter === \"m\"){\n\t\t\t\tbeats = subdivision * timeSignature;\n\t\t\t} else {\n\t\t\t\tbeats = 0;\n\t\t\t}\n\t\t\treturn beatTime * beats;\n\t\t};\n\n\t\t/**\n\t\t *  convert transportTime into seconds\n\t\t *  defined in \"Tone/core/Transport\"\n\t\t *  \n\t\t *  ie: 4:2:3 == 4 measures + 2 quarters + 3 sixteenths\n\t\t *\n\t\t *  @param  {string} transportTime \n\t\t *  @param {number=} bpm \n\t\t *  @param {number=} timeSignature\n\t\t *  @return {number}               seconds\n\t\t *\n\t\t *  @lends Tone.prototype.transportTimeToSeconds\n\t\t */\n\t\tTone.prototype.transportTimeToSeconds = function(transportTime, bpm, timeSignature){\n\t\t\tbpm = this.defaultArg(bpm, Tone.Transport.bpm.value);\n\t\t\ttimeSignature = this.defaultArg(timeSignature, transportTimeSignature);\n\t\t\tvar measures = 0;\n\t\t\tvar quarters = 0;\n\t\t\tvar sixteenths = 0;\n\t\t\tvar split = transportTime.split(\":\");\n\t\t\tif (split.length === 2){\n\t\t\t\tmeasures = parseFloat(split[0]);\n\t\t\t\tquarters = parseFloat(split[1]);\n\t\t\t} else if (split.length === 1){\n\t\t\t\tquarters = parseFloat(split[0]);\n\t\t\t} else if (split.length === 3){\n\t\t\t\tmeasures = parseFloat(split[0]);\n\t\t\t\tquarters = parseFloat(split[1]);\n\t\t\t\tsixteenths = parseFloat(split[2]);\n\t\t\t}\n\t\t\tvar beats = (measures * timeSignature + quarters + sixteenths / 4);\n\t\t\treturn beats * this.notationToSeconds(\"4n\");\n\t\t};\n\n\t\t/**\n\t\t *  Convert seconds to the closest transportTime in the form \n\t\t *  \tmeasures:quarters:sixteenths\n\t\t *  defined in \"Tone/core/Transport\"\n\t\t *\n\t\t *  @method toTransportTime\n\t\t *  \n\t\t *  @param {Tone.Time} seconds \n\t\t *  @param {number=} bpm \n\t\t *  @param {number=} timeSignature\n\t\t *  @return {string}  \n\t\t *  \n\t\t *  @lends Tone.prototype.toTransportTime\n\t\t */\n\t\tTone.prototype.toTransportTime = function(time, bpm, timeSignature){\n\t\t\tvar seconds = this.toSeconds(time, bpm, timeSignature);\n\t\t\tbpm = this.defaultArg(bpm, Tone.Transport.bpm.value);\n\t\t\ttimeSignature = this.defaultArg(timeSignature, transportTimeSignature);\n\t\t\tvar quarterTime = this.notationToSeconds(\"4n\");\n\t\t\tvar quarters = seconds / quarterTime;\n\t\t\tvar measures = Math.floor(quarters / timeSignature);\n\t\t\tvar sixteenths = Math.floor((quarters % 1) * 4);\n\t\t\tquarters = Math.floor(quarters) % timeSignature;\n\t\t\tvar progress = [measures, quarters, sixteenths];\n\t\t\treturn progress.join(\":\");\n\t\t};\n\n\t\t/**\n\t\t *  Convert a frequency representation into a number.\n\t\t *  Defined in \"Tone/core/Transport\".\n\t\t *  \t\n\t\t *  @param  {Tone.Frequency} freq \n\t\t *  @param {number=} \tnow \tif passed in, this number will be \n\t\t *                        \t\tused for all 'now' relative timings\n\t\t *  @return {number}      the frequency in hertz\n\t\t */\n\t\tTone.prototype.toFrequency = function(freq, now){\n\t\t\tif (this.isFrequency(freq)){\n\t\t\t\treturn parseFloat(freq);\n\t\t\t} else if (this.isNotation(freq) || this.isTransportTime(freq)) {\n\t\t\t\treturn this.secondsToFrequency(this.toSeconds(freq, now));\n\t\t\t} else {\n\t\t\t\treturn freq;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  Convert Tone.Time into seconds.\n\t\t *  Defined in \"Tone/core/Transport\".\n\t\t *  \n\t\t *  Unlike the method which it overrides, this takes into account \n\t\t *  transporttime and musical notation.\n\t\t *\n\t\t *  Time : 1.40\n\t\t *  Notation: 4n|1m|2t\n\t\t *  TransportTime: 2:4:1 (measure:quarters:sixteens)\n\t\t *  Now Relative: +3n\n\t\t *  Math: 3n+16n or even very complicated expressions ((3n*2)/6 + 1)\n\t\t *\n\t\t *  @override\n\t\t *  @param  {Tone.Time} time       \n\t\t *  @param {number=} \tnow \tif passed in, this number will be \n\t\t *                        \t\tused for all 'now' relative timings\n\t\t *  @return {number} \n\t\t */\n\t\tTone.prototype.toSeconds = function(time, now){\n\t\t\tnow = this.defaultArg(now, this.now());\n\t\t\tif (typeof time === \"number\"){\n\t\t\t\treturn time; //assuming that it's seconds\n\t\t\t} else if (typeof time === \"string\"){\n\t\t\t\tvar plusTime = 0;\n\t\t\t\tif(time.charAt(0) === \"+\") {\n\t\t\t\t\tplusTime = now;\n\t\t\t\t\ttime = time.slice(1);\n\t\t\t\t} \n\t\t\t\tvar components = time.split(/[\\(\\)\\-\\+\\/\\*]/);\n\t\t\t\tif (components.length > 1){\n\t\t\t\t\tvar originalTime = time;\n\t\t\t\t\tfor(var i = 0; i < components.length; i++){\n\t\t\t\t\t\tvar symb = components[i].trim();\n\t\t\t\t\t\tif (symb !== \"\"){\n\t\t\t\t\t\t\tvar val = this.toSeconds(symb);\n\t\t\t\t\t\t\ttime = time.replace(symb, val);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//i know eval is evil, but i think it's safe here\n\t\t\t\t\t\ttime = eval(time); // jshint ignore:line\n\t\t\t\t\t} catch (e){\n\t\t\t\t\t\tthrow new EvalError(\"problem evaluating Tone.Time: \"+originalTime);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.isNotation(time)){\n\t\t\t\t\ttime = this.notationToSeconds(time);\n\t\t\t\t} else if (this.isTransportTime(time)){\n\t\t\t\t\ttime = this.transportTimeToSeconds(time);\n\t\t\t\t} else if (this.isFrequency(time)){\n\t\t\t\t\ttime = this.frequencyToSeconds(time);\n\t\t\t\t} else {\n\t\t\t\t\ttime = parseFloat(time);\n\t\t\t\t}\n\t\t\t\treturn time + plusTime;\n\t\t\t} else {\n\t\t\t\treturn now;\n\t\t\t}\n\t\t};\n\n\t\tvar TransportConstructor = Tone.Transport;\n\n\t\tTone._initAudioContext(function(){\n\t\t\tif (typeof Tone.Transport === \"function\"){\n\t\t\t\t//a single transport object\n\t\t\t\tTone.Transport = new Tone.Transport();\n\t\t\t} else {\n\t\t\t\t//stop the clock\n\t\t\t\tTone.Transport.stop();\n\t\t\t\t//get the previous bpm\n\t\t\t\tvar bpm = Tone.Transport.bpm.value;\n\t\t\t\t//destory the old clock\n\t\t\t\tTone.Transport._clock.dispose();\n\t\t\t\t//make new Transport insides\n\t\t\t\tTransportConstructor.call(Tone.Transport);\n\t\t\t\t//set the bpm\n\t\t\t\tTone.Transport.bpm.value = bpm;\n\t\t\t}\n\t\t});\n\n\t\treturn Tone.Transport;\n\t});\n\n\tToneModule( function(Tone){\n\n\t\t\n\t\t\n\t\t/**\n\t\t *  @class  A single master output which is connected to the\n\t\t *          AudioDestinationNode. It provides useful conveniences\n\t\t *          such as the ability to set the global volume and mute\n\t\t *          the entire application. Additionally, it accepts\n\t\t *          a master send/receive for adding final compression, \n\t\t *          limiting or effects to your application. <br><br>\n\t\t *          Like the Transport, the Master output is created for you\n\t\t *          on initialization. It does not need to be created.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t\tTone.Master = function(){\n\t\t\tTone.call(this);\n\n\t\t\t/**\n\t\t\t * the unmuted volume\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._unmutedVolume = 1;\n\n\t\t\t/**\n\t\t\t * the volume of the output in decibels\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.volume = new Tone.Signal(this.output.gain, Tone.Signal.Units.Decibels);\n\t\t\t\n\t\t\t//connections\n\t\t\tthis.input.chain(this.output, this.context.destination);\n\t\t};\n\n\t\tTone.extend(Tone.Master);\n\n\t\t/**\n\t\t *  Mutethe output\n\t\t *  @returns {Tone.Master} `this`\n\t\t */\n\t\tTone.Master.prototype.mute = function(){\n\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t//maybe it should ramp here?\n\t\t\tthis.volume.value = -Infinity;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Unmute the output. Will return the volume to it's value before \n\t\t *  the output was muted. \n\t\t *  @returns {Tone.Master} `this`\n\t\t */\n\t\tTone.Master.prototype.mute = function(){\n\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  route the master signal to the node's input. \n\t\t *  NOTE: this will disconnect the previously connected node\n\t\t *  @param {AudioNode|Tone} node the node to use as the entry\n\t\t *                               point to the master chain\n\t\t *  @returns {Tone.Master} `this`\n\t\t */\n\t\tTone.Master.prototype.send = function(node){\n\t\t\t//disconnect the previous node\n\t\t\tthis.input.disconnect();\n\t\t\tthis.input.connect(node);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  the master effects chain return point\n\t\t *  @param {AudioNode|Tone} node the node to connect \n\t\t *  @returns {Tone.Master} `this`\n\t\t */\n\t\tTone.Master.prototype.receive = function(node){\n\t\t\tnode.connect(this.output);\n\t\t\treturn this;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tAUGMENT TONE's PROTOTYPE\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  connect 'this' to the master output\n\t\t *  defined in \"Tone/core/Master\"\n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.toMaster = function(){\n\t\t\tthis.connect(Tone.Master);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Also augment AudioNode's prototype to include toMaster\n\t\t *  as a convenience\n\t\t *  @returns {AudioNode} `this`\n\t\t */\n\t\tAudioNode.prototype.toMaster = function(){\n\t\t\tthis.connect(Tone.Master);\n\t\t\treturn this;\n\t\t};\n\n\t\tvar MasterConstructor = Tone.Master;\n\n\t\t/**\n\t\t *  initialize the module and listen for new audio contexts\n\t\t */\n\t\tTone._initAudioContext(function(){\n\t\t\t//a single master output\n\t\t\tif (!Tone.prototype.isUndef(Tone.Master)){\n\t\t\t\tTone.Master = new MasterConstructor();\n\t\t\t} else {\n\t\t\t\tMasterConstructor.prototype.dispose.call(Tone.Master);\n\t\t\t\tMasterConstructor.call(Tone.Master);\n\t\t\t}\n\t\t});\n\n\t\treturn Tone.Master;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\t\t\n\t\t/**\n\t\t *  @class  Base class for sources.\n\t\t *          Sources have start/stop/pause and \n\t\t *          the ability to be synced to the \n\t\t *          start/stop/pause of Tone.Transport.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\t\n\t\tTone.Source = function(options){\n\t\t\t//unlike most ToneNodes, Sources only have an output and no input\n\t\t\tTone.call(this, 0, 1);\n\t\t\toptions = this.defaultArg(options, Tone.Source.defaults);\n\n\t\t\t/**\n\t\t\t * The onended callback when the source is done playing.\n\t\t\t * @type {function}\n\t\t\t * @example\n\t\t\t *  source.onended = function(){\n\t\t\t *  \tconsole.log(\"the source is done playing\");\n\t\t\t *  }\n\t\t\t */\n\t\t\tthis.onended = options.onended;\n\n\t\t\t/**\n\t\t\t *  the next time the source is started\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._nextStart = Infinity;\n\n\t\t\t/**\n\t\t\t *  the next time the source is stopped\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._nextStop = Infinity;\n\n\t\t\t/**\n\t\t\t * The volume of the output in decibels.\n\t\t\t * @type {Tone.Signal}\n\t\t\t * @example\n\t\t\t * source.volume.value = -6;\n\t\t\t */\n\t\t\tthis.volume = new Tone.Signal(this.output.gain, Tone.Signal.Units.Decibels);\n\n\t\t\t/**\n\t\t\t * \tkeeps track of the timeout for chaning the state\n\t\t\t * \tand calling the onended\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._timeout = -1;\n\t\t};\n\n\t\tTone.extend(Tone.Source);\n\n\t\t/**\n\t\t *  The default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Source.defaults = {\n\t\t\t\"onended\" : function(){},\n\t\t\t\"volume\" : 0,\n\t\t};\n\n\t\t/**\n\t\t *  @enum {string}\n\t\t */\n\t\tTone.Source.State = {\n\t\t\tSTARTED : \"started\",\n\t\t\tPAUSED : \"paused\",\n\t\t\tSTOPPED : \"stopped\",\n\t \t};\n\n\t\t/**\n\t\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t\t *  @type {Tone.Source.State}\n\t\t *  @readOnly\n\t\t *  @memberOf Tone.Source#\n\t\t *  @name state\n\t\t */\n\t\tObject.defineProperty(Tone.Source.prototype, \"state\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._stateAtTime(this.now());\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  Get the state of the source at the specified time.\n\t\t *  @param  {Tone.Time}  time\n\t\t *  @return  {Tone.Source.State} \n\t\t *  @private\n\t\t */\n\t\tTone.Source.prototype._stateAtTime = function(time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tif (this._nextStart <= time && this._nextStop > time){\n\t\t\t\treturn Tone.Source.State.STARTED;\n\t\t\t} else if (this._nextStop <= time){\n\t\t\t\treturn Tone.Source.State.STOPPED;\n\t\t\t} else {\n\t\t\t\treturn Tone.Source.State.STOPPED;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  Start the source at the time.\n\t\t *  @param  {Tone.Time} [time=now]\n\t\t *  @returns {Tone.Source} `this`\n\t\t *  @example\n\t\t *  source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t\t */\n\t\tTone.Source.prototype.start = function(time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tif (this._stateAtTime(time) !== Tone.Source.State.STARTED || this.retrigger){\n\t\t\t\tthis._nextStart = time;\n\t\t\t\tthis._nextStop = Infinity;\n\t\t\t\tthis._start.apply(this, arguments);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * \tstop the source\n\t\t *  @param  {Tone.Time} [time=now]\n\t\t *  @returns {Tone.Source} `this`\n\t\t *  @example\n\t\t *  source.stop(); // stops the source immediately\n\t\t */\n\t\tTone.Source.prototype.stop = function(time){\n\t\t\tvar now = this.now();\n\t\t\ttime = this.toSeconds(time, now);\n\t\t\tif (this._stateAtTime(time) === Tone.Source.State.STARTED){\n\t\t\t\tthis._nextStop = this.toSeconds(time);\n\t\t\t\tclearTimeout(this._timeout);\n\t\t\t\tvar diff = time - now;\n\t\t\t\tif (diff > 0){\n\t\t\t\t\t//add a small buffer before invoking the callback\n\t\t\t\t\tthis._timeout = setTimeout(this.onended, diff * 1000 + 20);\n\t\t\t\t} else {\n\t\t\t\t\tthis.onended();\n\t\t\t\t}\n\t\t\t\tthis._stop.apply(this, arguments);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Not ready yet. \n\t \t *  @private\n\t \t *  @abstract\n\t\t *  @param  {Tone.Time} time \n\t\t *  @returns {Tone.Source} `this`\n\t\t */\n\t\tTone.Source.prototype.pause = function(time){\n\t\t\t//if there is no pause, just stop it\n\t\t\tthis.stop(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Sync the source to the Transport so that when the transport\n\t\t *  is started, this source is started and when the transport is stopped\n\t\t *  or paused, so is the source. \n\t\t *\n\t\t *  @param {Tone.Time} [delay=0] Delay time before starting the source after the\n\t\t *                               Transport has started. \n\t\t *  @returns {Tone.Source} `this`\n\t\t */\n\t\tTone.Source.prototype.sync = function(delay){\n\t\t\tTone.Transport.syncSource(this, delay);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Unsync the source to the Transport. See {@link Tone.Source#sync}\n\t\t *  @returns {Tone.Source} `this`\n\t\t */\n\t\tTone.Source.prototype.unsync = function(){\n\t\t\tTone.Transport.unsyncSource(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *\tclean up\n\t\t *  @return {Tone.Source} `this`\n\t\t */\n\t\tTone.Source.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.stop();\n\t\t\tclearTimeout(this._timeout);\n\t\t\tthis.onended = function(){};\n\t\t\tthis.volume.dispose();\n\t\t\tthis.volume = null;\n\t\t};\n\n\t\treturn Tone.Source;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Oscilator with start, pause, stop and sync to Transport methods\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {number|string} [frequency=440] starting frequency\n\t\t *  @param {string} [type=\"sine\"] type of oscillator (sine|square|triangle|sawtooth)\n\t\t *  @example\n\t\t *  var osc = new Tone.Oscillator(440, \"sine\");\n\t\t */\n\t\tTone.Oscillator = function(){\n\t\t\t\n\t\t\tvar options = this.optionsObject(arguments, [\"frequency\", \"type\"], Tone.Oscillator.defaults);\n\t\t\tTone.Source.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the main oscillator\n\t\t\t *  @type {OscillatorNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._oscillator = null;\n\t\t\t\n\t\t\t/**\n\t\t\t *  The frequency control signal in hertz.\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Signal.Units.Frequency);\n\n\t\t\t/**\n\t\t\t *  The detune control signal in cents. \n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.detune = new Tone.Signal(options.detune);\n\n\t\t\t/**\n\t\t\t *  the periodic wave\n\t\t\t *  @type {PeriodicWave}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._wave = null;\n\n\t\t\t/**\n\t\t\t *  the phase of the oscillator\n\t\t\t *  between 0 - 360\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._phase = options.phase;\n\n\t\t\t/**\n\t\t\t *  the type of the oscillator\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._type = null;\n\t\t\t\n\t\t\t//setup\n\t\t\tthis.type = options.type;\n\t\t\tthis.phase = this._phase;\n\t\t};\n\n\t\tTone.extend(Tone.Oscillator, Tone.Source);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Oscillator.defaults = {\n\t\t\t\"type\" : \"sine\",\n\t\t\t\"frequency\" : 440,\n\t\t\t\"detune\" : 0,\n\t\t\t\"phase\" : 0\n\t\t};\n\n\t\t/**\n\t\t *  start the oscillator\n\t\t *  @param  {Tone.Time} [time=now] \n\t\t *  @private\n\t\t */\n\t\tTone.Oscillator.prototype._start = function(time){\n\t\t\t//new oscillator with previous values\n\t\t\tthis._oscillator = this.context.createOscillator();\n\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t//connect the control signal to the oscillator frequency & detune\n\t\t\tthis._oscillator.connect(this.output);\n\t\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\t\tthis.detune.connect(this._oscillator.detune);\n\t\t\t//start the oscillator\n\t\t\tthis._oscillator.start(this.toSeconds(time));\n\t\t};\n\n\t\t/**\n\t\t *  stop the oscillator\n\t\t *  @private\n\t\t *  @param  {Tone.Time} [time=now] (optional) timing parameter\n\t\t *  @returns {Tone.Oscillator} `this`\n\t\t */\n\t\tTone.Oscillator.prototype._stop = function(time){\n\t\t\tif (this._oscillator){\n\t\t\t\tthis._oscillator.stop(this.toSeconds(time));\n\t\t\t\tthis._oscillator = null;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t\t *  will also affect the oscillators frequency. \n\t\t *  @returns {Tone.Oscillator} `this`\n\t\t *  @example\n\t\t *  Tone.Transport.bpm.value = 120;\n\t\t *  osc.frequency.value = 440;\n\t\t *  osc.syncFrequency();\n\t\t *  Tone.Transport.bpm.value = 240; \n\t\t *  // the frequency of the oscillator is doubled to 880\n\t\t */\n\t\tTone.Oscillator.prototype.syncFrequency = function(){\n\t\t\tTone.Transport.syncSignal(this.frequency);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Unsync the oscillator's frequency from the Transport. \n\t\t *  See {@link Tone.Oscillator#syncFrequency}.\n\t\t *  @returns {Tone.Oscillator} `this`\n\t\t */\n\t\tTone.Oscillator.prototype.unsyncFrequency = function(){\n\t\t\tTone.Transport.unsyncSignal(this.frequency);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * The type of the oscillator: either sine, square, triangle, or sawtooth.\n\t\t *\n\t\t * Uses PeriodicWave internally even for native types so that it can set the phase.\n\t\t *\n\t\t * PeriodicWave equations are from the Web Audio Source code:\n\t\t * https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium\n\t\t *  \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * osc.type = \"square\";\n\t\t * osc.type; //returns \"square\"\n\t\t */\n\t\tObject.defineProperty(Tone.Oscillator.prototype, \"type\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._type;\n\t\t\t},\n\t\t\tset : function(type){\n\t\t\t\tif (this.type !== type){\n\n\t\t\t\t\tvar fftSize = 4096;\n\t\t\t\t\tvar halfSize = fftSize / 2;\n\n\t\t\t\t\tvar real = new Float32Array(halfSize);\n\t\t\t\t\tvar imag = new Float32Array(halfSize);\n\t\t\t\t\t\n\t\t\t\t\t// Clear DC and Nyquist.\n\t\t\t\t\treal[0] = 0;\n\t\t\t\t\timag[0] = 0;\n\n\t\t\t\t\tvar shift = this._phase;\t\n\t\t\t\t\tfor (var n = 1; n < halfSize; ++n) {\n\t\t\t\t\t\tvar piFactor = 2 / (n * Math.PI);\n\t\t\t\t\t\tvar b; \n\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\tcase \"sine\": \n\t\t\t\t\t\t\t\tb = (n === 1) ? 1 : 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"square\":\n\t\t\t\t\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"sawtooth\":\n\t\t\t\t\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"triangle\":\n\t\t\t\t\t\t\t\tif (n & 1) {\n\t\t\t\t\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tb = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new TypeError(\"invalid oscillator type: \"+type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (b !== 0){\n\t\t\t\t\t\t\treal[n] = -b * Math.sin(shift);\n\t\t\t\t\t\t\timag[n] = b * Math.cos(shift);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treal[n] = 0;\n\t\t\t\t\t\t\timag[n] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar periodicWave = this.context.createPeriodicWave(real, imag);\n\t\t\t\t\tthis._wave = periodicWave;\n\t\t\t\t\tif (this._oscillator !== null){\n\t\t\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t\t\t}\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The phase of the oscillator in degrees. \n\t\t * @memberOf Tone.Oscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t * @example\n\t\t * osc.phase = 180; //flips the phase of the oscillator\n\t\t */\n\t\tObject.defineProperty(Tone.Oscillator.prototype, \"phase\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._phase * (180 / Math.PI);\n\t\t\t}, \n\t\t\tset : function(phase){\n\t\t\t\tthis._phase = phase * Math.PI / 180;\n\t\t\t\t//reset the type\n\t\t\t\tthis.type = this._type;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  dispose and disconnect\n\t\t *  @return {Tone.Oscillator} `this`\n\t\t */\n\t\tTone.Oscillator.prototype.dispose = function(){\n\t\t\tTone.Source.prototype.dispose.call(this);\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.disconnect();\n\t\t\t\tthis._oscillator = null;\n\t\t\t}\n\t\t\tthis.frequency.dispose();\n\t\t\tthis.frequency = null;\n\t\t\tthis.detune.dispose();\n\t\t\tthis.detune = null;\n\t\t\tthis._wave = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Oscillator;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class AudioToGain converts an input range of -1,1 to 0,1\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var a2g = new Tone.AudioToGain();\n\t\t */\n\t\tTone.AudioToGain = function(){\n\n\t\t\t/**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._norm = this.input = this.output = new Tone.WaveShaper([0,1]);\n\t\t};\n\n\t\tTone.extend(Tone.AudioToGain, Tone.SignalBase);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.AND} `this`\n\t\t */\n\t\tTone.AudioToGain.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._norm.disconnect();\n\t\t\tthis._norm = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.AudioToGain;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  The Low Frequency Oscillator produces an output signal \n\t\t *          which can be attached to an AudioParam or Tone.Signal \n\t\t *          for constant control over that parameter. the LFO can \n\t\t *          also be synced to the transport to start/stop/pause\n\t\t *          and change when the tempo changes.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @param {Tone.Time} [frequency=\"4n\"]\n\t\t *  @param {number} [outputMin=0]\n\t\t *  @param {number} [outputMax=1]\n\t\t *  @example\n\t\t *  var lfo = new Tone.LFO(\"4n\", 400, 4000);\n\t\t *  lfo.connect(filter.frequency);\n\t\t */\n\t\tTone.LFO = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"frequency\", \"min\", \"max\"], Tone.LFO.defaults);\n\n\t\t\t/** \n\t\t\t *  the oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t */\n\t\t\tthis.oscillator = new Tone.Oscillator({\n\t\t\t\t\"frequency\" : options.frequency, \n\t\t\t\t\"type\" : options.type, \n\t\t\t\t\"phase\" : options.phase\n\t\t\t});\n\n\t\t\t/**\n\t\t\t *  the lfo's frequency\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = this.oscillator.frequency;\n\n\t\t\t/**\n\t\t\t * The amplitude of the LFO, which controls the output range between\n\t\t\t * the min and max output. For example if the min is -10 and the max \n\t\t\t * is 10, setting the amplitude to 0.5 would make the LFO modulate\n\t\t\t * between -5 and 5. \n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.amplitude = this.oscillator.volume;\n\t\t\tthis.amplitude.units = Tone.Signal.Units.Normal;\n\t\t\tthis.amplitude.value = options.amplitude;\n\n\t\t\t/**\n\t\t\t *  @type {Tone.AudioToGain} \n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._a2g = new Tone.AudioToGain();\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Scale} \n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._scaler = this.output = new Tone.Scale(options.min, options.max);\n\n\t\t\t//connect it up\n\t\t\tthis.oscillator.chain(this._a2g, this._scaler);\n\t\t};\n\n\t\tTone.extend(Tone.LFO, Tone.Oscillator);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.LFO.defaults = {\n\t\t\t\"type\" : \"sine\",\n\t\t\t\"min\" : 0,\n\t\t\t\"max\" : 1,\n\t\t\t\"phase\" : 0,\n\t\t\t\"frequency\" : \"4n\",\n\t\t\t\"amplitude\" : 1\n\t\t};\n\n\t\t/**\n\t\t *  Start the LFO. \n\t\t *  @param  {Tone.Time} [time=now] the time the LFO will start\n\t\t *  @returns {Tone.LFO} `this`\n\t\t */\n\t\tTone.LFO.prototype.start = function(time){\n\t\t\tthis.oscillator.start(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Stop the LFO. \n\t\t *  @param  {Tone.Time} [time=now] the time the LFO will stop\n\t\t *  @returns {Tone.LFO} `this`\n\t\t */\n\t\tTone.LFO.prototype.stop = function(time){\n\t\t\tthis.oscillator.stop(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Sync the start/stop/pause to the transport \n\t\t *  and the frequency to the bpm of the transport\n\t\t *\n\t\t *  @param {Tone.Time} [delay=0] the time to delay the start of the\n\t\t *                                LFO from the start of the transport\n\t\t *  @returns {Tone.LFO} `this`\n\t\t *  @example\n\t\t *  lfo.frequency.value = \"8n\";\n\t\t *  lfo.sync();\n\t\t *  // the rate of the LFO will always be an eighth note, \n\t\t *  // even as the tempo changes\n\t\t */\n\t\tTone.LFO.prototype.sync = function(delay){\n\t\t\tthis.oscillator.sync(delay);\n\t\t\tthis.oscillator.syncFrequency();\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  unsync the LFO from transport control\n\t\t *  @returns {Tone.LFO} `this`\n\t\t */\n\t\tTone.LFO.prototype.unsync = function(){\n\t\t\tthis.oscillator.unsync();\n\t\t\tthis.oscillator.unsyncFrequency();\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * The miniumum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t\tObject.defineProperty(Tone.LFO.prototype, \"min\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._scaler.min;\n\t\t\t},\n\t\t\tset : function(min){\n\t\t\t\tthis._scaler.min = min;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The maximum output of the LFO.\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t\tObject.defineProperty(Tone.LFO.prototype, \"max\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._scaler.max;\n\t\t\t},\n\t\t\tset : function(max){\n\t\t\t\tthis._scaler.max = max;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The type of the oscillator: sine, square, sawtooth, triangle. \n\t\t * @memberOf Tone.LFO#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t\t Object.defineProperty(Tone.LFO.prototype, \"type\", {\n\t\t\tget : function(){\n\t\t\t\treturn this.oscillator.type;\n\t\t\t},\n\t\t\tset : function(type){\n\t\t\t\tthis.oscillator.type = type;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The phase of the LFO\n\t\t * @memberOf Tone.LFO#\n\t\t * @type {string}\n\t\t * @name phase\n\t\t */\n\t\t Object.defineProperty(Tone.LFO.prototype, \"phase\", {\n\t\t\tget : function(){\n\t\t\t\treturn this.oscillator.phase;\n\t\t\t},\n\t\t\tset : function(phase){\n\t\t\t\tthis.oscillator.phase = phase;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *\tOverride the connect method so that it 0's out the value \n\t\t *\tif attached to an AudioParam or Tone.Signal. Borrowed from {@link Tone.Signal}\n\t\t *  @function\n\t\t */\n\t\tTone.LFO.prototype.connect = Tone.Signal.prototype.connect;\n\n\t\t/**\n\t\t *  disconnect and dispose\n\t\t *  @returns {Tone.LFO} `this`\n\t\t */\n\t\tTone.LFO.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.oscillator.dispose();\n\t\t\tthis.oscillator = null;\n\t\t\tthis._scaler.dispose();\n\t\t\tthis._scaler = null;\n\t\t\tthis._a2g.dispose();\n\t\t\tthis._a2g = null;\n\t\t\tthis.frequency = null;\n\t\t\tthis.amplitude = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.LFO;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A limiter on the incoming signal. Composed of a Tone.Compressor\n\t\t *         with a fast attack and decay value. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {number} threshold the threshold in decibels\n\t\t *  @example\n\t\t *  var limiter = new Tone.Limiter(-6);\n\t\t */\n\t\tTone.Limiter = function(threshold){\n\n\t\t\t/**\n\t\t\t *  the compressor\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t\t\tthis._compressor = this.input = this.output = new Tone.Compressor({\n\t\t\t\t\"attack\" : 0.0001,\n\t\t\t\t\"decay\" : 0.0001,\n\t\t\t\t\"threshold\" : threshold\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * The threshold of of the limiter\n\t\t\t * @type {AudioParam}\n\t\t\t */\n\t\t\tthis.threshold = this._compressor.threshold;\n\t\t};\n\n\t\tTone.extend(Tone.Limiter);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Limiter} `this`\n\t\t */\n\t\tTone.Limiter.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._compressor.dispose();\n\t\t\tthis._compressor = null;\n\t\t\tthis.threshold = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Limiter;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A lowpass feedback comb filter. \n\t\t *         DelayNode -> Lowpass Filter -> feedback\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {number} [minDelay=0.1] the minimum delay time which the filter can have\n\t\t *  @param {number} [maxDelay=1] the maximum delay time which the filter can have\n\t\t */\n\t\tTone.LowpassCombFilter = function(){\n\n\t\t\tTone.call(this);\n\n\t\t\tvar options = this.optionsObject(arguments, [\"minDelay\", \"maxDelay\"], Tone.LowpassCombFilter.defaults);\n\n\t\t\t//the delay * samplerate = number of samples. \n\t\t\t// buffersize / number of samples = number of delays needed per buffer frame\n\t\t\tvar delayCount = Math.ceil(this.bufferSize / (options.minDelay * this.context.sampleRate));\n\t\t\t//set some ranges\n\t\t\tdelayCount = Math.min(delayCount, 10);\n\t\t\tdelayCount = Math.max(delayCount, 1);\n\n\t\t\t/**\n\t\t\t *  the number of filter delays\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._filterDelayCount = delayCount;\n\n\t\t\t/**\n\t\t\t *  @type {Array.<FilterDelay>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._filterDelays = new Array(this._filterDelayCount);\n\n\t\t\t/**\n\t\t\t *  the dampening control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.dampening = new Tone.Signal(options.dampening, Tone.Signal.Units.Frequency);\n\n\t\t\t/**\n\t\t\t *  the resonance control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.resonance = new Tone.Signal(options.resonance, Tone.Signal.Units.Normal);\n\n\t\t\t/**\n\t\t\t *  scale the resonance value to the normal range\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._resScale = new Tone.ScaleExp(0.01, 1 / this._filterDelayCount - 0.001, 0.5);\n\n\t\t\t/**\n\t\t\t *  internal flag for keeping track of when frequency\n\t\t\t *  correction has been used\n\t\t\t *  @type {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._highFrequencies = false;\n\n\t\t\t/**\n\t\t\t *  internal counter of delayTime\n\t\t\t *  @type {Tone.Time}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._delayTime = options.delayTime;\n\n\t\t\t/**\n\t\t\t *  the feedback node\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._feedback = this.context.createGain();\n\n\t\t\t//make the filters\n\t\t\tfor (var i = 0; i < this._filterDelayCount; i++) {\n\t\t\t\tvar filterDelay = new FilterDelay(options.minDelay, this.dampening);\n\t\t\t\tfilterDelay.connect(this._feedback);\n\t\t\t\tthis._filterDelays[i] = filterDelay;\n\t\t\t}\n\n\t\t\t//connections\n\t\t\tthis.input.connect(this._filterDelays[0]);\n\t\t\tthis._feedback.connect(this._filterDelays[0]);\n\t\t\tthis.connectSeries.apply(this, this._filterDelays);\n\t\t\t//resonance control\n\t\t\tthis.resonance.chain(this._resScale, this._feedback.gain);\n\t\t\tthis._feedback.connect(this.output);\n\t\t\t//set the delay to the min value initially\n\t\t\tthis.delayTime = options.delayTime;\n\t\t};\n\n\t\tTone.extend(Tone.LowpassCombFilter);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.LowpassCombFilter.defaults = {\n\t\t\t\"resonance\" : 0.5,\n\t\t\t\"dampening\" : 3000,\n\t\t\t\"minDelay\" : 0.1,\n\t\t\t\"maxDelay\" : 1,\n\t\t\t\"delayTime\" : 0.1\n\t\t};\n\n\t\t/**\n\t\t * The delay time of the LowpassCombFilter. Auto corrects\n\t\t * for sample offsets for small delay amounts.\n\t\t * @memberOf Tone.LowpassCombFilter#\n\t\t * @type {Tone.Time}\n\t\t * @name delayTime\n\t\t */\n\t\tObject.defineProperty(Tone.LowpassCombFilter.prototype, \"delayTime\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._delayTime;\n\t\t\t},\n\t\t\tset : function(delayAmount){\n\t\t\t\tthis.setDelayTimeAtTime(delayAmount);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * set the delay time for the comb filter at a specific time. \n\t\t * @param {Tone.Time} delayAmount the amount of delay time\n\t\t * @param {Tone.Time} [time=now] when the delay time should be set\n\t\t */\n\t\tTone.LowpassCombFilter.prototype.setDelayTimeAtTime = function(delayAmount, time){\n\t\t\tthis._delayTime = this.toSeconds(delayAmount);\n\t\t\t//the number of samples to delay by\n\t\t\tvar sampleRate = this.context.sampleRate;\n\t\t\tvar delaySamples = sampleRate * this._delayTime;\n\t\t\t// delayTime corection when frequencies get high\n\t\t\ttime = this.toSeconds(time);\n\t\t\tvar cutoff = 100;\n\t\t\tif (delaySamples < cutoff){\n\t\t\t\tthis._highFrequencies = true;\n\t\t\t\tvar changeNumber = Math.round((delaySamples / cutoff) * this._filterDelayCount);\n\t\t\t\tfor (var i = 0; i < changeNumber; i++) {\n\t\t\t\t\tthis._filterDelays[i].setDelay(1 / sampleRate + this._delayTime, time);\n\t\t\t\t}\n\t\t\t\tthis._delayTime = Math.floor(delaySamples) / sampleRate;\n\t\t\t} else if (this._highFrequencies){\n\t\t\t\tthis._highFrequencies = false;\n\t\t\t\tfor (var j = 0; j < this._filterDelays.length; j++) {\n\t\t\t\t\tthis._filterDelays[j].setDelay(this._delayTime, time);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.LowpassCombFilter} `this`\n\t\t */\n\t\tTone.LowpassCombFilter.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\t//dispose the filter delays\n\t\t\tfor (var i = 0; i < this._filterDelays.length; i++) {\n\t\t\t\tthis._filterDelays[i].dispose();\n\t\t\t\tthis._filterDelays[i] = null;\n\t\t\t}\n\t\t\tthis._filterDelays = null;\n\t\t\tthis.dampening.dispose();\n\t\t\tthis.dampening = null;\n\t\t\tthis.resonance.dispose();\n\t\t\tthis.resonance = null;\n\t\t\tthis._resScale.dispose();\n\t\t\tthis._resScale = null;\n\t\t\tthis._feedback.disconnect();\n\t\t\tthis._feedback = null;\n\t\t\treturn this;\n\t\t};\n\n\t\t// BEGIN HELPER CLASS //\n\n\t\t/**\n\t\t *  FilterDelay\n\t\t *  @private\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t\tvar FilterDelay = function(maxDelay, filterFreq){\n\t\t\tthis.delay = this.input = this.context.createDelay(maxDelay);\n\t\t\tthis.delay.delayTime.value = maxDelay;\n\n\t\t\tthis.filter = this.output = this.context.createBiquadFilter();\n\t\t\tfilterFreq.connect(this.filter.frequency);\n\n\t\t\tthis.filter.type = \"lowpass\";\n\t\t\tthis.filter.Q.value = 0;\n\n\t\t\tthis.delay.connect(this.filter);\n\t\t};\n\n\t\tTone.extend(FilterDelay);\n\n\t\tFilterDelay.prototype.setDelay = function(amount, time) {\n\t\t\tthis.delay.delayTime.setValueAtTime(amount, time);\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t */\n\t\tFilterDelay.prototype.dispose = function(){\n\t\t\tthis.delay.disconnect();\n\t\t\tthis.delay = null;\n\t\t\tthis.filter.disconnect();\n\t\t\tthis.filter = null;\n\t\t};\n\n\t\t// END HELPER CLASS //\n\n\t\treturn Tone.LowpassCombFilter;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Merge a left and a right channel into a single stereo channel.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t *  var merge = new Tone.Merge();\n\t\t *  sigLeft.connect(merge.left);\n\t\t *  sigRight.connect(merge.right);\n\t\t */\n\t\tTone.Merge = function(){\n\n\t\t\tTone.call(this, 2, 0);\n\n\t\t\t/**\n\t\t\t *  The left input channel.\n\t\t\t *  Alias for input 0\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.left = this.input[0] = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  The right input channel.\n\t\t\t *  Alias for input 1.\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.right = this.input[1] = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the merger node for the two channels\n\t\t\t *  @type {ChannelMergerNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._merger = this.output = this.context.createChannelMerger(2);\n\n\t\t\t//connections\n\t\t\tthis.left.connect(this._merger, 0, 0);\n\t\t\tthis.right.connect(this._merger, 0, 1);\n\t\t};\n\n\t\tTone.extend(Tone.Merge);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Merge} `this`\n\t\t */\n\t\tTone.Merge.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.left.disconnect();\n\t\t\tthis.left = null;\n\t\t\tthis.right.disconnect();\n\t\t\tthis.right = null;\n\t\t\tthis._merger.disconnect();\n\t\t\tthis._merger = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.Merge;\n\t});\n\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Get the rms of the input signal with some averaging.\n\t\t *          Can also just get the value of the signal\n\t\t *          or the value in dB. inspired by https://github.com/cwilso/volume-meter/blob/master/volume-meter.js<br><br>\n\t\t *          Note that for signal processing, it's better to use {@link Tone.Follower} which will produce\n\t\t *          an audio-rate envelope follower instead of needing to poll the Meter to get the output.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {number} [channels=1] number of channels being metered\n\t\t *  @param {number} [smoothing=0.8] amount of smoothing applied to the volume\n\t\t *  @param {number} [clipMemory=0.5] number in seconds that a \"clip\" should be remembered\n\t\t */\n\t\tTone.Meter = function(channels, smoothing, clipMemory){\n\t\t\t//extends Unit\n\t\t\tTone.call(this);\n\n\t\t\t/** \n\t\t\t *  The channel count\n\t\t\t *  @type  {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._channels = this.defaultArg(channels, 1);\n\n\t\t\t/** \n\t\t\t *  the smoothing value\n\t\t\t *  @type  {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._smoothing = this.defaultArg(smoothing, 0.8);\n\n\t\t\t/** \n\t\t\t *  the amount of time a clip is remember for. \n\t\t\t *  @type  {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._clipMemory = this.defaultArg(clipMemory, 0.5) * 1000;\n\n\t\t\t/** \n\t\t\t *  the rms for each of the channels\n\t\t\t *  @private\n\t\t\t *  @type {Array<number>}\n\t\t\t */\n\t\t\tthis._volume = new Array(this._channels);\n\n\t\t\t/** \n\t\t\t *  the raw values for each of the channels\n\t\t\t *  @private\n\t\t\t *  @type {Array<number>}\n\t\t\t */\n\t\t\tthis._values = new Array(this._channels);\n\n\t\t\t//zero out the volume array\n\t\t\tfor (var i = 0; i < this._channels; i++){\n\t\t\t\tthis._volume[i] = 0;\n\t\t\t\tthis._values[i] = 0;\n\t\t\t}\n\n\t\t\t/** \n\t\t\t *  last time the values clipped\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis._lastClip = 0;\n\t\t\t\n\t\t\t/** \n\t\t\t *  @private\n\t\t\t *  @type {ScriptProcessorNode}\n\t\t\t */\n\t\t\tthis._jsNode = this.context.createScriptProcessor(this.bufferSize, this._channels, 1);\n\t\t\tthis._jsNode.onaudioprocess = this._onprocess.bind(this);\n\t\t\t//so it doesn't get garbage collected\n\t\t\tthis._jsNode.noGC();\n\n\t\t\t//signal just passes\n\t\t\tthis.input.connect(this.output);\n\t\t\tthis.input.connect(this._jsNode);\n\t\t};\n\n\t\tTone.extend(Tone.Meter);\n\n\t\t/**\n\t\t *  called on each processing frame\n\t\t *  @private\n\t\t *  @param  {AudioProcessingEvent} event \n\t\t */\n\t\tTone.Meter.prototype._onprocess = function(event){\n\t\t\tvar bufferSize = this._jsNode.bufferSize;\n\t\t\tvar smoothing = this._smoothing;\n\t\t\tfor (var channel = 0; channel < this._channels; channel++){\n\t\t\t\tvar input = event.inputBuffer.getChannelData(channel);\n\t\t\t\tvar sum = 0;\n\t\t\t\tvar total = 0;\n\t\t\t\tvar x;\n\t\t\t\tvar clipped = false;\n\t\t\t\tfor (var i = 0; i < bufferSize; i++){\n\t\t\t\t\tx = input[i];\n\t\t\t\t\tif (!clipped && x > 0.95){\n\t\t\t\t\t\tclipped = true;\n\t\t\t\t\t\tthis._lastClip = Date.now();\n\t\t\t\t\t}\n\t\t\t\t\ttotal += x;\n\t\t\t    \tsum += x * x;\n\t\t\t\t}\n\t\t\t\tvar average = total / bufferSize;\n\t\t\t\tvar rms = Math.sqrt(sum / bufferSize);\n\t\t\t\tthis._volume[channel] = Math.max(rms, this._volume[channel] * smoothing);\n\t\t\t\tthis._values[channel] = average;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  get the rms of the signal\n\t\t *  \t\n\t\t *  @param  {number} [channel=0] which channel\n\t\t *  @return {number}         the value\n\t\t */\n\t\tTone.Meter.prototype.getLevel = function(channel){\n\t\t\tchannel = this.defaultArg(channel, 0);\n\t\t\tvar vol = this._volume[channel];\n\t\t\tif (vol < 0.00001){\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn vol;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  get the value of the signal\n\t\t *  @param  {number=} channel \n\t\t *  @return {number}         \n\t\t */\n\t\tTone.Meter.prototype.getValue = function(channel){\n\t\t\tchannel = this.defaultArg(channel, 0);\n\t\t\treturn this._values[channel];\n\t\t};\n\n\t\t/**\n\t\t *  get the volume of the signal in dB\n\t\t *  @param  {number=} channel \n\t\t *  @return {number}         \n\t\t */\n\t\tTone.Meter.prototype.getDb = function(channel){\n\t\t\treturn this.gainToDb(this.getLevel(channel));\n\t\t};\n\n\t\t/**\n\t\t * @returns {boolean} if the audio has clipped in the last 500ms\n\t\t */\n\t\tTone.Meter.prototype.isClipped = function(){\n\t\t\treturn Date.now() - this._lastClip < this._clipMemory;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Meter} `this`\n\t\t */\n\t\tTone.Meter.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._jsNode.disconnect();\n\t\t\tthis._jsNode.onaudioprocess = null;\n\t\t\tthis._volume = null;\n\t\t\tthis._values = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Meter;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Coerces the incoming mono or stereo signal into a stereo signal\n\t\t *         where both left and right channels have the same value. \n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t */\n\t\tTone.Mono = function(){\n\t\t\tTone.call(this, 1, 0);\n\n\t\t\t/**\n\t\t\t *  merge the signal\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._merge = this.output = new Tone.Merge();\n\n\t\t\tthis.input.connect(this._merge, 0, 0);\n\t\t\tthis.input.connect(this._merge, 0, 1);\n\t\t\tthis.input.gain.value = this.dbToGain(-10);\n\t\t};\n\n\t\tTone.extend(Tone.Mono);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Mono} `this`\n\t\t */\n\t\tTone.Mono.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._merge.dispose();\n\t\t\tthis._merge = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Mono;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A compressor with seperate controls over low/mid/high dynamics\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @param {Object} options the low/mid/high compressor settings in a single object\n\t\t *  @example\n\t\t *  var multiband = new Tone.MultibandCompressor({\n\t\t *  \t\"lowFrequency\" : 200,\n\t\t *  \t\"highFrequency\" : 1300\n\t\t *  \t\"low\" : {\n\t\t *  \t\t\"threshold\" : -12\n\t\t *  \t}\n\t\t *  })\n\t\t */\n\t\tTone.MultibandCompressor = function(options){\n\n\t\t\toptions = this.defaultArg(arguments, Tone.MultibandCompressor.defaults);\n\n\t\t\t/**\n\t\t\t *  split the incoming signal into high/mid/low\n\t\t\t *  @type {Tone.MultibandSplit}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._splitter = this.input = new Tone.MultibandSplit({\n\t\t\t\t\"lowFrequency\" : options.lowFrequency,\n\t\t\t\t\"highFrequency\" : options.highFrequency\n\t\t\t});\n\n\t\t\t/**\n\t\t\t *  low/mid crossover frequency\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.lowFrequency = this._splitter.lowFrequency;\n\n\t\t\t/**\n\t\t\t *  mid/high crossover frequency\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.highFrequency = this._splitter.highFrequency;\n\n\t\t\t/**\n\t\t\t *  the output\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.output = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the low compressor\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t\t\tthis.low = new Tone.Compressor(options.low);\n\n\t\t\t/**\n\t\t\t *  the mid compressor\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t\t\tthis.mid = new Tone.Compressor(options.mid);\n\n\t\t\t/**\n\t\t\t *  the high compressor\n\t\t\t *  @type {Tone.Compressor}\n\t\t\t */\n\t\t\tthis.high = new Tone.Compressor(options.high);\n\n\t\t\t//connect the compressor\n\t\t\tthis._splitter.low.chain(this.low, this.output);\n\t\t\tthis._splitter.mid.chain(this.mid, this.output);\n\t\t\tthis._splitter.high.chain(this.high, this.output);\n\t\t};\n\n\t\tTone.extend(Tone.MultibandCompressor);\n\n\t\t/**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.MultibandCompressor.defaults = {\n\t\t\t\"low\" : Tone.Compressor.defaults,\n\t\t\t\"mid\" : Tone.Compressor.defaults,\n\t\t\t\"high\" : Tone.Compressor.defaults,\n\t\t\t\"lowFrequency\" : 250,\n\t\t\t\"highFrequency\" : 2000\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.MultibandCompressor} `this`\n\t\t */\n\t\tTone.MultibandCompressor.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._splitter.dispose();\n\t\t\tthis.low.dispose();\n\t\t\tthis.mid.dispose();\n\t\t\tthis.high.dispose();\n\t\t\tthis._splitter = null;\n\t\t\tthis.low = null;\n\t\t\tthis.mid = null;\n\t\t\tthis.high = null;\n\t\t\tthis.lowFrequency = null;\n\t\t\tthis.highFrequency = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.MultibandCompressor;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *\t@class  Split the incoming signal into left and right channels\n\t\t *\t\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @example\n\t\t *  var split = new Tone.Split();\n\t\t *  stereoSignal.connect(split);\n\t\t */\n\t\tTone.Split = function(){\n\n\t\t\tTone.call(this, 1, 2);\n\n\t\t\t/** \n\t\t\t *  @type {ChannelSplitterNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._splitter = this.context.createChannelSplitter(2);\n\n\t\t\t/** \n\t\t\t *  left channel output\n\t\t\t *  alais for the first output\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.left = this.output[0] = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the right channel output\n\t\t\t *  alais for the second output\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.right = this.output[1] = this.context.createGain();\n\t\t\t\n\t\t\t//connections\n\t\t\tthis.input.connect(this._splitter);\n\t\t\tthis._splitter.connect(this.left, 0, 0);\n\t\t\tthis._splitter.connect(this.right, 1, 0);\n\t\t};\n\n\t\tTone.extend(Tone.Split);\n\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Split} `this`\n\t\t */\n\t\tTone.Split.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._splitter.disconnect();\n\t\t\tthis.left.disconnect();\n\t\t\tthis.right.disconnect();\n\t\t\tthis.left = null;\n\t\t\tthis.right = null;\n\t\t\tthis._splitter = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.Split;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  Panner. \n\t\t *  \n\t\t *  @class  Equal Power Gain L/R Panner. Not 3D. \n\t\t *          0 = 100% Left\n\t\t *          1 = 100% Right\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {number} [initialPan=0.5] the initail panner value (defaults to 0.5 = center)\n\t\t *  @example\n\t\t *  var panner = new Tone.Panner(1);\n\t\t *  // ^ pan the input signal hard right. \n\t\t */\n\t\tTone.Panner = function(initialPan){\n\n\t\t\tTone.call(this, 1, 0);\n\t\t\t\n\t\t\t/**\n\t\t\t *  the dry/wet knob\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._crossFade = new Tone.CrossFade();\n\t\t\t\n\t\t\t/**\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._merger = this.output = new Tone.Merge();\n\t\t\t\n\t\t\t/**\n\t\t\t *  @type {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._splitter = new Tone.Split();\n\t\t\t\n\t\t\t/**\n\t\t\t *  the pan control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\t\n\t\t\tthis.pan = this._crossFade.fade;\n\n\t\t\t//CONNECTIONS:\n\t\t\tthis.input.connect(this._splitter.left);\n\t\t\tthis.input.connect(this._splitter.right);\n\t\t\t//left channel is dry, right channel is wet\n\t\t\tthis._splitter.connect(this._crossFade, 0, 0);\n\t\t\tthis._splitter.connect(this._crossFade, 1, 1);\n\t\t\t//merge it back together\n\t\t\tthis._crossFade.a.connect(this._merger.left);\n\t\t\tthis._crossFade.b.connect(this._merger.right);\n\n\t\t\t//initial value\n\t\t\tthis.pan.value = this.defaultArg(initialPan, 0.5);\n\t\t};\n\n\t\tTone.extend(Tone.Panner);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Panner} `this`\n\t\t */\n\t\tTone.Panner.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._crossFade.dispose();\n\t\t\tthis._crossFade = null;\n\t\t\tthis._splitter.dispose();\n\t\t\tthis._splitter = null;\n\t\t\tthis._merger.dispose();\n\t\t\tthis._merger = null;\n\t\t\tthis.pan = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Panner;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A Panner and volume in one.\n\t\t *\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var panVol = new Tone.PanVol(0.25, -12);\n\t\t */\n\t\tTone.PanVol = function(pan, volume){\n\t\t\t/**\n\t\t\t *  the panning node\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._panner = this.input = new Tone.Panner(pan);\n\n\t\t\t/**\n\t\t\t * the output node\n\t\t\t * @type {GainNode}\n\t\t\t */\n\t\t\tthis.output = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  The volume control in decibels. \n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.volume = new Tone.Signal(this.output.gain, Tone.Signal.Units.Decibels);\n\t\t\tthis.volume.value = this.defaultArg(volume, 0);\n\n\t\t\t/**\n\t\t\t *  the panning control\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.pan = this._panner.pan;\n\n\t\t\t//connections\n\t\t\tthis._panner.connect(this.output);\n\t\t};\n\n\t\tTone.extend(Tone.PanVol);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.PanVol} `this`\n\t\t */\n\t\tTone.PanVol.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._panner.dispose();\n\t\t\tthis._panner = null;\n\t\t\tthis.volume.dispose();\n\t\t\tthis.volume = null;\n\t\t\tthis.pan = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.PanVol;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @deprecated\n\t\t *  @class  Record an input into an array or AudioBuffer. \n\t\t *          it is limited in that the recording length needs to be known beforehand. \n\t\t *          Mostly used internally for testing. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {number} channels \n\t\t */\n\t\tTone.Recorder = function(channels){\n\n\t\t\tconsole.warn(\"Tone.Recorder is deprecated. It will be removed in next version\");\n\n\t\t\tTone.call(this);\n\n\t\t\t/**\n\t\t\t *  the number of channels in the recording\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis.channels = this.defaultArg(channels, 1);\n\n\t\t\t/**\n\t\t\t *  @private\n\t\t\t *  @type {ScriptProcessorNode}\n\t\t\t */\n\t\t\tthis._jsNode = this.context.createScriptProcessor(this.bufferSize, this.channels, 1);\n\t\t\tthis._jsNode.onaudioprocess = this._audioprocess.bind(this);\n\n\t\t\t/**\n\t\t\t *  Float32Array for each channel\n\t\t\t *  @private\n\t\t\t *  @type {Array<Float32Array>}\n\t\t\t */\n\t\t\tthis._recordBuffers = new Array(this.channels);\n\n\t\t\t/**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._recordStartSample = 0;\n\n\t\t\t/**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._recordEndSample = 0;\n\n\t\t\t/**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._recordDuration = 0;\n\n\t\t\t/**\n\t\t\t *  @type {RecordState}\n\t\t\t */\n\t\t\tthis.state = RecordState.STOPPED;\n\n\t\t\t/** \n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis._recordBufferOffset = 0;\n\n\t\t\t/** \n\t\t\t *  callback invoked when the recording is over\n\t\t\t *  @private\n\t\t\t *  @type {function(Float32Array)}\n\t\t\t */\n\t\t\tthis._callback = function(){};\n\n\t\t\t//connect it up\n\t\t\tthis.input.connect(this._jsNode);\n\t\t\t//pass thru audio\n\t\t\tthis.input.connect(this.output);\n\t\t\t//so it doesn't get garbage collected\n\t\t\tthis._jsNode.noGC();\n\t\t\t//clear it to start\n\t\t\tthis.clear();\n\t\t};\n\n\t\tTone.extend(Tone.Recorder);\n\n\t\t/**\n\t\t *  internal method called on audio process\n\t\t *  \n\t\t *  @private\n\t\t *  @param   {AudioProcessorEvent} event \n\t\t */\n\t\tTone.Recorder.prototype._audioprocess = function(event){\n\t\t\tif (this.state === RecordState.STOPPED){\n\t\t\t\treturn;\n\t\t\t} else if (this.state === RecordState.RECORDING){\n\t\t\t\t//check if it's time yet\n\t\t\t\tvar now = this.defaultArg(event.playbackTime, this.now());\n\t\t\t\tvar processPeriodStart = this.toSamples(now);\n\t\t\t\tvar bufferSize = this._jsNode.bufferSize;\n\t\t\t\tvar processPeriodEnd = processPeriodStart + bufferSize;\n\t\t\t\tvar bufferOffset, len;\n\t\t\t\tif (processPeriodStart > this._recordEndSample){\n\t\t\t\t\tthis.state = RecordState.STOPPED;\n\t\t\t\t\tthis._callback(this._recordBuffers);\n\t\t\t\t} else if (processPeriodStart > this._recordStartSample) {\n\t\t\t\t\tbufferOffset = 0;\n\t\t\t\t\tlen = Math.min(this._recordEndSample - processPeriodStart, bufferSize);\n\t\t\t\t\tthis._recordChannels(event.inputBuffer, bufferOffset, len, bufferSize);\n\t\t\t\t} else if (processPeriodEnd > this._recordStartSample) {\n\t\t\t\t\tlen = processPeriodEnd - this._recordStartSample;\n\t\t\t\t\tbufferOffset = bufferSize - len;\n\t\t\t\t\tthis._recordChannels(event.inputBuffer, bufferOffset, len, bufferSize);\n\t\t\t\t} \n\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  record an input channel\n\t\t *  @param   {AudioBuffer} inputBuffer        \n\t\t *  @param   {number} from  \n\t\t *  @param   {number} to  \n\t\t *  @private\n\t\t */\n\t\tTone.Recorder.prototype._recordChannels = function(inputBuffer, from, to, bufferSize){\n\t\t\tvar offset = this._recordBufferOffset;\n\t\t\tvar buffers = this._recordBuffers;\n\t\t\tfor (var channelNum = 0; channelNum < inputBuffer.numberOfChannels; channelNum++){\n\t\t\t\tvar channel = inputBuffer.getChannelData(channelNum);\n\t\t\t\tif ((from === 0) && (to === bufferSize)){\n\t\t\t\t\t//set the whole thing\n\t\t\t\t\tthis._recordBuffers[channelNum].set(channel, offset);\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = from; i < from + to; i++){\n\t\t\t\t\t\tvar zeroed = i - from; \n\t\t\t\t\t\tbuffers[channelNum][zeroed + offset] = channel[i];\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._recordBufferOffset += to;\n\t\t};\t\n\n\t\t/**\n\t\t *  Record for a certain period of time\n\t\t *  \n\t\t *  will clear the internal buffer before starting\n\t\t *  \n\t\t *  @param  {Tone.Time} duration \n\t\t *  @param  {Tone.Time} wait the wait time before recording\n\t\t *  @param {function(Float32Array)} callback the callback to be invoked when the buffer is done recording\n\t\t *  @returns {Tone.Recorder} `this`\n\t\t */\n\t\tTone.Recorder.prototype.record = function(duration, startTime, callback){\n\t\t\tif (this.state === RecordState.STOPPED){\n\t\t\t\tthis.clear();\n\t\t\t\tthis._recordBufferOffset = 0;\n\t\t\t\tstartTime = this.defaultArg(startTime, 0);\n\t\t\t\tthis._recordDuration = this.toSamples(duration);\n\t\t\t\tthis._recordStartSample = this.toSamples(\"+\"+startTime);\n\t\t\t\tthis._recordEndSample = this._recordStartSample + this._recordDuration;\n\t\t\t\tfor (var i = 0; i < this.channels; i++){\n\t\t\t\t\tthis._recordBuffers[i] = new Float32Array(this._recordDuration);\n\t\t\t\t}\n\t\t\t\tthis.state = RecordState.RECORDING;\n\t\t\t\tthis._callback = this.defaultArg(callback, function(){});\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  clears the recording buffer\n\t\t *  @returns {Tone.PanVol} `this`\n\t\t */\n\t\tTone.Recorder.prototype.clear = function(){\n\t\t\tfor (var i = 0; i < this.channels; i++){\n\t\t\t\tthis._recordBuffers[i] = null;\n\t\t\t}\n\t\t\tthis._recordBufferOffset = 0;\n\t\t\treturn this;\n\t\t};\n\n\n\t\t/**\n\t\t *  true if there is nothing in the buffers\n\t\t *  @return {boolean} \n\t\t */\n\t\tTone.Recorder.prototype.isEmpty = function(){\n\t\t\treturn this._recordBuffers[0] === null;\n\t\t};\n\n\t\t/**\n\t\t *  @return {Array<Float32Array>}\n\t\t */\n\t\tTone.Recorder.prototype.getFloat32Array = function(){\n\t\t\tif (this.isEmpty()){\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn this._recordBuffers;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  @return {AudioBuffer}\n\t\t */\n\t\tTone.Recorder.prototype.getAudioBuffer = function(){\n\t\t\tif (this.isEmpty()){\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tvar audioBuffer = this.context.createBuffer(this.channels, this._recordBuffers[0].length, this.context.sampleRate);\n\t\t\t\tfor (var channelNum = 0; channelNum < audioBuffer.numberOfChannels; channelNum++){\n\t\t\t\t\tvar channel = audioBuffer.getChannelData(channelNum);\n\t\t\t\t\tchannel.set(this._recordBuffers[channelNum]);\n\t\t\t\t}\n\t\t\t\treturn audioBuffer;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.PanVol} `this`\n\t\t */\n\t\tTone.Recorder.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._jsNode.disconnect();\n\t\t\tthis._jsNode.onaudioprocess = undefined;\n\t\t\tthis._jsNode = null;\n\t\t\tthis._recordBuffers = null;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  @enum {string}\n\t\t */\n\t\tvar RecordState = {\n\t\t\tSTOPPED : \"stopped\",\n\t\t\tSCHEDULED : \"scheduled\",\n\t\t\tRECORDING : \"recording\"\n\t\t};\n\n\t\treturn Tone.Recorder;\n\t});\n\tToneModule( \n\t\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class An envelope which can be scaled to any range. \n\t\t *         Useful for applying an envelope to a filter\n\t\t *\n\t\t *  @extends {Tone.Envelope}\n\t\t *  @constructor\n\t\t *  @param {Tone.Time|Object} [attack=0.01]\tthe attack time in seconds\n\t\t *  @param {Tone.Time} [decay=0.1]\tthe decay time in seconds\n\t\t *  @param {number} [sustain=0.5] \ta percentage (0-1) of the full amplitude\n\t\t *  @param {Tone.Time} [release=1]\tthe release time in seconds\n\t\t *  @example\n\t\t *  var scaledEnv = new Tone.ScaledEnvelope({\n\t\t *  \t\"attack\" : 0.2,\n\t\t *  \t\"min\" : 200,\n\t\t *  \t\"max\" : 2000\n\t\t *  });\n\t\t *  scaledEnv.connect(oscillator.frequency);\n\t\t */\n\t\tTone.ScaledEnvelope = function(){\n\n\t\t\t//get all of the defaults\n\t\t\tvar options = this.optionsObject(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope.defaults);\n\t\t\tTone.Envelope.call(this, options);\n\t\t\toptions = this.defaultArg(options, Tone.ScaledEnvelope.defaults);\n\n\t\t\t/** \n\t\t\t *  scale the incoming signal by an exponent\n\t\t\t *  @type {Tone.Pow}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._exp = this.output = new Tone.Pow(options.exponent);\n\n\t\t\t/**\n\t\t\t *  scale the signal to the desired range\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._scale = this.output = new Tone.Scale(options.min, options.max);\n\n\t\t\tthis._sig.chain(this._exp, this._scale);\n\t\t};\n\n\t\tTone.extend(Tone.ScaledEnvelope, Tone.Envelope);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t\tTone.ScaledEnvelope.defaults = {\n\t\t\t\"min\" : 0,\n\t\t\t\"max\" : 1,\n\t\t\t\"exponent\" : 1\n\t\t};\n\n\t\t/**\n\t\t * The envelope's min output value. This is the value which it\n\t\t * starts at. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t\tObject.defineProperty(Tone.ScaledEnvelope.prototype, \"min\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._scale.min;\n\t\t\t},\n\t\t\tset : function(min){\n\t\t\t\tthis._scale.min = min;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The envelope's max output value. In other words, the value\n\t\t * at the peak of the attack portion of the envelope. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t\tObject.defineProperty(Tone.ScaledEnvelope.prototype, \"max\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._scale.max;\n\t\t\t},\n\t\t\tset : function(max){\n\t\t\t\tthis._scale.max = max;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The envelope's exponent value. \n\t\t * @memberOf Tone.ScaledEnvelope#\n\t\t * @type {number}\n\t\t * @name exponent\n\t\t */\n\t\tObject.defineProperty(Tone.ScaledEnvelope.prototype, \"exponent\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._exp.value;\n\t\t\t},\n\t\t\tset : function(exp){\n\t\t\t\tthis._exp.value = exp;\n\t\t\t}\n\t\t});\n\t\t\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.ScaledEnvelope} `this`\n\t\t */\n\t\tTone.ScaledEnvelope.prototype.dispose = function(){\n\t\t\tTone.Envelope.prototype.dispose.call(this);\n\t\t\tthis._scale.dispose();\n\t\t\tthis._scale = null;\n\t\t\tthis._exp.dispose();\n\t\t\tthis._exp = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.ScaledEnvelope;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all \n\t\t *          classes that make requests for audio files such as {@link Tone.Player},\n\t\t *          {@link Tone.Sampler} and {@link Tone.Convolver} .\n\t\t *          <br><br>Aside from load callbacks from individual buffers, Tone.Buffer \n\t\t *  \t\tprovides static methods which keep track of the loading progress \n\t\t *  \t\tof all of the buffers. These methods are `onload`, `onprogress`,\n\t\t *  \t\tand `onerror`. \n\t\t *\n\t\t *  @constructor \n\t\t *  @param {AudioBuffer|string} url the url to load, or the audio buffer to set\n\t\t */\n\t\tTone.Buffer = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"url\", \"onload\"], Tone.Buffer.defaults);\n\n\t\t\t/**\n\t\t\t *  stores the loaded AudioBuffer\n\t\t\t *  @type {AudioBuffer}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._buffer = null;\n\n\t\t\t/**\n\t\t\t *  the url of the buffer. `undefined` if it was \n\t\t\t *  constructed with a buffer\n\t\t\t *  @type {string}\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t\tthis.url = undefined;\n\n\t\t\t/**\n\t\t\t *  indicates if the buffer is loaded or not\n\t\t\t *  @type {boolean}\n\t\t\t *  @readOnly\n\t\t\t */\n\t\t\tthis.loaded = false;\n\n\t\t\t/**\n\t\t\t *  the callback to invoke when everything is loaded\n\t\t\t *  @type {function}\n\t\t\t */\n\t\t\tthis.onload = options.onload.bind(this, this);\n\n\t\t\tif (options.url instanceof AudioBuffer){\n\t\t\t\tthis._buffer.set(options.url);\n\t\t\t\tthis.onload(this);\n\t\t\t} else if (typeof options.url === \"string\"){\n\t\t\t\tthis.url = options.url;\n\t\t\t\tTone.Buffer._addToQueue(options.url, this);\n\t\t\t}\n\t\t};\n\n\t\tTone.extend(Tone.Buffer);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Buffer.defaults = {\n\t\t\t\"url\" : undefined,\n\t\t\t\"onload\" : function(){},\n\t\t};\n\n\t\t/**\n\t\t *  set the buffer\n\t\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t\t *  @returns {Tone.Buffer} `this`\n\t\t */\n\t\tTone.Buffer.prototype.set = function(buffer){\n\t\t\tif (buffer instanceof Tone.Buffer){\n\t\t\t\tthis._buffer = buffer.get();\n\t\t\t} else {\n\t\t\t\tthis._buffer = buffer;\n\t\t\t}\n\t\t\tthis.loaded = true;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  @return {AudioBuffer} the audio buffer\n\t\t */\n\t\tTone.Buffer.prototype.get = function(){\n\t\t\treturn this._buffer;\n\t\t};\n\n\t\t/**\n\t\t *  @param {string} url the url to load\n\t\t *  @param {function=} callback the callback to invoke on load. \n\t\t *                              don't need to set if `onload` is\n\t\t *                              already set.\n\t\t *  @returns {Tone.Buffer} `this`\n\t\t */\n\t\tTone.Buffer.prototype.load = function(url, callback){\n\t\t\tthis.url = url;\n\t\t\tthis.onload = this.defaultArg(callback, this.onload);\n\t\t\tTone.Buffer._addToQueue(url, this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Buffer} `this`\n\t\t */\n\t\tTone.Buffer.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tTone.Buffer._removeFromQueue(this);\n\t\t\tthis._buffer = null;\n\t\t\tthis.onload = null;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * the duration of the buffer\n\t\t * @memberOf Tone.Buffer#\n\t\t * @type {number}\n\t\t * @name duration\n\t\t * @readOnly\n\t\t */\n\t\tObject.defineProperty(Tone.Buffer.prototype, \"duration\", {\n\t\t\tget : function(){\n\t\t\t\tif (this._buffer){\n\t\t\t\t\treturn this._buffer.duration;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t// STATIC METHODS\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t \n\t\t/**\n\t\t *  the static queue for all of the xhr requests\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tTone.Buffer._queue = [];\n\n\t\t/**\n\t\t *  the array of current downloads\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tTone.Buffer._currentDownloads = [];\n\n\t\t/**\n\t\t *  the total number of downloads\n\t\t *  @type {number}\n\t\t *  @private\n\t\t */\n\t\tTone.Buffer._totalDownloads = 0;\n\n\t\t/**\n\t\t *  the maximum number of simultaneous downloads\n\t\t *  @static\n\t\t *  @type {number}\n\t\t */\n\t\tTone.Buffer.MAX_SIMULTANEOUS_DOWNLOADS = 6;\n\t\t\n\t\t/**\n\t\t *  Adds a file to be loaded to the loading queue\n\t\t *  @param   {string}   url      the url to load\n\t\t *  @param   {function} callback the callback to invoke once it's loaded\n\t\t *  @private\n\t\t */\n\t\tTone.Buffer._addToQueue = function(url, buffer){\n\t\t\tTone.Buffer._queue.push({\n\t\t\t\turl : url,\n\t\t\t\tBuffer : buffer,\n\t\t\t\tprogress : 0,\n\t\t\t\txhr : null\n\t\t\t});\n\t\t\tthis._totalDownloads++;\n\t\t\tTone.Buffer._next();\n\t\t};\n\n\t\t/**\n\t\t *  Remove an object from the queue's (if it's still there)\n\t\t *  Abort the XHR if it's in progress\n\t\t *  @param {Tone.Buffer} buffer the buffer to remove\n\t\t *  @private\n\t\t */\n\t\tTone.Buffer._removeFromQueue = function(buffer){\n\t\t\tvar i;\n\t\t\tfor (i = 0; i < Tone.Buffer._queue.length; i++){\n\t\t\t\tvar q = Tone.Buffer._queue[i];\n\t\t\t\tif (q.Buffer === buffer){\n\t\t\t\t\tTone.Buffer._queue.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; i < Tone.Buffer._currentDownloads.length; i++){\n\t\t\t\tvar dl = Tone.Buffer._currentDownloads[i];\n\t\t\t\tif (dl.Buffer === buffer){\n\t\t\t\t\tTone.Buffer._currentDownloads.splice(i, 1);\n\t\t\t\t\tdl.xhr.abort();\n\t\t\t\t\tdl.xhr.onprogress = null;\n\t\t\t\t\tdl.xhr.onload = null;\n\t\t\t\t\tdl.xhr.onerror = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  load the next buffer in the queue\n\t\t *  @private\n\t\t */\n\t\tTone.Buffer._next = function(){\n\t\t\tif (Tone.Buffer._queue.length > 0){\n\t\t\t\tif (Tone.Buffer._currentDownloads.length < Tone.Buffer.MAX_SIMULTANEOUS_DOWNLOADS){\n\t\t\t\t\tvar next = Tone.Buffer._queue.shift();\n\t\t\t\t\tTone.Buffer._currentDownloads.push(next);\n\t\t\t\t\tnext.xhr = Tone.Buffer.load(next.url, function(buffer){\n\t\t\t\t\t\t//remove this one from the queue\n\t\t\t\t\t\tvar index = Tone.Buffer._currentDownloads.indexOf(next);\n\t\t\t\t\t\tTone.Buffer._currentDownloads.splice(index, 1);\n\t\t\t\t\t\tnext.Buffer.set(buffer);\n\t\t\t\t\t\tnext.Buffer.onload(next.Buffer);\n\t\t\t\t\t\tTone.Buffer._onprogress();\n\t\t\t\t\t\tTone.Buffer._next();\n\t\t\t\t\t});\n\t\t\t\t\tnext.xhr.onprogress = function(event){\n\t\t\t\t\t\tnext.progress = event.loaded / event.total;\n\t\t\t\t\t\tTone.Buffer._onprogress();\n\t\t\t\t\t};\n\t\t\t\t\tnext.xhr.onerror = Tone.Buffer.onerror;\n\t\t\t\t} \n\t\t\t} else if (Tone.Buffer._currentDownloads.length === 0){\n\t\t\t\tTone.Buffer.onload();\n\t\t\t\t//reset the downloads\n\t\t\t\tTone.Buffer._totalDownloads = 0;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  internal progress event handler\n\t\t *  @private\n\t\t */\n\t\tTone.Buffer._onprogress = function(){\n\t\t\tvar curretDownloadsProgress = 0;\n\t\t\tvar currentDLLen = Tone.Buffer._currentDownloads.length;\n\t\t\tvar inprogress = 0;\n\t\t\tif (currentDLLen > 0){\n\t\t\t\tfor (var i = 0; i < currentDLLen; i++){\n\t\t\t\t\tvar dl = Tone.Buffer._currentDownloads[i];\n\t\t\t\t\tcurretDownloadsProgress += dl.progress;\n\t\t\t\t}\n\t\t\t\tinprogress = curretDownloadsProgress;\n\t\t\t}\n\t\t\tvar currentDownloadProgress = currentDLLen - inprogress;\n\t\t\tvar completed = Tone.Buffer._totalDownloads - Tone.Buffer._queue.length - currentDownloadProgress;\n\t\t\tTone.Buffer.onprogress(completed / Tone.Buffer._totalDownloads);\n\t\t};\n\n\t\t/**\n\t\t *  makes an xhr reqest for the selected url\n\t\t *  Load the audio file as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {string} url the url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @param {function} callback function\n\t\t *  @returns {XMLHttpRequest} returns the XHR\n\t\t */\n\t\tTone.Buffer.load = function(url, callback){\n\t\t\tvar request = new XMLHttpRequest();\n\t\t\trequest.open(\"GET\", url, true);\n\t\t\trequest.responseType = \"arraybuffer\";\n\t\t\t// decode asynchronously\n\t\t\trequest.onload = function() {\n\t\t\t\tTone.context.decodeAudioData(request.response, function(buff) {\n\t\t\t\t\tif(!buff){\n\t\t\t\t\t\tthrow new Error(\"could not decode audio data:\" + url);\n\t\t\t\t\t}\n\t\t\t\t\tcallback(buff);\n\t\t\t\t});\n\t\t\t};\n\t\t\t//send the request\n\t\t\trequest.send();\n\t\t\treturn request;\n\t\t};\n\n\t\t/**\n\t\t *  callback when all of the buffers in the queue have loaded\n\t\t *  @static\n\t\t *  @type {function}\n\t\t *  @example\n\t\t * //invoked when all of the queued samples are done loading\n\t\t * Tone.Buffer.onload = function(){\n\t\t * \tconsole.log(\"everything is loaded\");\n\t\t * };\n\t\t */\n\t\tTone.Buffer.onload = function(){};\n\n\t\t/**\n\t\t *  Callback function is invoked with the progress of all of the loads in the queue. \n\t\t *  The value passed to the callback is between 0-1.\n\t\t *  @static\n\t\t *  @type {function}\n\t\t *  @example\n\t\t * Tone.Buffer.onprogress = function(percent){\n\t\t * \tconsole.log(\"progress:\" + (percent * 100).toFixed(1) + \"%\");\n\t\t * };\n\t\t */\n\t\tTone.Buffer.onprogress = function(){};\n\n\t\t/**\n\t\t *  Callback if one of the buffers in the queue encounters an error. The error\n\t\t *  is passed in as the argument. \n\t\t *  @static\n\t\t *  @type {function}\n\t\t *  @example\n\t\t * Tone.Buffer.onerror = function(e){\n\t\t * \tconsole.log(\"there was an error while loading the buffers: \"+e);\n\t\t * }\n\t\t */\n\t\tTone.Buffer.onerror = function(){};\n\n\t\treturn Tone.Buffer;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  buses are another way of routing audio\n\t\t *\n\t\t *  augments Tone.prototype to include send and recieve\n\t\t */\n\n\t\t /**\n\t\t  *  All of the routes\n\t\t  *  \n\t\t  *  @type {Object}\n\t\t  *  @static\n\t\t  *  @private\n\t\t  */\n\t\tvar Buses = {};\n\n\t\t/**\n\t\t *  send signal to a channel name\n\t\t *  defined in \"Tone/core/Bus\"\n\t\t *\n\t\t *  @param  {string} channelName \n\t\t *  @param  {number} amount      \n\t\t *  @return {GainNode}             \n\t\t */\n\t\tTone.prototype.send = function(channelName, amount){\n\t\t\tif (!Buses.hasOwnProperty(channelName)){\n\t\t\t\tBuses[channelName] = this.context.createGain();\n\t\t\t}\n\t\t\tvar sendKnob = this.context.createGain();\n\t\t\tsendKnob.gain.value = this.defaultArg(amount, 1);\n\t\t\tthis.output.chain(sendKnob, Buses[channelName]);\n\t\t\treturn sendKnob;\t\t\n\t\t};\n\n\t\t/**\n\t\t *  recieve the input from the desired channelName to the input\n\t\t *  defined in \"Tone/core/Bus\"\n\t\t *\n\t\t *  @param  {string} channelName \n\t\t *  @param {AudioNode} [input=this.input] if no input is selected, the\n\t\t *                                         input of the current node is\n\t\t *                                         chosen. \n\t\t *  @returns {Tone} `this`\n\t\t */\n\t\tTone.prototype.receive = function(channelName, input){\n\t\t\tif (!Buses.hasOwnProperty(channelName)){\n\t\t\t\tBuses[channelName] = this.context.createGain();\t\n\t\t\t}\n\t\t\tif (this.isUndef(input)){\n\t\t\t\tinput = this.input;\n\t\t\t}\n\t\t\tBuses[channelName].connect(input);\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t *  values are converted to frequency instead of seconds. A number\n\t\t *  is taken literally as the value in hertz. Additionally any of the \n\t\t *  {@link Tone.Time} encodings can be used. Note names in the form\n\t\t *  of NOTE OCTAVE (i.e. `C4`) are also accepted and converted to their\n\t\t *  frequency value. \n\t\t *  \n\t\t *  @typedef {number|string|Tone.Time} Tone.Frequency\n\t\t */\n\n\t\t/**\n\t\t *  @class  A timed note. Creating a note will register a callback \n\t\t *          which will be invoked on the channel at the time with\n\t\t *          whatever value was specified. \n\t\t *\n\t\t *  @constructor\n\t\t *  @param {number|string} channel the channel name of the note\n\t\t *  @param {Tone.Time} time the time when the note will occur\n\t\t *  @param {string|number|Object|Array} value the value of the note\n\t\t */\n\t\tTone.Note = function(channel, time, value){\n\n\t\t\t/**\n\t\t\t *  the value of the note. This value is returned\n\t\t\t *  when the channel callback is invoked.\n\t\t\t *  \n\t\t\t *  @type {string|number|Object}\n\t\t\t */\n\t\t\tthis.value = value;\n\n\t\t\t/**\n\t\t\t *  the channel name or number\n\t\t\t *  \n\t\t\t *  @type {string|number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._channel = channel;\n\n\t\t\t/**\n\t\t\t *  an internal reference to the id of the timeline\n\t\t\t *  callback which is set. \n\t\t\t *  \n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._timelineID = Tone.Transport.setTimeline(this._trigger.bind(this), time);\n\t\t};\n\n\t\t/**\n\t\t *  invoked by the timeline\n\t\t *  @private\n\t\t *  @param {number} time the time at which the note should play\n\t\t */\n\t\tTone.Note.prototype._trigger = function(time){\n\t\t\t//invoke the callback\n\t\t\tchannelCallbacks(this._channel, time, this.value);\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Note} `this`\n\t\t */\n\t\tTone.Note.prototype.dispose = function(){ \n\t\t\tTone.Tranport.clearTimeline(this._timelineID);\n\t\t\tthis.value = null;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tvar NoteChannels = {};\n\n\t\t/**\n\t\t *  invoke all of the callbacks on a specific channel\n\t\t *  @private\n\t\t */\n\t\tfunction channelCallbacks(channel, time, value){\n\t\t\tif (NoteChannels.hasOwnProperty(channel)){\n\t\t\t\tvar callbacks = NoteChannels[channel];\n\t\t\t\tfor (var i = 0, len = callbacks.length; i < len; i++){\n\t\t\t\t\tvar callback = callbacks[i];\n\t\t\t\t\tif (Array.isArray(value)){\n\t\t\t\t\t\tcallback.apply(window, [time].concat(value));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(time, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  listen to a specific channel, get all of the note callbacks\n\t\t *  @static\n\t\t *  @param {string|number} channel the channel to route note events from\n\t\t *  @param {function(*)} callback callback to be invoked when a note will occur\n\t\t *                                        on the specified channel\n\t\t */\n\t\tTone.Note.route = function(channel, callback){\n\t\t\tif (NoteChannels.hasOwnProperty(channel)){\n\t\t\t\tNoteChannels[channel].push(callback);\n\t\t\t} else {\n\t\t\t\tNoteChannels[channel] = [callback];\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  Remove a previously routed callback from a channel. \n\t\t *  @static\n\t\t *  @param {string|number} channel The channel to unroute note events from\n\t\t *  @param {function(*)} callback Callback which was registered to the channel.\n\t\t */\n\t\tTone.Note.unroute = function(channel, callback){\n\t\t\tif (NoteChannels.hasOwnProperty(channel)){\n\t\t\t\tvar channelCallback = NoteChannels[channel];\n\t\t\t\tvar index = channelCallback.indexOf(callback);\n\t\t\t\tif (index !== -1){\n\t\t\t\t\tNoteChannels[channel].splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  Parses a score and registers all of the notes along the timeline. \n\t\t *\n\t\t *  Scores are a JSON object with instruments at the top level\n\t\t *  and an array of time and values. The value of a note can be 0 or more \n\t\t *  parameters. \n\t\t *\n\t\t *  The only requirement for the score format is that the time is the first (or only)\n\t\t *  value in the array. All other values are optional and will be passed into the callback\n\t\t *  function registered using `Note.route(channelName, callback)`.\n\t\t *\n\t\t *  To convert MIDI files to score notation, take a look at utils/MidiToScore.js\n\t\t *\n\t\t *  @example\n\t\t *  //an example JSON score which sets up events on channels\n\t\t *  var score = { \n\t\t *  \t\"synth\"  : [[\"0\", \"C3\"], [\"0:1\", \"D3\"], [\"0:2\", \"E3\"], ... ],\n\t\t *  \t\"bass\"  : [[\"0\", \"C2\"], [\"1:0\", \"A2\"], [\"2:0\", \"C2\"], [\"3:0\", \"A2\"], ... ],\n\t\t *  \t\"kick\"  : [\"0\", \"0:2\", \"1:0\", \"1:2\", \"2:0\", ... ],\n\t\t *  \t//...\n\t\t *  };\n\t\t *  //parse the score into Notes\n\t\t *  Tone.Note.parseScore(score);\n\t\t *  //route all notes on the \"synth\" channel\n\t\t *  Tone.Note.route(\"synth\", function(time, note){\n\t\t *  \t//trigger synth\n\t\t *  });\n\t\t *  @static\n\t\t *  @param {Object} score\n\t\t *  @return {Array<Tone.Note>} an array of all of the notes that were created\n\t\t */\n\t\tTone.Note.parseScore = function(score){\n\t\t\tvar notes = [];\n\t\t\tfor (var inst in score){\n\t\t\t\tvar part = score[inst];\n\t\t\t\tif (inst === \"tempo\"){\n\t\t\t\t\tTone.Transport.bpm.value = part;\n\t\t\t\t} else if (inst === \"timeSignature\"){\n\t\t\t\t\tTone.Transport.timeSignature = part[0] / (part[1] / 4);\n\t\t\t\t} else if (Array.isArray(part)){\n\t\t\t\t\tfor (var i = 0; i < part.length; i++){\n\t\t\t\t\t\tvar noteDescription = part[i];\n\t\t\t\t\t\tvar note;\n\t\t\t\t\t\tif (Array.isArray(noteDescription)){\n\t\t\t\t\t\t\tvar time = noteDescription[0];\n\t\t\t\t\t\t\tvar value = noteDescription.slice(1);\n\t\t\t\t\t\t\tnote = new Tone.Note(inst, time, value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnote = new Tone.Note(inst, noteDescription);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnotes.push(note);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError(\"score parts must be Arrays\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn notes;\n\t\t};\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t//\tMUSIC NOTES\n\t\t//\t\n\t\t//\tAugments Tone.prototype to include note methods\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\tvar noteToIndex = { \"c\" : 0, \"c#\" : 1, \"db\" : 1, \"d\" : 2, \"d#\" : 3, \"eb\" : 3, \n\t\t\t\"e\" : 4, \"f\" : 5, \"f#\" : 6, \"gb\" : 6, \"g\" : 7, \"g#\" : 8, \"ab\" : 8, \n\t\t\t\"a\" : 9, \"a#\" : 10, \"bb\" : 10, \"b\" : 11\n\t\t};\n\n\t\tvar noteIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n\t\tvar middleC = 261.6255653005986;\n\n\t\t/**\n\t\t *  convert a note name to frequency (i.e. A4 to 440)\n\t\t *  defined in \"Tone/core/Note\"\n\t\t *  \n\t\t *  @param  {string} note\n\t\t *  @return {number}         \n\t\t */\n\t\tTone.prototype.noteToFrequency = function(note){\n\t\t\t//break apart the note by frequency and octave\n\t\t\tvar parts = note.split(/(\\d+)/);\n\t\t\tif (parts.length === 3){\n\t\t\t\tvar index = noteToIndex[parts[0].toLowerCase()];\n\t\t\t\tvar octave = parts[1];\n\t\t\t\tvar noteNumber = index + parseInt(octave, 10) * 12;\n\t\t\t\treturn Math.pow(2, (noteNumber - 48) / 12) * middleC;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  test if a string is in note format: i.e. \"C4\"\n\t\t *  @param  {string|number}  note the note to test\n\t\t *  @return {boolean}      true if it's in the form of a note\n\t\t *  @method isNotation\n\t\t *  @lends Tone.prototype.isNotation\n\t\t */\n\t\tTone.prototype.isNote = ( function(){\n\t\t\tvar noteFormat = new RegExp(/[a-g]{1}([b#]{1}|[b#]{0})[0-9]+$/i);\n\t\t\treturn function(note){\n\t\t\t\tif (typeof note === \"string\"){\n\t\t\t\t\tnote = note.toLowerCase();\n\t\t\t\t} \n\t\t\t\treturn noteFormat.test(note);\n\t\t\t};\n\t\t})();\n\n\t\t/**\n\t\t *  a pointer to the previous toFrequency method\n\t\t *  @private\n\t\t *  @function\n\t\t */\n\t\tTone.prototype._overwrittenToFrequency = Tone.prototype.toFrequency;\n\n\t\t/**\n\t\t *  A method which accepts frequencies in the form\n\t\t *  of notes (`\"C#4\"`), frequencies as strings (\"49hz\"), frequency numbers,\n\t\t *  or Tone.Time and converts them to their frequency as a number in hertz.\n\t\t *  @param  {Tone.Frequency} note the note name or notation\n\t\t *  @param {number=} \tnow \tif passed in, this number will be \n\t\t *                        \t\tused for all 'now' relative timings\n\t\t *  @return {number}      the frequency as a number\n\t\t */\n\t\tTone.prototype.toFrequency = function(note, now){\n\t\t\tif (this.isNote(note)){\n\t\t\t\tnote = this.noteToFrequency(note);\n\t\t\t} \n\t\t\treturn this._overwrittenToFrequency(note, now);\n\t\t};\n\n\t\t/**\n\t\t *  Convert a note name (i.e. A4, C#5, etc to a frequency).\n\t\t *  Defined in \"Tone/core/Note\"\n\t\t *  @param  {number} freq\n\t\t *  @return {string}         \n\t\t */\n\t\tTone.prototype.frequencyToNote = function(freq){\n\t\t\tvar log = Math.log(freq / middleC) / Math.LN2;\n\t\t\tvar noteNumber = Math.round(12 * log) + 48;\n\t\t\tvar octave = Math.floor(noteNumber/12);\n\t\t\tvar noteName = noteIndexToNote[noteNumber % 12];\n\t\t\treturn noteName + octave.toString();\n\t\t};\n\n\t\t/**\n\t\t *  Convert an interval (in semitones) to a frequency ratio.\n\t\t *\n\t\t *  @param  {number} interval the number of semitones above the base note\n\t\t *  @return {number}          the frequency ratio\n\t\t *  @example\n\t\t *  tone.intervalToFrequencyRatio(0); // returns 1\n\t\t *  tone.intervalToFrequencyRatio(12); // returns 2\n\t\t */\n\t\tTone.prototype.intervalToFrequencyRatio = function(interval){\n\t\t\treturn Math.pow(2,(interval/12));\n\t\t};\n\n\t\t/**\n\t\t *  Convert a midi note number into a note name/\n\t\t *\n\t\t *  @param  {number} midiNumber the midi note number\n\t\t *  @return {string}            the note's name and octave\n\t\t *  @example\n\t\t *  tone.midiToNote(60); // returns \"C3\"\n\t\t */\n\t\tTone.prototype.midiToNote = function(midiNumber){\n\t\t\tvar octave = Math.floor(midiNumber / 12) - 2;\n\t\t\tvar note = midiNumber % 12;\n\t\t\treturn noteIndexToNote[note] + octave;\n\t\t};\n\n\t\t/**\n\t\t *  convert a note to it's midi value\n\t\t *  defined in \"Tone/core/Note\"\n\t\t *\n\t\t *  @param  {string} note the note name (i.e. \"C3\")\n\t\t *  @return {number} the midi value of that note\n\t\t *  @example\n\t\t *  tone.noteToMidi(\"C3\"); // returns 60\n\t\t */\n\t\tTone.prototype.noteToMidi = function(note){\n\t\t\t//break apart the note by frequency and octave\n\t\t\tvar parts = note.split(/(\\d+)/);\n\t\t\tif (parts.length === 3){\n\t\t\t\tvar index = noteToIndex[parts[0].toLowerCase()];\n\t\t\t\tvar octave = parts[1];\n\t\t\t\treturn index + (parseInt(octave, 10) + 2) * 12;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t};\n\n\t\treturn Tone.Note;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\t\t\n\t\t/**\n\t\t * \t@class  Effect is the base class for effects. connect the effect between\n\t\t * \t        the effectSend and effectReturn GainNodes. then control the amount of\n\t\t * \t        effect which goes to the output using the dry/wet control.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @param {number} [initialWet=0] the starting wet value\n\t\t *                                 defaults to 100% wet\n\t\t */\n\t\tTone.Effect = function(){\n\n\t\t\tTone.call(this);\n\n\t\t\t//get all of the defaults\n\t\t\tvar options = this.optionsObject(arguments, [\"wet\"], Tone.Effect.defaults);\n\n\t\t\t/**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t\t\t/**\n\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t *  will pass through to the output. \n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.wet = this._dryWet.fade;\n\n\t\t\t/**\n\t\t\t *  connect the effectSend to the input of hte effect\n\t\t\t *  \n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.effectSend = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  connect the output of the effect to the effectReturn\n\t\t\t *  \n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.effectReturn = this.context.createGain();\n\n\t\t\t//connections\n\t\t\tthis.input.connect(this._dryWet.a);\n\t\t\tthis.input.connect(this.effectSend);\n\t\t\tthis.effectReturn.connect(this._dryWet.b);\n\t\t\tthis._dryWet.connect(this.output);\n\t\t};\n\n\t\tTone.extend(Tone.Effect);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Effect.defaults = {\n\t\t\t\"wet\" : 1\n\t\t};\n\n\t\t/**\n\t\t *  bypass the effect\n\t\t *  @returns {Tone.Effect} `this`\n\t\t */\n\t\tTone.Effect.prototype.bypass = function(){\n\t\t\tthis.wet.value = 0;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  chains the effect in between the effectSend and effectReturn\n\t\t *  @param  {Tone} effect\n\t\t *  @private\n\t\t *  @returns {Tone.Effect} `this`\n\t\t */\n\t\tTone.Effect.prototype.connectEffect = function(effect){\n\t\t\tthis.effectSend.chain(effect, this.effectReturn);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  tear down\n\t\t *  @returns {Tone.Effect} `this`\n\t\t */\n\t\tTone.Effect.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._dryWet.dispose();\n\t\t\tthis._dryWet = null;\n\t\t\tthis.effectSend.disconnect();\n\t\t\tthis.effectSend = null;\n\t\t\tthis.effectReturn.disconnect();\n\t\t\tthis.effectReturn = null;\n\t\t\tthis.wet = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Effect;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class AutoPanner is a Tone.Panner with an LFO connected to the pan amount\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {number} [frequency=1] (optional) rate in HZ of the left-right pan\n\t\t *  @example\n\t\t *  var autoPanner = new Tone.AutoPanner(\"4n\");\n\t\t */\n\t\tTone.AutoPanner = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"frequency\"], Tone.AutoPanner.defaults);\n\t\t\tTone.Effect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the lfo which drives the panning\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._lfo = new Tone.LFO(options.frequency, 0, 1);\n\n\t\t\t/**\n\t\t\t * The amount of panning between left and right. \n\t\t\t * 0 = always center. 1 = full range between left and right. \n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.amount = this._lfo.amplitude;\n\n\t\t\t/**\n\t\t\t *  the panner node which does the panning\n\t\t\t *  @type {Tone.Panner}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._panner = new Tone.Panner();\n\n\t\t\t/**\n\t\t\t * How fast the panner modulates\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = this._lfo.frequency;\n\n\t\t\t//connections\n\t\t\tthis.connectEffect(this._panner);\n\t\t\tthis._lfo.connect(this._panner.pan);\n\t\t\tthis.type = options.type;\n\t\t};\n\n\t\t//extend Effect\n\t\tTone.extend(Tone.AutoPanner, Tone.Effect);\n\n\t\t/**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.AutoPanner.defaults = {\n\t\t\t\"frequency\" : 1,\n\t\t\t\"type\" : \"sine\",\n\t\t\t\"amount\" : 1\n\t\t};\n\t\t\n\t\t/**\n\t\t * Start the panner.\n\t\t * @param {Tone.Time} [time=now] the panner begins.\n\t\t * @returns {Tone.AutoPanner} `this`\n\t\t */\n\t\tTone.AutoPanner.prototype.start = function(time){\n\t\t\tthis._lfo.start(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Stop the panner.\n\t\t * @param {Tone.Time} [time=now] the panner stops.\n\t\t * @returns {Tone.AutoPanner} `this`\n\t\t */\n\t\tTone.AutoPanner.prototype.stop = function(time){\n\t\t\tthis._lfo.stop(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Sync the panner to the transport.\n\t\t * @returns {Tone.AutoPanner} `this`\n\t\t */\n\t\tTone.AutoPanner.prototype.sync = function(){\n\t\t\tthis._lfo.sync();\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Unsync the panner from the transport\n\t\t * @returns {Tone.AutoPanner} `this`\n\t\t */\n\t\tTone.AutoPanner.prototype.unsync = function(){\n\t\t\tthis._lfo.unsync();\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Type of oscillator attached to the AutoPanner.\n\t\t * @memberOf Tone.AutoPanner#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t\tObject.defineProperty(Tone.AutoPanner.prototype, \"type\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._lfo.type;\n\t\t\t},\n\t\t\tset : function(type){\n\t\t\t\tthis._lfo.type = type;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.AutoPanner} `this`\n\t\t */\n\t\tTone.AutoPanner.prototype.dispose = function(){\n\t\t\tTone.Effect.prototype.dispose.call(this);\n\t\t\tthis._lfo.dispose();\n\t\t\tthis._lfo = null;\n\t\t\tthis._panner.dispose();\n\t\t\tthis._panner = null;\n\t\t\tthis.frequency = null;\n\t\t\tthis.amount = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.AutoPanner;\n\t});\n\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  AutoWah connects an envelope follower to a bandpass filter.\n\t\t *          Some inspiration from Tuna.js https://github.com/Dinahmoe/tuna\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {number} [baseFrequency=100] the frequency the filter is set \n\t\t *                                       to at the low point of the wah\n\t\t *  @param {number} [octaves=5] the number of octaves above the baseFrequency\n\t\t *                               the filter will sweep to when fully open\n\t\t *  @param {number} [sensitivity=0] the decibel threshold sensitivity for \n\t\t *                                   the incoming signal. Normal range of -40 to 0. \n\t\t *  @example\n\t\t *  var autoWah = new Tone.AutoWah(100, 6, -20);\n\t\t */\n\t\tTone.AutoWah = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"], Tone.AutoWah.defaults);\n\t\t\tTone.Effect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the envelope follower\n\t\t\t *  @type {Tone.Follower}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.follower = new Tone.Follower(options.follower);\n\n\t\t\t/**\n\t\t\t *  scales the follower value to the frequency domain\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sweepRange = new Tone.ScaleExp(0, 1, 0.5);\n\n\t\t\t/**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._baseFrequency = options.baseFrequency;\n\n\t\t\t/**\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._octaves = options.octaves;\n\n\t\t\t/**\n\t\t\t *  the input gain to adjust the senstivity\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._inputBoost = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._bandpass = new Tone.Filter({\n\t\t\t\t\"rolloff\" : -48,\n\t\t\t\t\"frequency\" : 0,\n\t\t\t\t\"Q\" : options.Q,\n\t\t\t});\n\t\t\n\t\t\t/**\n\t\t\t *  @type {Tone.Filter}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._peaking = new Tone.Filter(0, \"peaking\");\n\t\t\tthis._peaking.gain.value = options.gain;\n\n\t\t\t/**\n\t\t\t * the gain of the filter.\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.gain = this._peaking.gain;\n\n\t\t\t/**\n\t\t\t * The quality of the filter.\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.Q = this._bandpass.Q;\n\n\t\t\t//the control signal path\n\t\t\tthis.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);\n\t\t\tthis._sweepRange.connect(this._bandpass.frequency);\n\t\t\tthis._sweepRange.connect(this._peaking.frequency);\n\t\t\t//the filtered path\n\t\t\tthis.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n\t\t\t//set the initial value\n\t\t\tthis._setSweepRange();\n\t\t\tthis.sensitivity = options.sensitivity;\n\t\t};\n\n\t\tTone.extend(Tone.AutoWah, Tone.Effect);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.AutoWah.defaults = {\n\t\t\t\"baseFrequency\" : 100,\n\t\t\t\"octaves\" : 6,\n\t\t\t\"sensitivity\" : 0,\n\t\t\t\"Q\" : 2,\n\t\t\t\"gain\" : 2,\n\t\t\t\"follower\" : {\n\t\t\t\t\"attack\" : 0.3,\n\t\t\t\t\"release\" : 0.5\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * The number of octaves that the filter will sweep.\n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {number}\n\t\t * @name octaves\n\t\t */\n\t\tObject.defineProperty(Tone.AutoWah.prototype, \"octaves\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._octaves;\n\t\t\t}, \n\t\t\tset : function(octaves){\n\t\t\t\tthis._octaves = octaves;\n\t\t\t\tthis._setSweepRange();\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The base frequency from which the sweep will start from.\n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {Tone.Frequency}\n\t\t * @name baseFrequency\n\t\t */\n\t\tObject.defineProperty(Tone.AutoWah.prototype, \"baseFrequency\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._baseFrequency;\n\t\t\t}, \n\t\t\tset : function(baseFreq){\n\t\t\t\tthis._baseFrequency = baseFreq;\n\t\t\t\tthis._setSweepRange();\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The sensitivity to control how responsive to the input signal the filter is. \n\t\t * in Decibels. \n\t\t * @memberOf Tone.AutoWah#\n\t\t * @type {number}\n\t\t * @name sensitivity\n\t\t */\n\t\tObject.defineProperty(Tone.AutoWah.prototype, \"sensitivity\", {\n\t\t\tget : function(){\n\t\t\t\treturn this.gainToDb(1 / this._inputBoost.gain.value);\n\t\t\t}, \n\t\t\tset : function(sensitivy){\n\t\t\t\tthis._inputBoost.gain.value = 1 / this.dbToGain(sensitivy);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  sets the sweep range of the scaler\n\t\t *  @private\n\t\t */\n\t\tTone.AutoWah.prototype._setSweepRange = function(){\n\t\t\tthis._sweepRange.min = this._baseFrequency;\n\t\t\tthis._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.AutoWah} `this`\n\t\t */\n\t\tTone.AutoWah.prototype.dispose = function(){\n\t\t\tTone.Effect.prototype.dispose.call(this);\n\t\t\tthis.follower.dispose();\n\t\t\tthis.follower = null;\n\t\t\tthis._sweepRange.dispose();\n\t\t\tthis._sweepRange = null;\n\t\t\tthis._bandpass.dispose();\n\t\t\tthis._bandpass = null;\n\t\t\tthis._peaking.dispose();\n\t\t\tthis._peaking = null;\n\t\t\tthis._inputBoost.disconnect();\n\t\t\tthis._inputBoost = null;\n\t\t\tthis.gain = null;\n\t\t\tthis.Q = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.AutoWah;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Downsample incoming signal to a different bitdepth. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {number} bits 1-8. \n\t\t *  @example\n\t\t *  var crusher = new Tone.BitCrusher(4);\n\t\t */\n\t\tTone.BitCrusher = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"bits\"], Tone.BitCrusher.defaults);\n\t\t\tTone.Effect.call(this, options);\n\n\t\t\tvar invStepSize = 1 / Math.pow(2, options.bits - 1);\n\n\t\t\t/**\n\t\t\t *  Subtract the input signal and the modulus of the input signal\n\t\t\t *  @type {Tone.Subtract}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._subtract = new Tone.Subtract();\n\n\t\t\t/**\n\t\t\t *  The mod function\n\t\t\t *  @type  {Tone.Modulo}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._modulo = new Tone.Modulo(invStepSize);\n\n\t\t\t/**\n\t\t\t *  keeps track of the bits\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._bits = options.bits;\n\n\t\t\t//connect it up\n\t\t\tthis.effectSend.fan(this._subtract, this._modulo);\n\t\t\tthis._modulo.connect(this._subtract, 0, 1);\n\t\t\tthis._subtract.connect(this.effectReturn);\n\t\t};\n\n\t\tTone.extend(Tone.BitCrusher, Tone.Effect);\n\n\t\t/**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.BitCrusher.defaults = {\n\t\t\t\"bits\" : 4\n\t\t};\n\n\t\t/**\n\t\t * The bit depth of the BitCrusher\n\t\t * @memberOf Tone.BitCrusher#\n\t\t * @type {number}\n\t\t * @name bits\n\t\t */\n\t\tObject.defineProperty(Tone.BitCrusher.prototype, \"bits\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._bits;\n\t\t\t},\n\t\t\tset : function(bits){\n\t\t\t\tthis._bits = bits;\n\t\t\t\tvar invStepSize = 1 / Math.pow(2, bits - 1);\n\t\t\t\tthis._modulo.value = invStepSize;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.BitCrusher} `this`\n\t\t */\n\t\tTone.BitCrusher.prototype.dispose = function(){\n\t\t\tTone.Effect.prototype.dispose.call(this);\n\t\t\tthis._subtract.dispose();\n\t\t\tthis._subtract = null;\n\t\t\tthis._modulo.dispose();\n\t\t\tthis._modulo = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.BitCrusher;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A Chebyshev waveshaper. Good for making different types of distortion sounds.\n\t\t *         Note that odd orders sound very different from even ones. order = 1 is no change. \n\t\t *         http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {number} order The order of the chebyshev polynomial. Normal range between 1-100. \n\t\t *  @example\n\t\t *  var cheby = new Tone.Chebyshev(50);\n\t\t */\n\t\tTone.Chebyshev = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"order\"], Tone.Chebyshev.defaults);\n\t\t\tTone.Effect.call(this);\n\n\t\t\t/**\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t\t\t/**\n\t\t\t * holds onto the order of the filter\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._order = options.order;\n\n\t\t\tthis.connectEffect(this._shaper);\n\t\t\tthis.order = options.order;\n\t\t\tthis.oversample = options.oversample;\n\t\t};\n\n\t\tTone.extend(Tone.Chebyshev, Tone.Effect);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Chebyshev.defaults = {\n\t\t\t\"order\" : 1,\n\t\t\t\"oversample\" : \"none\"\n\t\t};\n\t\t\n\t\t/**\n\t\t *  get the coefficient for that degree\n\t\t *  @param {number} x the x value\n\t\t *  @param   {number} degree \n\t\t *  @param {Object} memo memoize the computed value. \n\t\t *                       this speeds up computation greatly. \n\t\t *  @return  {number}       the coefficient \n\t\t *  @private\n\t\t */\n\t\tTone.Chebyshev.prototype._getCoefficient = function(x, degree, memo){\n\t\t\tif (memo.hasOwnProperty(degree)){\n\t\t\t\treturn memo[degree];\n\t\t\t} else if (degree === 0){\n\t\t\t\tmemo[degree] = 0;\n\t\t\t} else if (degree === 1){\n\t\t\t\tmemo[degree] = x;\n\t\t\t} else {\n\t\t\t\tmemo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);\n\t\t\t}\n\t\t\treturn memo[degree];\n\t\t};\n\n\t\t/**\n\t\t * The order of the Chebyshev polynomial i.e.\n\t\t * order = 2 -> 2x^2 + 1. order = 3 -> 4x^3 + 3x. \n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {number}\n\t\t * @name order\n\t\t */\n\t\tObject.defineProperty(Tone.Chebyshev.prototype, \"order\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._order;\n\t\t\t},\n\t\t\tset : function(order){\n\t\t\t\tthis._order = order;\n\t\t\t\tvar curve = new Array(4096);\n\t\t\t\tvar len = curve.length;\n\t\t\t\tfor (var i = 0; i < len; ++i) {\n\t\t\t\t\tvar x = i * 2 / len - 1;\n\t\t\t\t\tif (x === 0){\n\t\t\t\t\t\t//should output 0 when input is 0\n\t\t\t\t\t\tcurve[i] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurve[i] = this._getCoefficient(x, order, {});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._shaper.curve = curve;\n\t\t\t} \n\t\t});\n\n\t\t/**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Chebyshev#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t\tObject.defineProperty(Tone.Chebyshev.prototype, \"oversample\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._shaper.oversample;\n\t\t\t},\n\t\t\tset : function(oversampling){\n\t\t\t\tthis._shaper.oversample = oversampling;\n\t\t\t} \n\t\t});\n\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Chebyshev} `this`\n\t\t */\n\t\tTone.Chebyshev.prototype.dispose = function(){\n\t\t\tTone.Effect.prototype.dispose.call(this);\n\t\t\tthis._shaper.dispose();\n\t\t\tthis._shaper = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Chebyshev;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Creates an effect with an effectSendL/R and effectReturnL/R\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.Effect}\n\t\t */\n\t\tTone.StereoEffect = function(){\n\n\t\t\tTone.call(this);\n\t\t\t//get the defaults\n\t\t\tvar options = this.optionsObject(arguments, [\"wet\"], Tone.Effect.defaults);\n\n\t\t\t/**\n\t\t\t *  the drywet knob to control the amount of effect\n\t\t\t *  @type {Tone.CrossFade}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._dryWet = new Tone.CrossFade(options.wet);\n\n\t\t\t/**\n\t\t\t *  The wet control, i.e. how much of the effected\n\t\t\t *  will pass through to the output. \n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.wet = this._dryWet.fade;\n\n\t\t\t/**\n\t\t\t *  then split it\n\t\t\t *  @type {Tone.Split}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._split = new Tone.Split();\n\n\t\t\t/**\n\t\t\t *  the effects send LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.effectSendL = this._split.left;\n\n\t\t\t/**\n\t\t\t *  the effects send RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.effectSendR = this._split.right;\n\n\t\t\t/**\n\t\t\t *  the stereo effect merger\n\t\t\t *  @type {Tone.Merge}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._merge = new Tone.Merge();\n\n\t\t\t/**\n\t\t\t *  the effect return LEFT\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.effectReturnL = this._merge.left;\n\n\t\t\t/**\n\t\t\t *  the effect return RIGHT\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.effectReturnR = this._merge.right;\n\n\t\t\t//connections\n\t\t\tthis.input.connect(this._split);\n\t\t\t//dry wet connections\n\t\t\tthis.input.connect(this._dryWet, 0, 0);\n\t\t\tthis._merge.connect(this._dryWet, 0, 1);\n\t\t\tthis._dryWet.connect(this.output);\n\t\t};\n\n\t\tTone.extend(Tone.StereoEffect, Tone.Effect);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoEffect} `this`\n\t\t */\n\t\tTone.StereoEffect.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._dryWet.dispose();\n\t\t\tthis._dryWet = null;\n\t\t\tthis._split.dispose();\n\t\t\tthis._split = null;\n\t\t\tthis._merge.dispose();\n\t\t\tthis._merge = null;\n\t\t\tthis.effectSendL = null;\n\t\t\tthis.effectSendR = null;\n\t\t\tthis.effectReturnL = null;\n\t\t\tthis.effectReturnR = null;\n\t\t\tthis.wet = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.StereoEffect;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\t\t\n\t\t/**\n\t\t * \t@class  Feedback Effect (a sound loop between an audio source and its own output)\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {number|Object} [initialFeedback=0.125] the initial feedback value\n\t\t */\n\t\tTone.FeedbackEffect = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"feedback\"]);\n\t\t\toptions = this.defaultArg(options, Tone.FeedbackEffect.defaults);\n\n\t\t\tTone.Effect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  controls the amount of feedback\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.feedback = new Tone.Signal(options.feedback, Tone.Signal.Units.Normal);\n\t\t\t\n\t\t\t/**\n\t\t\t *  the gain which controls the feedback\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._feedbackGain = this.context.createGain();\n\n\t\t\t//the feedback loop\n\t\t\tthis.effectReturn.chain(this._feedbackGain, this.effectSend);\n\t\t\tthis.feedback.connect(this._feedbackGain.gain);\n\t\t};\n\n\t\tTone.extend(Tone.FeedbackEffect, Tone.Effect);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.FeedbackEffect.defaults = {\n\t\t\t\"feedback\" : 0.125\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackEffect} `this`\n\t\t */\n\t\tTone.FeedbackEffect.prototype.dispose = function(){\n\t\t\tTone.Effect.prototype.dispose.call(this);\n\t\t\tthis.feedback.dispose();\n\t\t\tthis.feedback = null;\n\t\t\tthis._feedbackGain.disconnect();\n\t\t\tthis._feedbackGain = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.FeedbackEffect;\n\t});\n\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Just like a stereo feedback effect, but the feedback is routed from left to right\n\t\t *         and right to left instead of on the same channel.\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t */\n\t\tTone.StereoXFeedbackEffect = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"feedback\"], Tone.FeedbackEffect.defaults);\n\t\t\tTone.StereoEffect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  controls the amount of feedback\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.feedback = new Tone.Signal(options.feedback);\n\n\t\t\t/**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._feedbackLR = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._feedbackRL = this.context.createGain();\n\n\t\t\t//connect it up\n\t\t\tthis.effectReturnL.chain(this._feedbackLR, this.effectSendR);\n\t\t\tthis.effectReturnR.chain(this._feedbackRL, this.effectSendL);\n\t\t\tthis.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);\n\t\t};\n\n\t\tTone.extend(Tone.StereoXFeedbackEffect, Tone.FeedbackEffect);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoXFeedbackEffect} `this`\n\t\t */\n\t\tTone.StereoXFeedbackEffect.prototype.dispose = function(){\n\t\t\tTone.StereoEffect.prototype.dispose.call(this);\n\t\t\tthis.feedback.dispose();\n\t\t\tthis.feedback = null;\n\t\t\tthis._feedbackLR.disconnect();\n\t\t\tthis._feedbackLR = null;\n\t\t\tthis._feedbackRL.disconnect();\n\t\t\tthis._feedbackRL = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.StereoXFeedbackEffect;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A Chorus effect with feedback. inspiration from https://github.com/Dinahmoe/tuna/blob/master/tuna.js\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.StereoXFeedbackEffect}\n\t\t *\t@param {number|Object} [frequency=2] the frequency of the effect\n\t\t *\t@param {number} [delayTime=3.5] the delay of the chorus effect in ms\n\t\t *\t@param {number} [depth=0.7] the depth of the chorus\n\t\t *\t@example\n\t\t * \tvar chorus = new Tone.Chorus(4, 2.5, 0.5);\n\t\t */\n\t\tTone.Chorus = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"frequency\", \"delayTime\", \"depth\"], Tone.Chorus.defaults);\n\t\t\tTone.StereoXFeedbackEffect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the depth of the chorus\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._depth = options.depth;\n\n\t\t\t/**\n\t\t\t *  the delayTime\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._delayTime = options.delayTime / 1000;\n\n\t\t\t/**\n\t\t\t *  the lfo which controls the delayTime\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._lfoL = new Tone.LFO(options.rate, 0, 1);\n\n\t\t\t/**\n\t\t\t *  another LFO for the right side with a 180 degree phase diff\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._lfoR = new Tone.LFO(options.rate, 0, 1);\n\t\t\tthis._lfoR.phase = 180;\n\n\t\t\t/**\n\t\t\t *  delay for left\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._delayNodeL = this.context.createDelay();\n\n\t\t\t/**\n\t\t\t *  delay for right\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._delayNodeR = this.context.createDelay();\n\n\t\t\t/**\n\t\t\t * The frequency the chorus will modulate at. \n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = this._lfoL.frequency;\n\n\t\t\t//connections\n\t\t\tthis.connectSeries(this.effectSendL, this._delayNodeL, this.effectReturnL);\n\t\t\tthis.connectSeries(this.effectSendR, this._delayNodeR, this.effectReturnR);\n\t\t\t//and pass through\n\t\t\tthis.effectSendL.connect(this.effectReturnL);\n\t\t\tthis.effectSendR.connect(this.effectReturnR);\n\t\t\t//lfo setup\n\t\t\tthis._lfoL.connect(this._delayNodeL.delayTime);\n\t\t\tthis._lfoR.connect(this._delayNodeR.delayTime);\n\t\t\t//start the lfo\n\t\t\tthis._lfoL.start();\n\t\t\tthis._lfoR.start();\n\t\t\t//have one LFO frequency control the other\n\t\t\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t\t//set the initial values\n\t\t\tthis.depth = this._depth;\n\t\t\tthis.frequency.value = options.frequency;\n\t\t\tthis.type = options.type;\n\t\t};\n\n\t\tTone.extend(Tone.Chorus, Tone.StereoXFeedbackEffect);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Chorus.defaults = {\n\t\t\t\"frequency\" : 1.5, \n\t\t\t\"delayTime\" : 3.5,\n\t\t\t\"depth\" : 0.7,\n\t\t\t\"feedback\" : 0.1,\n\t\t\t\"type\" : \"sine\"\n\t\t};\n\n\t\t/**\n\t\t * The depth of the effect. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {number}\n\t\t * @name depth\n\t\t */\n\t\tObject.defineProperty(Tone.Chorus.prototype, \"depth\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._depth;\n\t\t\t},\n\t\t\tset : function(depth){\n\t\t\t\tthis._depth = depth;\n\t\t\t\tvar deviation = this._delayTime * depth;\n\t\t\t\tthis._lfoL.min = this._delayTime - deviation;\n\t\t\t\tthis._lfoL.max = this._delayTime + deviation;\n\t\t\t\tthis._lfoR.min = this._delayTime - deviation;\n\t\t\t\tthis._lfoR.max = this._delayTime + deviation;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The delayTime in milliseconds\n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {number}\n\t\t * @name delayTime\n\t\t */\n\t\tObject.defineProperty(Tone.Chorus.prototype, \"delayTime\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._delayTime * 1000;\n\t\t\t},\n\t\t\tset : function(delayTime){\n\t\t\t\tthis._delayTime = delayTime / 1000;\n\t\t\t\tthis.depth = this._depth;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The lfo type for the chorus. \n\t\t * @memberOf Tone.Chorus#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t\tObject.defineProperty(Tone.Chorus.prototype, \"type\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._lfoL.type;\n\t\t\t},\n\t\t\tset : function(type){\n\t\t\t\tthis._lfoL.type = type;\n\t\t\t\tthis._lfoR.type = type;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Chorus} `this`\n\t\t */\n\t\tTone.Chorus.prototype.dispose = function(){\n\t\t\tTone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t\t\tthis._lfoL.dispose();\n\t\t\tthis._lfoL = null;\n\t\t\tthis._lfoR.dispose();\n\t\t\tthis._lfoR = null;\n\t\t\tthis._delayNodeL.disconnect();\n\t\t\tthis._delayNodeL = null;\n\t\t\tthis._delayNodeR.disconnect();\n\t\t\tthis._delayNodeR = null;\n\t\t\tthis.frequency = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Chorus;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Convolver wrapper for reverb and emulation.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Effect}\n\t\t *  @param {string|AudioBuffer=} url\n\t\t *  @example\n\t\t *  var convolver = new Tone.Convolver(\"./path/to/ir.wav\");\n\t\t */\n\t\tTone.Convolver = function(url){\n\n\t\t\tTone.Effect.apply(this, arguments);\n\n\t\t  \t/**\n\t\t\t *  convolver node\n\t\t\t *  @type {ConvolverNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._convolver = this.context.createConvolver();\n\n\t\t\t/**\n\t\t\t *  the convolution buffer\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._buffer = new Tone.Buffer(url, function(buffer){\n\t\t\t\tthis.buffer = buffer;\n\t\t\t}.bind(this));\n\n\t\t\tthis.connectEffect(this._convolver);\n\t\t};\n\n\t\tTone.extend(Tone.Convolver, Tone.Effect);\n\n\t\t/**\n\t\t *  The convolver's buffer\n\t\t *  @memberOf Tone.Convolver#\n\t\t *  @type {AudioBuffer}\n\t\t *  @name buffer\n\t\t */\n\t\tObject.defineProperty(Tone.Convolver.prototype, \"buffer\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._buffer.get();\n\t\t\t},\n\t\t\tset : function(buffer){\n\t\t\t\tthis._buffer.set(buffer);\n\t\t\t\tthis._convolver.buffer = buffer;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  Load an impulse response url as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads.\n\t\t *  @param {string} url the url of the buffer to load.\n\t\t *                      filetype support depends on the\n\t\t *                      browser.\n\t\t *  @param  {function=} callback\n\t\t *  @returns {Tone.Convolver} `this`\n\t\t */\n\t\tTone.Convolver.prototype.load = function(url, callback){\n\t\t\tthis._buffer.load(url, function(buff){\n\t\t\t\tthis.buffer = buff;\n\t\t\t\tif (callback){\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  dispose and disconnect\n\t\t *  @returns {Tone.Convolver} `this`\n\t\t */\n\t\tTone.Convolver.prototype.dispose = function(){\n\t\t\tTone.Effect.prototype.dispose.call(this);\n\t\t\tthis._convolver.disconnect();\n\t\t\tthis._convolver = null;\n\t\t\tthis._buffer.dispose();\n\t\t\tthis._buffer = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.Convolver;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A simple distortion effect using the waveshaper node\n\t\t *         algorithm from http://stackoverflow.com/a/22313408\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {number} distortion the amount of distortion (nominal range of 0-1)\n\t\t *  @example\n\t\t *  var dist = new Tone.Distortion(0.8);\n\t\t */\n\t\tTone.Distortion = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"distortion\"], Tone.Distortion.defaults);\n\n\t\t\tTone.Effect.call(this);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._shaper = new Tone.WaveShaper(4096);\n\n\t\t\t/**\n\t\t\t * holds the distortion amount\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._distortion = options.distortion;\n\n\t\t\tthis.connectEffect(this._shaper);\n\t\t\tthis.distortion = options.distortion;\n\t\t\tthis.oversample = options.oversample;\n\t\t};\n\n\t\tTone.extend(Tone.Distortion, Tone.Effect);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Distortion.defaults = {\n\t\t\t\"distortion\" : 0.4,\n\t\t\t\"oversample\" : \"none\"\n\t\t};\n\n\t\t/**\n\t\t * The amount of distortion. Range between 0-1. \n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {number}\n\t\t * @name distortion\n\t\t */\n\t\tObject.defineProperty(Tone.Distortion.prototype, \"distortion\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._distortion;\n\t\t\t},\n\t\t\tset : function(amount){\n\t\t\t\tthis._distortion = amount;\n\t\t\t\tvar k = amount * 100;\n\t\t\t\tvar deg = Math.PI / 180;\n\t\t\t\tthis._shaper.setMap(function(x){\n\t\t\t\t\tif (Math.abs(x) < 0.001){\n\t\t\t\t\t\t//should output 0 when input is 0\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn ( 3 + k ) * x * 20 * deg / ( Math.PI + k * Math.abs(x) );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} \n\t\t});\n\n\t\t/**\n\t\t * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n\t\t * @memberOf Tone.Distortion#\n\t\t * @type {string}\n\t\t * @name oversample\n\t\t */\n\t\tObject.defineProperty(Tone.Distortion.prototype, \"oversample\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._shaper.oversample;\n\t\t\t},\n\t\t\tset : function(oversampling){\n\t\t\t\tthis._shaper.oversample = oversampling;\n\t\t\t} \n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Distortion} `this`\n\t\t */\n\t\tTone.Distortion.prototype.dispose = function(){\n\t\t\tTone.Effect.prototype.dispose.call(this);\n\t\t\tthis._shaper.dispose();\n\t\t\tthis._shaper = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Distortion;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\t\t\n\t\t/**\n\t\t *  @class  A feedback delay\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.FeedbackEffect}\n\t\t *  @param {Tone.Time} [delayTime=0.25] The delay time in seconds. \n\t\t *  @param {number=} feedback The amount of the effected signal which \n\t\t *                            is fed back through the delay.\n\t\t *  @example\n\t\t *  var feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.25);\n\t\t */\n\t\tTone.FeedbackDelay = function(){\n\t\t\t\n\t\t\tvar options = this.optionsObject(arguments, [\"delayTime\", \"feedback\"], Tone.FeedbackDelay.defaults);\n\t\t\tTone.FeedbackEffect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  Tone.Signal to control the delay amount\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.delayTime = new Tone.Signal(options.delayTime, Tone.Signal.Units.Time);\n\n\t\t\t/**\n\t\t\t *  the delay node\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._delayNode = this.context.createDelay(4);\n\n\t\t\t// connect it up\n\t\t\tthis.connectEffect(this._delayNode);\n\t\t\tthis.delayTime.connect(this._delayNode.delayTime);\n\t\t};\n\n\t\tTone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);\n\n\t\t/**\n\t\t *  The default values. \n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.FeedbackDelay.defaults = {\n\t\t\t\"delayTime\" : 0.25,\n\t\t};\n\t\t\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.FeedbackDelay} `this`\n\t\t */\n\t\tTone.FeedbackDelay.prototype.dispose = function(){\n\t\t\tTone.FeedbackEffect.prototype.dispose.call(this);\n\t\t\tthis.delayTime.dispose();\n\t\t\tthis._delayNode.disconnect();\n\t\t\tthis._delayNode = null;\n\t\t\tthis.delayTime = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.FeedbackDelay;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  an array of comb filter delay values from Freeverb implementation\n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {Array}\n\t\t */\n\t\tvar combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n\n\t\t/**\n\t\t *  an array of allpass filter frequency values from Freeverb implementation\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t\tvar allpassFilterFrequencies = [225, 556, 441, 341];\n\n\t\t/**\n\t\t *  @class Reverb based on the Freeverb\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {number} [roomSize=0.7] correlated to the decay time. \n\t\t *                                 value between (0,1)\n\t\t *  @param {number} [dampening=0.5] filtering which is applied to the reverb. \n\t\t *                                  value between [0,1]\n\t\t *  @example\n\t\t *  var freeverb = new Tone.Freeverb(0.4, 0.2);\n\t\t */\n\t\tTone.Freeverb = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"roomSize\", \"dampening\"], Tone.Freeverb.defaults);\n\t\t\tTone.StereoEffect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the roomSize value between (0,1)\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.roomSize = new Tone.Signal(options.roomSize);\n\n\t\t\t/**\n\t\t\t *  the amount of dampening\n\t\t\t *  value between [0,1]\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.dampening = new Tone.Signal(options.dampening);\n\n\t\t\t/**\n\t\t\t *  scale the dampening\n\t\t\t *  @type {Tone.ScaleExp}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._dampeningScale = new Tone.ScaleExp(100, 8000, 0.5);\n\n\t\t\t/**\n\t\t\t *  the comb filters\n\t\t\t *  @type {Array.<Tone.LowpassCombFilter>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._combFilters = [];\n\n\t\t\t/**\n\t\t\t *  the allpass filters on the left\n\t\t\t *  @type {Array.<BiqaudFilterNode>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._allpassFiltersL = [];\n\n\t\t\t/**\n\t\t\t *  the allpass filters on the right\n\t\t\t *  @type {Array.<BiqaudFilterNode>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._allpassFiltersR = [];\n\n\t\t\t//make the allpass filters on teh right\n\t\t\tfor (var l = 0; l < allpassFilterFrequencies.length; l++){\n\t\t\t\tvar allpassL = this.context.createBiquadFilter();\n\t\t\t\tallpassL.type = \"allpass\";\n\t\t\t\tallpassL.frequency.value = allpassFilterFrequencies[l];\n\t\t\t\tthis._allpassFiltersL.push(allpassL);\n\t\t\t}\n\n\t\t\t//make the allpass filters on the left\n\t\t\tfor (var r = 0; r < allpassFilterFrequencies.length; r++){\n\t\t\t\tvar allpassR = this.context.createBiquadFilter();\n\t\t\t\tallpassR.type = \"allpass\";\n\t\t\t\tallpassR.frequency.value = allpassFilterFrequencies[r];\n\t\t\t\tthis._allpassFiltersR.push(allpassR);\n\t\t\t}\n\n\t\t\t//make the comb filters\n\t\t\tfor (var c = 0; c < combFilterTunings.length; c++){\n\t\t\t\tvar lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);\n\t\t\t\tif (c < combFilterTunings.length / 2){\n\t\t\t\t\tthis.effectSendL.chain(lfpf, this._allpassFiltersL[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.effectSendR.chain(lfpf, this._allpassFiltersR[0]);\n\t\t\t\t}\n\t\t\t\tthis.roomSize.connect(lfpf.resonance);\n\t\t\t\tthis._dampeningScale.connect(lfpf.dampening);\n\t\t\t\tthis._combFilters.push(lfpf);\n\t\t\t}\n\n\t\t\t//chain the allpass filters togetehr\n\t\t\tthis.connectSeries.apply(this, this._allpassFiltersL);\n\t\t\tthis.connectSeries.apply(this, this._allpassFiltersR);\n\t\t\tthis._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);\n\t\t\tthis._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);\n\t\t\tthis.dampening.connect(this._dampeningScale);\n\t\t};\n\n\t\tTone.extend(Tone.Freeverb, Tone.StereoEffect);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Freeverb.defaults = {\n\t\t\t\"roomSize\" : 0.7, \n\t\t\t\"dampening\" : 0.5\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Freeverb} `this`\n\t\t */\n\t\tTone.Freeverb.prototype.dispose = function(){\n\t\t\tTone.StereoEffect.prototype.dispose.call(this);\n\t\t\tfor (var al = 0; al < this._allpassFiltersL.length; al++) {\n\t\t\t\tthis._allpassFiltersL[al].disconnect();\n\t\t\t\tthis._allpassFiltersL[al] = null;\n\t\t\t}\n\t\t\tthis._allpassFiltersL = null;\n\t\t\tfor (var ar = 0; ar < this._allpassFiltersR.length; ar++) {\n\t\t\t\tthis._allpassFiltersR[ar].disconnect();\n\t\t\t\tthis._allpassFiltersR[ar] = null;\n\t\t\t}\n\t\t\tthis._allpassFiltersR = null;\n\t\t\tfor (var cf = 0; cf < this._combFilters.length; cf++) {\n\t\t\t\tthis._combFilters[cf].dispose();\n\t\t\t\tthis._combFilters[cf] = null;\n\t\t\t}\n\t\t\tthis._combFilters = null;\n\t\t\tthis.roomSize.dispose();\n\t\t\tthis.dampening.dispose();\n\t\t\tthis._dampeningScale.dispose();\n\t\t\tthis.roomSize = null;\n\t\t\tthis.dampening = null;\n\t\t\tthis._dampeningScale = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Freeverb;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  an array of the comb filter delay time values\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t\tvar combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n\n\t\t/**\n\t\t *  the resonances of each of the comb filters\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t\tvar combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n\n\t\t/**\n\t\t *  the allpass filter frequencies\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t\tvar allpassFilterFreqs = [347, 113, 37];\n\n\t\t/**\n\t\t *  @class a simple Schroeder Reverberators tuned by John Chowning in 1970\n\t\t *         made up of 3 allpass filters and 4 feedback comb filters. \n\t\t *         https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html\n\t\t *\n\t\t *  @extends {Tone.Effect}\n\t\t *  @constructor\n\t\t *  @param {number} roomSize Coorelates to the decay time. Value between 0,1\n\t\t *  @example\n\t\t *  var freeverb = new Tone.Freeverb(0.4);\n\t\t */\n\t\tTone.JCReverb = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"roomSize\"], Tone.JCReverb.defaults);\n\t\t\tTone.StereoEffect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  room size control values between [0,1]\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.roomSize = new Tone.Signal(options.roomSize, Tone.Signal.Units.Normal);\n\n\t\t\t/**\n\t\t\t *  scale the room size\n\t\t\t *  @type {Tone.Scale}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._scaleRoomSize = new Tone.Scale(-0.733, 0.197);\n\n\t\t\t/**\n\t\t\t *  a series of allpass filters\n\t\t\t *  @type {Array.<BiquadFilterNode>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._allpassFilters = [];\n\n\t\t\t/**\n\t\t\t *  parallel feedback comb filters\n\t\t\t *  @type {Array.<Tone.FeedbackCombFilter>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._feedbackCombFilters = [];\n\n\t\t\t//make the allpass filters\n\t\t\tfor (var af = 0; af < allpassFilterFreqs.length; af++) {\n\t\t\t\tvar allpass = this.context.createBiquadFilter();\n\t\t\t\tallpass.type = \"allpass\";\n\t\t\t\tallpass.frequency.value = allpassFilterFreqs[af];\n\t\t\t\tthis._allpassFilters.push(allpass);\n\t\t\t}\n\n\t\t\t//and the comb filters\n\t\t\tfor (var cf = 0; cf < combFilterDelayTimes.length; cf++) {\n\t\t\t\tvar fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);\n\t\t\t\tthis._scaleRoomSize.connect(fbcf.resonance);\n\t\t\t\tfbcf.resonance.value = combFilterResonances[cf];\n\t\t\t\tthis._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);\n\t\t\t\tif (cf < combFilterDelayTimes.length / 2){\n\t\t\t\t\tfbcf.connect(this.effectReturnL);\n\t\t\t\t} else {\n\t\t\t\t\tfbcf.connect(this.effectReturnR);\n\t\t\t\t}\n\t\t\t\tthis._feedbackCombFilters.push(fbcf);\n\t\t\t}\n\n\t\t\t//chain the allpass filters together\n\t\t\tthis.roomSize.connect(this._scaleRoomSize);\n\t\t\tthis.connectSeries.apply(this, this._allpassFilters);\n\t\t\tthis.effectSendL.connect(this._allpassFilters[0]);\n\t\t\tthis.effectSendR.connect(this._allpassFilters[0]);\n\t\t};\n\n\t\tTone.extend(Tone.JCReverb, Tone.StereoEffect);\n\n\t\t/**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.JCReverb.defaults = {\n\t\t\t\"roomSize\" : 0.5\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.JCReverb} `this`\n\t\t */\n\t\tTone.JCReverb.prototype.dispose = function(){\n\t\t\tTone.StereoEffect.prototype.dispose.call(this);\n\t\t\tfor (var apf = 0; apf < this._allpassFilters.length; apf++) {\n\t\t\t\tthis._allpassFilters[apf].disconnect();\n\t\t\t\tthis._allpassFilters[apf] = null;\n\t\t\t}\n\t\t\tthis._allpassFilters = null;\n\t\t\tfor (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {\n\t\t\t\tthis._feedbackCombFilters[fbcf].dispose();\n\t\t\t\tthis._feedbackCombFilters[fbcf] = null;\n\t\t\t}\n\t\t\tthis._feedbackCombFilters = null;\n\t\t\tthis.roomSize.dispose();\n\t\t\tthis.roomSize = null;\n\t\t\tthis._scaleRoomSize.dispose();\n\t\t\tthis._scaleRoomSize = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.JCReverb;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Applies a Mid/Side seperation and recombination\n\t\t *         http://musicdsp.org/showArchiveComment.php?ArchiveID=173\n\t\t *         http://www.kvraudio.com/forum/viewtopic.php?t=212587\n\t\t *         M = (L+R)/sqrt(2);   // obtain mid-signal from left and right\n\t\t *         S = (L-R)/sqrt(2);   // obtain side-signal from left and righ\n\t\t *         // amplify mid and side signal seperately:\n\t\t *         M/S send/return\n\t\t *         L = (M+S)/sqrt(2);   // obtain left signal from mid and side\n\t\t *         R = (M-S)/sqrt(2);   // obtain right signal from mid and side\n\t\t *\n\t\t *  @extends {Tone.StereoEffect}\n\t\t *  @constructor\n\t\t */\n\t\tTone.MidSideEffect = function(){\n\t\t\tTone.StereoEffect.call(this);\n\n\t\t\t/**\n\t\t\t *  a constant signal equal to 1 / sqrt(2)\n\t\t\t *  @type {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sqrtTwo = new Tone.Signal(1 / Math.sqrt(2));\n\n\t\t\t/**\n\t\t\t *  the mid send.\n\t\t\t *  connect to mid processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t\t\tthis.midSend = new Tone.Expr(\"($0 + $1) * $2\");\n\n\t\t\t/**\n\t\t\t *  the side send.\n\t\t\t *  connect to side processing\n\t\t\t *  @type {Tone.Expr}\n\t\t\t */\n\t\t\tthis.sideSend = new Tone.Expr(\"($0 - $1) * $2\");\n\n\t\t\t/**\n\t\t\t *  recombine the mid/side into Left\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._left = new Tone.Expr(\"($0 + $1) * $2\");\n\n\t\t\t/**\n\t\t\t *  recombine the mid/side into Right\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._right = new Tone.Expr(\"($0 - $1) * $2\");\n\n\t\t\t/**\n\t\t\t *  the mid return connection\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.midReturn = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the side return connection\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.sideReturn = this.context.createGain();\n\n\t\t\t//connections\n\t\t\tthis.effectSendL.connect(this.midSend, 0, 0);\n\t\t\tthis.effectSendR.connect(this.midSend, 0, 1);\n\t\t\tthis.effectSendL.connect(this.sideSend, 0, 0);\n\t\t\tthis.effectSendR.connect(this.sideSend, 0, 1);\n\t\t\tthis._left.connect(this.effectReturnL);\n\t\t\tthis._right.connect(this.effectReturnR);\n\t\t\tthis.midReturn.connect(this._left, 0, 0);\n\t\t\tthis.sideReturn.connect(this._left, 0, 1);\n\t\t\tthis.midReturn.connect(this._right, 0, 0);\n\t\t\tthis.sideReturn.connect(this._right, 0, 1);\n\t\t\tthis._sqrtTwo.connect(this.midSend, 0, 2);\n\t\t\tthis._sqrtTwo.connect(this.sideSend, 0, 2);\n\t\t\tthis._sqrtTwo.connect(this._left, 0, 2);\n\t\t\tthis._sqrtTwo.connect(this._right, 0, 2);\n\t\t};\n\n\t\tTone.extend(Tone.MidSideEffect, Tone.StereoEffect);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.MidSideEffect} `this`\n\t\t */\n\t\tTone.MidSideEffect.prototype.dispose = function(){\n\t\t\tTone.StereoEffect.prototype.dispose.call(this);\n\t\t\tthis._sqrtTwo.dispose();\n\t\t\tthis._sqrtTwo = null;\n\t\t\tthis.midSend.dispose();\n\t\t\tthis.midSend = null;\n\t\t\tthis.sideSend.dispose();\n\t\t\tthis.sideSend = null;\n\t\t\tthis._left.dispose();\n\t\t\tthis._left = null;\n\t\t\tthis._right.dispose();\n\t\t\tthis._right = null;\n\t\t\tthis.midReturn.disconnect();\n\t\t\tthis.midReturn = null;\n\t\t\tthis.sideReturn.disconnect();\n\t\t\tthis.sideReturn = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.MidSideEffect;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A Phaser effect. inspiration from https://github.com/Dinahmoe/tuna/\n\t\t *\n\t\t *\t@extends {Tone.StereoEffect}\n\t\t *\t@constructor\n\t\t *\t@param {number|Object} [frequency=0.5] the speed of the phasing\n\t\t *\t@param {number} [depth=10] the depth of the effect\n\t\t *\t@param {number} [baseFrequency=400] the base frequency of the filters\n\t\t *\t@example\n\t\t * \tvar phaser = new Tone.Phaser(0.4, 12, 550);\n\t\t */\n\t\tTone.Phaser = function(){\n\n\t\t\t//set the defaults\n\t\t\tvar options = this.optionsObject(arguments, [\"frequency\", \"depth\", \"baseFrequency\"], Tone.Phaser.defaults);\n\t\t\tTone.StereoEffect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the lfo which controls the frequency on the left side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._lfoL = new Tone.LFO(options.frequency, 0, 1);\n\n\t\t\t/**\n\t\t\t *  the lfo which controls the frequency on the right side\n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._lfoR = new Tone.LFO(options.frequency, 0, 1);\n\t\t\tthis._lfoR.phase = 180;\n\n\t\t\t/**\n\t\t\t *  the base modulation frequency\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._baseFrequency = options.baseFrequency;\n\n\t\t\t/**\n\t\t\t *  the depth of the phasing\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._depth = options.depth;\n\t\t\t\n\t\t\t/**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array.<Tone.Filter>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._filtersL = this._makeFilters(options.stages, this._lfoL, options.Q);\n\n\t\t\t/**\n\t\t\t *  the array of filters for the left side\n\t\t\t *  @type {Array.<Tone.Filter>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._filtersR = this._makeFilters(options.stages, this._lfoR, options.Q);\n\n\t\t\t/**\n\t\t\t * the frequency of the effect\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = this._lfoL.frequency;\n\t\t\tthis.frequency.value = options.frequency;\n\t\t\t\n\t\t\t//connect them up\n\t\t\tthis.effectSendL.connect(this._filtersL[0]);\n\t\t\tthis.effectSendR.connect(this._filtersR[0]);\n\t\t\tthis._filtersL[options.stages - 1].connect(this.effectReturnL);\n\t\t\tthis._filtersR[options.stages - 1].connect(this.effectReturnR);\n\t\t\tthis.effectSendL.connect(this.effectReturnL);\n\t\t\tthis.effectSendR.connect(this.effectReturnR);\n\t\t\t//control the frequency with one LFO\n\t\t\tthis._lfoL.frequency.connect(this._lfoR.frequency);\n\t\t\t//set the options\n\t\t\tthis.baseFrequency = options.baseFrequency;\n\t\t\tthis.depth = options.depth;\n\t\t\t//start the lfo\n\t\t\tthis._lfoL.start();\n\t\t\tthis._lfoR.start();\n\t\t};\n\n\t\tTone.extend(Tone.Phaser, Tone.StereoEffect);\n\n\t\t/**\n\t\t *  defaults\n\t\t *  @static\n\t\t *  @type {object}\n\t\t */\n\t\tTone.Phaser.defaults = {\n\t\t\t\"frequency\" : 0.5,\n\t\t\t\"depth\" : 10,\n\t\t\t\"stages\" : 4,\n\t\t\t\"Q\" : 100,\n\t\t\t\"baseFrequency\" : 400,\n\t\t};\n\n\t\t/**\n\t\t *  @param {number} stages\n\t\t *  @returns {Array} the number of filters all connected together\n\t\t *  @private\n\t\t */\n\t\tTone.Phaser.prototype._makeFilters = function(stages, connectToFreq, Q){\n\t\t\tvar filters = new Array(stages);\n\t\t\t//make all the filters\n\t\t\tfor (var i = 0; i < stages; i++){\n\t\t\t\tvar filter = this.context.createBiquadFilter();\n\t\t\t\tfilter.type = \"allpass\";\n\t\t\t\tfilter.Q.value = Q;\n\t\t\t\tconnectToFreq.connect(filter.frequency);\n\t\t\t\tfilters[i] = filter;\n\t\t\t}\n\t\t\tthis.connectSeries.apply(this, filters);\n\t\t\treturn filters;\n\t\t};\n\n\t\t/**\n\t\t * The depth of the effect. \n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {number}\n\t\t * @name depth\n\t\t */\n\t\tObject.defineProperty(Tone.Phaser.prototype, \"depth\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._depth;\n\t\t\t},\n\t\t\tset : function(depth){\n\t\t\t\tthis._depth = depth;\n\t\t\t\tvar max = this._baseFrequency + this._baseFrequency * depth;\n\t\t\t\tthis._lfoL.max = max;\n\t\t\t\tthis._lfoR.max = max;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The the base frequency of the filters. \n\t\t * @memberOf Tone.Phaser#\n\t\t * @type {string}\n\t\t * @name baseFrequency\n\t\t */\n\t\tObject.defineProperty(Tone.Phaser.prototype, \"baseFrequency\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._baseFrequency;\n\t\t\t},\n\t\t\tset : function(freq){\n\t\t\t\tthis._baseFrequency = freq;\t\n\t\t\t\tthis._lfoL.min = freq;\n\t\t\t\tthis._lfoR.min = freq;\n\t\t\t\tthis.depth = this._depth;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Phaser} `this`\n\t\t */\n\t\tTone.Phaser.prototype.dispose = function(){\n\t\t\tTone.StereoEffect.prototype.dispose.call(this);\n\t\t\tthis._lfoL.dispose();\n\t\t\tthis._lfoL = null;\n\t\t\tthis._lfoR.dispose();\n\t\t\tthis._lfoR = null;\n\t\t\tfor (var i = 0; i < this._filtersL.length; i++){\n\t\t\t\tthis._filtersL[i].disconnect();\n\t\t\t\tthis._filtersL[i] = null;\n\t\t\t}\n\t\t\tthis._filtersL = null;\n\t\t\tfor (var j = 0; j < this._filtersR.length; j++){\n\t\t\t\tthis._filtersR[j].disconnect();\n\t\t\t\tthis._filtersR[j] = null;\n\t\t\t}\n\t\t\tthis._filtersR = null;\n\t\t\tthis.frequency = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Phaser;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  PingPongDelay is a dual delay effect where the echo is heard\n\t\t *          first in one channel and next in the opposite channel\n\t\t *\n\t\t * \t@constructor\n\t\t * \t@extends {Tone.StereoXFeedbackEffect}\n\t\t *  @param {Tone.Time|Object} [delayTime=0.25] is the interval between consecutive echos\n\t\t *  @param {number=} feedback The amount of the effected signal which \n\t\t *                            is fed back through the delay.\n\t\t *  @example\n\t\t *  var pingPong = new Tone.PingPongDelay(\"4n\", 0.2);\n\t\t */\n\t\tTone.PingPongDelay = function(){\n\t\t\t\n\t\t\tvar options = this.optionsObject(arguments, [\"delayTime\", \"feedback\"], Tone.PingPongDelay.defaults);\n\t\t\tTone.StereoXFeedbackEffect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the delay node on the left side\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._leftDelay = this.context.createDelay(options.maxDelayTime);\n\n\t\t\t/**\n\t\t\t *  the delay node on the right side\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._rightDelay = this.context.createDelay(options.maxDelayTime);\n\n\t\t\t/**\n\t\t\t *  the predelay on the right side\n\t\t\t *  @type {DelayNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._rightPreDelay = this.context.createDelay(options.maxDelayTime);\n\n\t\t\t/**\n\t\t\t *  the delay time signal\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.delayTime = new Tone.Signal(options.delayTime, Tone.Signal.Units.Time);\n\n\t\t\t//connect it up\n\t\t\tthis.effectSendL.chain(this._leftDelay, this.effectReturnL);\n\t\t\tthis.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);\n\t\t\tthis.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n\t\t\t//rearranged the feedback to be after the rightPreDelay\n\t\t\tthis._feedbackLR.disconnect();\n\t\t\tthis._feedbackLR.connect(this._rightDelay);\n\t\t};\n\n\t\tTone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.PingPongDelay.defaults = {\n\t\t\t\"delayTime\" : 0.25,\n\t\t\t\"maxDelayTime\" : 1\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.PingPongDelay} `this`\n\t\t */\n\t\tTone.PingPongDelay.prototype.dispose = function(){\n\t\t\tTone.StereoXFeedbackEffect.prototype.dispose.call(this);\n\t\t\tthis._leftDelay.disconnect();\n\t\t\tthis._leftDelay = null;\n\t\t\tthis._rightDelay.disconnect();\n\t\t\tthis._rightDelay = null;\n\t\t\tthis._rightPreDelay.disconnect();\n\t\t\tthis._rightPreDelay = null;\n\t\t\tthis.delayTime.dispose();\n\t\t\tthis.delayTime = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.PingPongDelay;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A stereo feedback effect where the feedback is on the same channel\n\t\t *\n\t\t *\t@constructor\n\t\t *\t@extends {Tone.FeedbackEffect}\n\t\t */\n\t\tTone.StereoFeedbackEffect = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"feedback\"], Tone.FeedbackEffect.defaults);\n\t\t\tTone.StereoEffect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  controls the amount of feedback\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.feedback = new Tone.Signal(options.feedback);\n\n\t\t\t/**\n\t\t\t *  the left side feeback\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._feedbackL = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the right side feeback\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._feedbackR = this.context.createGain();\n\n\t\t\t//connect it up\n\t\t\tthis.effectReturnL.chain(this._feedbackL, this.effectSendL);\n\t\t\tthis.effectReturnR.chain(this._feedbackR, this.effectSendR);\n\t\t\tthis.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n\t\t};\n\n\t\tTone.extend(Tone.StereoFeedbackEffect, Tone.FeedbackEffect);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoFeedbackEffect} `this`\n\t\t */\n\t\tTone.StereoFeedbackEffect.prototype.dispose = function(){\n\t\t\tTone.StereoEffect.prototype.dispose.call(this);\n\t\t\tthis.feedback.dispose();\n\t\t\tthis.feedback = null;\n\t\t\tthis._feedbackL.disconnect();\n\t\t\tthis._feedbackL = null;\n\t\t\tthis._feedbackR.disconnect();\n\t\t\tthis._feedbackR = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.StereoFeedbackEffect;\n\t});\n\tToneModule( \n\t\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Applies a width factor (0-1) to the mid/side seperation. \n\t\t *         0 is all mid and 1 is all side. <br><br>\n\t\t *         http://musicdsp.org/showArchiveComment.php?ArchiveID=173<br><br>\n\t\t *         http://www.kvraudio.com/forum/viewtopic.php?t=212587<br><br>\n\t\t *         M *= 2*(1-width)<br><br>\n\t\t *         S *= 2*width<br><br>\n\t\t *\n\t\t *  @extends {Tone.MidSideEffect}\n\t\t *  @constructor\n\t\t *  @param {number|Object} [width=0.5] the stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.\n\t\t */\n\t\tTone.StereoWidener = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"width\"], Tone.StereoWidener.defaults);\n\t\t\tTone.MidSideEffect.call(this, options);\n\n\t\t\t/**\n\t\t\t *  The width control. 0 = 100% mid. 1 = 100% side. \n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.width = new Tone.Signal(0.5, Tone.Signal.Units.Normal);\n\n\t\t\t/**\n\t\t\t *  Mid multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._midMult = new Tone.Expr(\"$0 * ($1 * (1 - $2))\");\n\n\t\t\t/**\n\t\t\t *  Side multiplier\n\t\t\t *  @type {Tone.Expr}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sideMult = new Tone.Expr(\"$0 * ($1 * $2)\");\n\n\t\t\t/**\n\t\t\t *  constant output of 2\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._two = new Tone.Signal(2);\n\n\t\t\t//the mid chain\n\t\t\tthis._two.connect(this._midMult, 0, 1);\n\t\t\tthis.width.connect(this._midMult, 0, 2);\n\t\t\t//the side chain\n\t\t\tthis._two.connect(this._sideMult, 0, 1);\n\t\t\tthis.width.connect(this._sideMult, 0, 2);\n\t\t\t//connect it to the effect send/return\n\t\t\tthis.midSend.chain(this._midMult, this.midReturn);\n\t\t\tthis.sideSend.chain(this._sideMult, this.sideReturn);\n\t\t};\n\n\t\tTone.extend(Tone.StereoWidener, Tone.MidSideEffect);\n\n\t\t/**\n\t\t *  the default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.StereoWidener.defaults = {\n\t\t\t\"width\" : 0.5\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.StereoWidener} `this`\n\t\t */\n\t\tTone.StereoWidener.prototype.dispose = function(){\n\t\t\tTone.MidSideEffect.prototype.dispose.call(this);\n\t\t\tthis.width.dispose();\n\t\t\tthis.width = null;\n\t\t\tthis._midMult.dispose();\n\t\t\tthis._midMult = null;\n\t\t\tthis._sideMult.dispose();\n\t\t\tthis._sideMult = null;\n\t\t\tthis._two.dispose();\n\t\t\tthis._two = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.StereoWidener;\n\t});\n\tToneModule(\n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Pulse Oscillator with control over width\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @param {number} [frequency=440] the frequency of the oscillator\n\t\t *  @param {number} [width = 0.2] the width of the pulse\n\t\t *  @example\n\t\t *  var pulse = new Tone.PulseOscillator(\"E5\", 0.4);\n\t\t */\n\t\tTone.PulseOscillator = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"frequency\", \"width\"], Tone.Oscillator.defaults);\n\t\t\tTone.Source.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the width of the pulse\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.width = new Tone.Signal(options.width, Tone.Signal.Units.Normal);\n\n\t\t\t/**\n\t\t\t *  gate the width amount\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._widthGate = this.context.createGain();\n\n\t\t\t/**\n\t\t\t *  the sawtooth oscillator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sawtooth = new Tone.Oscillator({\n\t\t\t\tfrequency : options.frequency,\n\t\t\t\tdetune : options.detune,\n\t\t\t\ttype : \"sawtooth\",\n\t\t\t\tphase : options.phase\n\t\t\t});\n\n\t\t\t/**\n\t\t\t *  The frequency in hertz\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = this._sawtooth.frequency;\n\n\t\t\t/**\n\t\t\t *  The detune in cents. \n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.detune = this._sawtooth.detune;\n\n\t\t\t/**\n\t\t\t *  Threshold the signal to turn it into a square\n\t\t\t *  @type {Tone.WaveShaper}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._thresh = new Tone.WaveShaper(function(val){\n\t\t\t\tif (val < 0){\n\t\t\t\t\treturn -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//connections\n\t\t\tthis._sawtooth.chain(this._thresh, this.output);\n\t\t\tthis.width.chain(this._widthGate, this._thresh);\n\t\t};\n\n\t\tTone.extend(Tone.PulseOscillator, Tone.Oscillator);\n\n\t\t/**\n\t\t *  The default parameters.\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.PulseOscillator.defaults = {\n\t\t\t\"frequency\" : 440,\n\t\t\t\"detune\" : 0,\n\t\t\t\"phase\" : 0,\n\t\t\t\"width\" : 0.2,\n\t\t};\n\n\t\t/**\n\t\t *  start the oscillator\n\t\t *  @param  {Tone.Time} time \n\t\t *  @private\n\t\t */\n\t\tTone.PulseOscillator.prototype._start = function(time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis._sawtooth.start(time);\n\t\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t\t};\n\n\t\t/**\n\t\t *  stop the oscillator\n\t\t *  @param  {Tone.Time} time \n\t\t *  @private\n\t\t */\n\t\tTone.PulseOscillator.prototype._stop = function(time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis._sawtooth.stop(time);\n\t\t\t//the width is still connected to the output. \n\t\t\t//that needs to be stopped also\n\t\t\tthis._widthGate.gain.setValueAtTime(0, time);\n\t\t};\n\n\t\t/**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t\tObject.defineProperty(Tone.PulseOscillator.prototype, \"phase\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._sawtooth.phase;\n\t\t\t}, \n\t\t\tset : function(phase){\n\t\t\t\tthis._sawtooth.phase = phase;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The type of the oscillator. Always returns \"pulse\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PulseOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t\tObject.defineProperty(Tone.PulseOscillator.prototype, \"type\", {\n\t\t\tget : function(){\n\t\t\t\treturn \"pulse\";\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  Clean up method\n\t\t *  @return {Tone.PulseOscillator} `this`\n\t\t */\n\t\tTone.PulseOscillator.prototype.dispose = function(){\n\t\t\tTone.Source.prototype.dispose.call(this);\n\t\t\tthis._sawtooth.dispose();\n\t\t\tthis._sawtooth = null;\n\t\t\tthis.width.dispose();\n\t\t\tthis.width = null;\n\t\t\tthis._widthGate.disconnect();\n\t\t\tthis._widthGate = null;\n\t\t\tthis._thresh.disconnect();\n\t\t\tthis._thresh = null;\n\t\t\tthis.frequency = null;\n\t\t\tthis.detune = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.PulseOscillator;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class takes an array of Oscillator descriptions and mixes them together\n\t\t *         with the same detune and frequency controls. \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {frequency} frequency frequency of the oscillator (meaningless for noise types)\n\t\t *  @param {number} modulationFrequency the modulation frequency of the oscillator\n\t\t *  @example\n\t\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3);\n\t\t */\n\t\tTone.PWMOscillator = function(){\n\t\t\tvar options = this.optionsObject(arguments, [\"frequency\", \"modulationFrequency\"], Tone.PWMOscillator.defaults);\n\t\t\tTone.Source.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the pulse oscillator\n\t\t\t */\n\t\t\tthis._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t\t\t//change the pulse oscillator type\n\t\t\tthis._pulse._sawtooth.type = \"sine\";\n\n\t\t\t/**\n\t\t\t *  the modulator\n\t\t\t *  @type {Tone.Oscillator}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._modulator = new Tone.Oscillator({\n\t\t\t\t\"frequency\" : options.frequency,\n\t\t\t\t\"detune\" : options.detune\n\t\t\t});\n\n\t\t\t/**\n\t\t\t *  Scale the oscillator so it doesn't go silent \n\t\t\t *  at the extreme values.\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._scale = new Tone.Multiply(1.01);\n\n\t\t\t/**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = this._modulator.frequency;\n\n\t\t\t/**\n\t\t\t *  the detune control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.detune = this._modulator.detune;\n\n\t\t\t/**\n\t\t\t *  the modulation rate of the oscillator\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.modulationFrequency = this._pulse.frequency;\t\n\n\t\t\t//connections\n\t\t\tthis._modulator.chain(this._scale, this._pulse.width);\n\t\t\tthis._pulse.connect(this.output);\n\t\t};\n\n\t\tTone.extend(Tone.PWMOscillator, Tone.Oscillator);\n\n\t\t/**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t\tTone.PWMOscillator.defaults = {\n\t\t\t\"frequency\" : 440,\n\t\t\t\"detune\" : 0,\n\t\t\t\"modulationFrequency\" : 0.4,\n\t\t};\n\n\t\t/**\n\t\t *  start the oscillator\n\t\t *  @param  {Tone.Time} [time=now]\n\t\t *  @private\n\t\t */\n\t\tTone.PWMOscillator.prototype._start = function(time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis._modulator.start(time);\n\t\t\tthis._pulse.start(time);\n\t\t};\n\n\t\t/**\n\t\t *  stop the oscillator\n\t\t *  @param  {Tone.Time} time (optional) timing parameter\n\t\t *  @private\n\t\t */\n\t\tTone.PWMOscillator.prototype._stop = function(time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis._modulator.stop(time);\n\t\t\tthis._pulse.stop(time);\n\t\t};\n\n\t\t/**\n\t\t * The type of the oscillator. Always returns \"pwm\".\n\t\t * @readOnly\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t\tObject.defineProperty(Tone.PWMOscillator.prototype, \"type\", {\n\t\t\tget : function(){\n\t\t\t\treturn \"pwm\";\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The phase of the oscillator in degrees.\n\t\t * @memberOf Tone.PWMOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t\tObject.defineProperty(Tone.PWMOscillator.prototype, \"phase\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._modulator.phase;\n\t\t\t}, \n\t\t\tset : function(phase){\n\t\t\t\tthis._modulator.phase = phase;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @return {Tone.PWMOscillator} `this`\n\t\t */\n\t\tTone.PWMOscillator.prototype.dispose = function(){\n\t\t\tTone.Source.prototype.dispose.call(this);\n\t\t\tthis._pulse.dispose();\n\t\t\tthis._pulse = null;\n\t\t\tthis._scale.dispose();\n\t\t\tthis._scale = null;\n\t\t\tthis._modulator.dispose();\n\t\t\tthis._modulator = null;\n\t\t\tthis.frequency = null;\n\t\t\tthis.detune = null;\n\t\t\tthis.modulationFrequency = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.PWMOscillator;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t\t *         and Tone.PWMOscillator which allows it to have the types: \n\t\t *         sine, square, triangle, sawtooth, pulse or pwm. \n\t\t *\n\t\t *  @extends {Tone.Oscillator}\n\t\t *  @constructor\n\t\t *  @param {frequency} frequency frequency of the oscillator (meaningless for noise types)\n\t\t *  @param {string} type the type of the oscillator\n\t\t *  @example\n\t\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t\t */\n\t\tTone.OmniOscillator = function(){\n\t\t\tvar options = this.optionsObject(arguments, [\"frequency\", \"type\"], Tone.OmniOscillator.defaults);\n\t\t\tTone.Source.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Signal.Units.Frequency);\n\n\t\t\t/**\n\t\t\t *  the detune control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.detune = new Tone.Signal(options.detune);\n\n\t\t\t/**\n\t\t\t *  the type of the oscillator source\n\t\t\t *  @type {string}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sourceType = undefined;\n\n\t\t\t/**\n\t\t\t *  the oscillator\n\t\t\t *  @type {Tone.Oscillator|Tone.PWMOscillator|Tone.PulseOscillator}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._oscillator = null;\n\n\t\t\t//set the oscillator\n\t\t\tthis.type = options.type;\n\t\t};\n\n\t\tTone.extend(Tone.OmniOscillator, Tone.Oscillator);\n\n\t\t/**\n\t\t *  default values\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t *  @const\n\t\t */\n\t\tTone.OmniOscillator.defaults = {\n\t\t\t\"frequency\" : 440,\n\t\t\t\"detune\" : 0,\n\t\t\t\"type\" : \"sine\",\n\t\t\t\"width\" : 0.4, //only applies if the oscillator is set to \"pulse\",\n\t\t\t\"modulationFrequency\" : 0.4, //only applies if the oscillator is set to \"pwm\",\n\t\t};\n\n\t\t/**\n\t\t *  @enum {string}\n\t\t *  @private\n\t\t */\n\t\tvar OmniOscType = {\n\t\t\tPulseOscillator : \"PulseOscillator\",\n\t\t\tPWMOscillator : \"PWMOscillator\",\n\t\t\tOscillator : \"Oscillator\"\n\t\t};\n\n\t\t/**\n\t\t *  start the oscillator\n\t\t *  @param {Tone.Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t\tTone.OmniOscillator.prototype._start = function(time){\n\t\t\tthis._oscillator.start(time);\n\t\t};\n\n\t\t/**\n\t\t *  start the oscillator\n\t\t *  @param {Tone.Time} [time=now] the time to start the oscillator\n\t\t *  @private\n\t\t */\n\t\tTone.OmniOscillator.prototype._stop = function(time){\n\t\t\tthis._oscillator.stop(time);\n\t\t};\n\n\t\t/**\n\t\t * The type of the oscillator. sine, square, triangle, sawtooth, pwm, or pulse. \n\t\t *  \n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {string}\n\t\t * @name type\n\t\t */\n\t\tObject.defineProperty(Tone.OmniOscillator.prototype, \"type\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._oscillator.type;\n\t\t\t}, \n\t\t\tset : function(type){\n\t\t\t\tif (type === \"sine\" || type === \"square\" || type === \"triangle\" || type === \"sawtooth\"){\n\t\t\t\t\tif (this._sourceType !== OmniOscType.Oscillator){\n\t\t\t\t\t\tthis._sourceType = OmniOscType.Oscillator;\n\t\t\t\t\t\tthis._createNewOscillator(Tone.Oscillator);\n\t\t\t\t\t}\n\t\t\t\t\tthis._oscillator.type = type;\n\t\t\t\t} else if (type === \"pwm\"){\n\t\t\t\t\tif (this._sourceType !== OmniOscType.PWMOscillator){\n\t\t\t\t\t\tthis._sourceType = OmniOscType.PWMOscillator;\n\t\t\t\t\t\tthis._createNewOscillator(Tone.PWMOscillator);\n\t\t\t\t\t}\n\t\t\t\t} else if (type === \"pulse\"){\n\t\t\t\t\tif (this._sourceType !== OmniOscType.PulseOscillator){\n\t\t\t\t\t\tthis._sourceType = OmniOscType.PulseOscillator;\n\t\t\t\t\t\tthis._createNewOscillator(Tone.PulseOscillator);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError(\"Tone.OmniOscillator does not support type \"+type);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  connect the oscillator to the frequency and detune signals\n\t\t *  @private\n\t\t */\n\t\tTone.OmniOscillator.prototype._createNewOscillator = function(OscillatorConstructor){\n\t\t\t//short delay to avoid clicks on the change\n\t\t\tvar now = this.now() + this.bufferTime;\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tvar oldOsc = this._oscillator;\n\t\t\t\toldOsc.stop(now);\n\t\t\t\toldOsc.onended = function(){\n\t\t\t\t\toldOsc.dispose();\n\t\t\t\t\toldOsc = null;\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis._oscillator = new OscillatorConstructor();\n\t\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\t\tthis.detune.connect(this._oscillator.detune);\n\t\t\tthis._oscillator.connect(this.output);\n\t\t\tif (this.state === Tone.Source.State.STARTED){\n\t\t\t\tthis._oscillator.start(now);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * The phase of the oscillator in degrees\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {number}\n\t\t * @name phase\n\t\t */\n\t\tObject.defineProperty(Tone.OmniOscillator.prototype, \"phase\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._oscillator.phase;\n\t\t\t}, \n\t\t\tset : function(phase){\n\t\t\t\tthis._oscillator.phase = phase;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The width of the oscillator (only if the oscillator is set to pulse)\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Tone.Signal}\n\t\t * @name width\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t\t * //can access the width attribute only if type === \"pulse\"\n\t\t * omniOsc.width.value = 0.2; \n\t\t */\n\t\tObject.defineProperty(Tone.OmniOscillator.prototype, \"width\", {\n\t\t\tget : function(){\n\t\t\t\tif (this._sourceType === OmniOscType.PulseOscillator){\n\t\t\t\t\treturn this._oscillator.width;\n\t\t\t\t} \n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The modulationFrequency Signal of the oscillator \n\t\t * (only if the oscillator type is set to pwm).\n\t\t * @memberOf Tone.OmniOscillator#\n\t\t * @type {Tone.Signal}\n\t\t * @name modulationFrequency\n\t\t * @example\n\t\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t\t * omniOsc.modulationFrequency.value = 0.2; \n\t\t */\n\t\tObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationFrequency\", {\n\t\t\tget : function(){\n\t\t\t\tif (this._sourceType === OmniOscType.PWMOscillator){\n\t\t\t\t\treturn this._oscillator.modulationFrequency;\n\t\t\t\t} \n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @return {Tone.OmniOscillator} `this`\n\t\t */\n\t\tTone.OmniOscillator.prototype.dispose = function(){\n\t\t\tTone.Source.prototype.dispose.call(this);\n\t\t\tthis.detune.dispose();\n\t\t\tthis.detune = null;\n\t\t\tthis.frequency.dispose();\n\t\t\tthis.frequency = null;\n\t\t\tthis._oscillator.dispose();\n\t\t\tthis._oscillator = null;\n\t\t\tthis._sourceType = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.OmniOscillator;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Base-class for all instruments\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t */\n\t\tTone.Instrument = function(){\n\n\t\t\t/**\n\t\t\t *  the output\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis.output = this.context.createGain();\n\n\t\t\t/**\n\t\t\t * the volume of the output in decibels\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.volume = new Tone.Signal(this.output.gain, Tone.Signal.Units.Decibels);\n\t\t};\n\n\t\tTone.extend(Tone.Instrument);\n\n\t\t/**\n\t\t *  @abstract\n\t\t *  @param {string|number} note the note to trigger\n\t\t *  @param {Tone.Time} [time=now] the time to trigger the ntoe\n\t\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t\t */\n\t\tTone.Instrument.prototype.triggerAttack = function(){};\n\n\t\t/**\n\t\t *  @abstract\n\t\t *  @param {Tone.Time} [time=now] when to trigger the release\n\t\t */\n\t\tTone.Instrument.prototype.triggerRelease = function(){};\n\n\t\t/**\n\t\t *  trigger the attack and then the release\n\t\t *  @param  {string|number} note     the note to trigger\n\t\t *  @param  {Tone.Time} duration the duration of the note\n\t\t *  @param {Tone.Time} [time=now]     the time of the attack\n\t\t *  @param  {number} velocity the velocity\n\t\t *  @returns {Tone.Instrument} `this`\n\t\t */\n\t\tTone.Instrument.prototype.triggerAttackRelease = function(note, duration, time, velocity){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tduration = this.toSeconds(duration);\n\t\t\tthis.triggerAttack(note, time, velocity);\n\t\t\tthis.triggerRelease(time + duration);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Instrument} `this`\n\t\t */\n\t\tTone.Instrument.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.volume.dispose();\n\t\t\tthis.volume = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Instrument;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  this is a base class for monophonic instruments. \n\t\t *          it defines their interfaces\n\t\t *\n\t\t *  @constructor\n\t\t *  @abstract\n\t\t *  @extends {Tone.Instrument}\n\t\t */\n\t\tTone.Monophonic = function(options){\n\n\t\t\tTone.Instrument.call(this);\n\n\t\t\t//get the defaults\n\t\t\toptions = this.defaultArg(options, Tone.Monophonic.defaults);\n\n\t\t\t/**\n\t\t\t *  The glide time between notes. \n\t\t\t *  @type {Tone.Time}\n\t\t\t */\n\t\t\tthis.portamento = options.portamento;\n\t\t};\n\n\t\tTone.extend(Tone.Monophonic, Tone.Instrument);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Monophonic.defaults = {\n\t\t\t\"portamento\" : 0\n\t\t};\n\n\t\t/**\n\t\t *  trigger the attack. start the note, at the time with the velocity\n\t\t *  \n\t\t *  @param  {string|string} note     the note\n\t\t *  @param  {Tone.Time} [time=now]     the time, if not given is now\n\t\t *  @param  {number} [velocity=1] velocity defaults to 1\n\t\t *  @returns {Tone.Monophonic} `this`\n\t\t */\n\t\tTone.Monophonic.prototype.triggerAttack = function(note, time, velocity) {\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis.triggerEnvelopeAttack(time, velocity);\n\t\t\tthis.setNote(note, time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  trigger the release portion of the envelope\n\t\t *  @param  {Tone.Time} [time=now] if no time is given, the release happens immediatly\n\t\t *  @returns {Tone.Monophonic} `this`\n\t\t */\n\t\tTone.Monophonic.prototype.triggerRelease = function(time){\n\t\t\tthis.triggerEnvelopeRelease(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @param {Tone.Time} [time=now] the time the attack should happen\n\t\t *  @param {number} [velocity=1] the velocity of the envelope\n\t\t *  @returns {Tone.Monophonic} `this`\n\t\t */\t\n\t\tTone.Monophonic.prototype.triggerEnvelopeAttack = function() {};\n\n\t\t/**\n\t\t *  override this method with the actual method\n\t\t *  @abstract\n\t\t *  @param {Tone.Time} [time=now] the time the attack should happen\n\t\t *  @param {number} [velocity=1] the velocity of the envelope\n\t\t *  @returns {Tone.Monophonic} `this`\n\t\t */\t\n\t\tTone.Monophonic.prototype.triggerEnvelopeRelease = function() {};\n\n\t\t/**\n\t\t *  set the note to happen at a specific time\n\t\t *  @param {number|string} note if the note is a string, it will be \n\t\t *                              parsed as (NoteName)(Octave) i.e. A4, C#3, etc\n\t\t *                              otherwise it will be considered as the frequency\n\t\t *  @returns {Tone.Monophonic} `this`\n\t\t */\n\t\tTone.Monophonic.prototype.setNote = function(note, time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tif (this.portamento > 0){\n\t\t\t\tvar currentNote = this.frequency.value;\n\t\t\t\tthis.frequency.setValueAtTime(currentNote, time);\n\t\t\t\tvar portTime = this.toSeconds(this.portamento);\n\t\t\t\tthis.frequency.exponentialRampToValueAtTime(note, time + portTime);\n\t\t\t} else {\n\t\t\t\tthis.frequency.setValueAtTime(note, time);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Monophonic;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  the MonoSynth is a single oscillator, monophonic synthesizer\n\t\t *          with a filter, and two envelopes (on the filter and the amplitude). \n\t\t *\n\t\t * Flow: \n\t\t * \n\t\t * <pre>\n\t\t * OmniOscillator+-->AmplitudeEnvelope+-->Filter \n\t\t *                                          ^    \n\t\t *                                          |    \n\t\t *                         ScaledEnvelope+--+\n\t\t * </pre>\n\t\t *  \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} options the options available for the synth \n\t\t *                          see defaults below\n\t\t */\n\t\tTone.MonoSynth = function(options){\n\n\t\t\t//get the defaults\n\t\t\toptions = this.defaultArg(options, Tone.MonoSynth.defaults);\n\t\t\tTone.Monophonic.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the first oscillator\n\t\t\t *  @type {Tone.OmniOscillator}\n\t\t\t */\n\t\t\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t\t\t/**\n\t\t\t *  the frequency control signal\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = this.oscillator.frequency;\n\n\t\t\t/**\n\t\t\t *  the detune control signal\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.detune = this.oscillator.detune;\n\n\t\t\t/**\n\t\t\t *  the filter\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t\t\tthis.filter = new Tone.Filter(options.filter);\n\n\t\t\t/**\n\t\t\t *  the filter envelope\n\t\t\t *  @type {Tone.Envelope}\n\t\t\t */\n\t\t\tthis.filterEnvelope = new Tone.ScaledEnvelope(options.filterEnvelope);\n\n\t\t\t/**\n\t\t\t *  the amplitude envelope\n\t\t\t *  @type {Tone.Envelope}\n\t\t\t */\n\t\t\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t\t\t//connect the oscillators to the output\n\t\t\tthis.oscillator.chain(this.filter, this.envelope, this.output);\n\t\t\t//start the oscillators\n\t\t\tthis.oscillator.start();\n\t\t\t//connect the filter envelope\n\t\t\tthis.filterEnvelope.connect(this.filter.frequency);\n\t\t};\n\n\t\tTone.extend(Tone.MonoSynth, Tone.Monophonic);\n\n\t\t/**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.MonoSynth.defaults = {\n\t\t\t\"oscillator\" : {\n\t\t\t\t\"type\" : \"square\"\n\t\t\t},\n\t\t\t\"filter\" : {\n\t\t\t\t\"Q\" : 6,\n\t\t\t\t\"type\" : \"lowpass\",\n\t\t\t\t\"rolloff\" : -24\n\t\t\t},\n\t\t\t\"envelope\" : {\n\t\t\t\t\"attack\" : 0.005,\n\t\t\t\t\"decay\" : 0.1,\n\t\t\t\t\"sustain\" : 0.9,\n\t\t\t\t\"release\" : 1\n\t\t\t},\n\t\t\t\"filterEnvelope\" : {\n\t\t\t\t\"attack\" : 0.06,\n\t\t\t\t\"decay\" : 0.2,\n\t\t\t\t\"sustain\" : 0.5,\n\t\t\t\t\"release\" : 2,\n\t\t\t\t\"min\" : 20,\n\t\t\t\t\"max\" : 4000,\n\t\t\t\t\"exponent\" : 2\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Tone.Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.MonoSynth} `this`\n\t\t */\n\t\tTone.MonoSynth.prototype.triggerEnvelopeAttack = function(time, velocity){\n\t\t\t//the envelopes\n\t\t\tthis.envelope.triggerAttack(time, velocity);\n\t\t\tthis.filterEnvelope.triggerAttack(time);\t\n\t\t\treturn this;\t\n\t\t};\n\n\t\t/**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Tone.Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.MonoSynth} `this`\n\t\t */\n\t\tTone.MonoSynth.prototype.triggerEnvelopeRelease = function(time){\n\t\t\tthis.envelope.triggerRelease(time);\n\t\t\tthis.filterEnvelope.triggerRelease(time);\n\t\t\treturn this;\n\t\t};\n\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.MonoSynth} `this`\n\t\t */\n\t\tTone.MonoSynth.prototype.dispose = function(){\n\t\t\tTone.Monophonic.prototype.dispose.call(this);\n\t\t\tthis.oscillator.dispose();\n\t\t\tthis.oscillator = null;\n\t\t\tthis.envelope.dispose();\n\t\t\tthis.envelope = null;\n\t\t\tthis.filterEnvelope.dispose();\n\t\t\tthis.filterEnvelope = null;\n\t\t\tthis.filter.dispose();\n\t\t\tthis.filter = null;\n\t\t\tthis.frequency = null;\n\t\t\tthis.detune = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.MonoSynth;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  the AMSynth is an amplitude modulation synthesizer\n\t\t *          composed of two MonoSynths where one MonoSynth is the \n\t\t *          carrier and the second is the modulator.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} options the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t *  var synth = new Tone.AMSynth();\n\t\t */\n\t\tTone.AMSynth = function(options){\n\n\t\t\toptions = this.defaultArg(options, Tone.AMSynth.defaults);\n\t\t\tTone.Monophonic.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the first voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t\t\tthis.carrier = new Tone.MonoSynth(options.carrier);\n\t\t\tthis.carrier.volume.value = -10;\n\n\t\t\t/**\n\t\t\t *  the second voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t\t\tthis.modulator = new Tone.MonoSynth(options.modulator);\n\t\t\tthis.modulator.volume.value = -10;\n\n\t\t\t/**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = new Tone.Signal(440, Tone.Signal.Units.Frequency);\n\n\t\t\t/**\n\t\t\t *  the ratio between the two voices\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._harmonicity = new Tone.Multiply(options.harmonicity);\n\n\t\t\t/**\n\t\t\t *  convert the -1,1 output to 0,1\n\t\t\t *  @type {Tone.AudioToGain}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._modulationScale = new Tone.AudioToGain();\n\n\t\t\t/**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._modulationNode = this.context.createGain();\n\n\t\t\t//control the two voices frequency\n\t\t\tthis.frequency.connect(this.carrier.frequency);\n\t\t\tthis.frequency.chain(this._harmonicity, this.modulator.frequency);\n\t\t\tthis.modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\t\tthis.carrier.chain(this._modulationNode, this.output);\n\t\t};\n\n\t\tTone.extend(Tone.AMSynth, Tone.Monophonic);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.AMSynth.defaults = {\n\t\t\t\"harmonicity\" : 3,\n\t\t\t\"carrier\" : {\n\t\t\t\t\"volume\" : -10,\n\t\t\t\t\"portamento\" : 0,\n\t\t\t\t\"oscillator\" : {\n\t\t\t\t\t\"type\" : \"sine\"\n\t\t\t\t},\n\t\t\t\t\"envelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.01,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5\n\t\t\t\t},\n\t\t\t\t\"filterEnvelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5,\n\t\t\t\t\t\"min\" : 20000,\n\t\t\t\t\t\"max\" : 20000\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"modulator\" : {\n\t\t\t\t\"volume\" : -10,\n\t\t\t\t\"portamento\" : 0,\n\t\t\t\t\"oscillator\" : {\n\t\t\t\t\t\"type\" : \"square\"\n\t\t\t\t},\n\t\t\t\t\"envelope\" : {\n\t\t\t\t\t\"attack\" : 2,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5\n\t\t\t\t},\n\t\t\t\t\"filterEnvelope\" : {\n\t\t\t\t\t\"attack\" : 4,\n\t\t\t\t\t\"decay\" : 0.2,\n\t\t\t\t\t\"sustain\" : 0.5,\n\t\t\t\t\t\"release\" : 0.5,\n\t\t\t\t\t\"min\" : 20,\n\t\t\t\t\t\"max\" : 1500\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  trigger the attack portion of the note\n\t\t *  \n\t\t *  @param  {Tone.Time} [time=now] the time the note will occur\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.AMSynth} `this`\n\t\t */\n\t\tTone.AMSynth.prototype.triggerEnvelopeAttack = function(time, velocity){\n\t\t\t//the port glide\n\t\t\ttime = this.toSeconds(time);\n\t\t\t//the envelopes\n\t\t\tthis.carrier.envelope.triggerAttack(time, velocity);\n\t\t\tthis.modulator.envelope.triggerAttack(time);\n\t\t\tthis.carrier.filterEnvelope.triggerAttack(time);\n\t\t\tthis.modulator.filterEnvelope.triggerAttack(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  trigger the release portion of the note\n\t\t *  \n\t\t *  @param  {Tone.Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.AMSynth} `this`\n\t\t */\n\t\tTone.AMSynth.prototype.triggerEnvelopeRelease = function(time){\n\t\t\tthis.carrier.triggerRelease(time);\n\t\t\tthis.modulator.triggerRelease(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * The ratio between the two carrier and the modulator. \n\t\t * @memberOf Tone.AMSynth#\n\t\t * @type {number}\n\t\t * @name harmonicity\n\t\t */\n\t\tObject.defineProperty(Tone.AMSynth.prototype, \"harmonicity\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._harmonicity.value;\n\t\t\t},\n\t\t\tset : function(harm){\n\t\t\t\tthis._harmonicity.value = harm;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.AMSynth} `this`\n\t\t */\n\t\tTone.AMSynth.prototype.dispose = function(){\n\t\t\tTone.Monophonic.prototype.dispose.call(this);\n\t\t\tthis.carrier.dispose();\n\t\t\tthis.carrier = null;\n\t\t\tthis.modulator.dispose();\n\t\t\tthis.modulator = null;\n\t\t\tthis.frequency.dispose();\n\t\t\tthis.frequency = null;\n\t\t\tthis._harmonicity.dispose();\n\t\t\tthis._harmonicity = null;\n\t\t\tthis._modulationScale.dispose();\n\t\t\tthis._modulationScale = null;\n\t\t\tthis._modulationNode.disconnect();\n\t\t\tthis._modulationNode = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.AMSynth;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  the DuoSynth is a monophonic synth composed of two \n\t\t *          MonoSynths run in parallel with control over the \n\t\t *          frequency ratio between the two voices and vibrato effect.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} options the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t *  var duoSynth = new Tone.DuoSynth();\n\t\t */\n\t\tTone.DuoSynth = function(options){\n\n\t\t\toptions = this.defaultArg(options, Tone.DuoSynth.defaults);\n\t\t\tTone.Monophonic.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the first voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t\t\tthis.voice0 = new Tone.MonoSynth(options.voice0);\n\t\t\tthis.voice0.volume.value = -10;\n\n\t\t\t/**\n\t\t\t *  the second voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t\t\tthis.voice1 = new Tone.MonoSynth(options.voice1);\n\t\t\tthis.voice1.volume.value = -10;\n\n\t\t\t/**\n\t\t\t *  The vibrato LFO. \n\t\t\t *  @type {Tone.LFO}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);\n\t\t\tthis._vibrato.start();\n\n\t\t\t/**\n\t\t\t * the vibrato frequency\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.vibratoRate = this._vibrato.frequency;\n\n\t\t\t/**\n\t\t\t *  the vibrato gain\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._vibratoGain = this.context.createGain();\n\n\t\t\t/**\n\t\t\t * The amount of vibrato\n\t\t\t * @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.vibratoAmount = new Tone.Signal(this._vibratoGain.gain, Tone.Signal.Units.Gain);\n\t\t\tthis.vibratoAmount.value = options.vibratoAmount;\n\n\t\t\t/**\n\t\t\t *  the delay before the vibrato starts\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._vibratoDelay = this.toSeconds(options.vibratoDelay);\n\n\t\t\t/**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = new Tone.Signal(440, Tone.Signal.Units.Frequency);\n\n\t\t\t/**\n\t\t\t *  the ratio between the two voices\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._harmonicity = new Tone.Multiply(options.harmonicity);\n\n\t\t\t//control the two voices frequency\n\t\t\tthis.frequency.connect(this.voice0.frequency);\n\t\t\tthis.frequency.chain(this._harmonicity, this.voice1.frequency);\n\t\t\tthis._vibrato.connect(this._vibratoGain);\n\t\t\tthis._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n\t\t\tthis.voice0.connect(this.output);\n\t\t\tthis.voice1.connect(this.output);\n\t\t};\n\n\t\tTone.extend(Tone.DuoSynth, Tone.Monophonic);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.DuoSynth.defaults = {\n\t\t\t\"vibratoAmount\" : 0.5,\n\t\t\t\"vibratoRate\" : 5,\n\t\t\t\"vibratoDelay\" : 1,\n\t\t\t\"harmonicity\" : 1.5,\n\t\t\t\"voice0\" : {\n\t\t\t\t\"volume\" : -10,\n\t\t\t\t\"portamento\" : 0,\n\t\t\t\t\"oscillator\" : {\n\t\t\t\t\t\"type\" : \"sine\"\n\t\t\t\t},\n\t\t\t\t\"filterEnvelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5\n\t\t\t\t},\n\t\t\t\t\"envelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"voice1\" : {\n\t\t\t\t\"volume\" : -10,\n\t\t\t\t\"portamento\" : 0,\n\t\t\t\t\"oscillator\" : {\n\t\t\t\t\t\"type\" : \"sine\"\n\t\t\t\t},\n\t\t\t\t\"filterEnvelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5\n\t\t\t\t},\n\t\t\t\t\"envelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  start the attack portion of the envelopes\n\t\t *  \n\t\t *  @param {Tone.Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.DuoSynth} `this`\n\t\t */\n\t\tTone.DuoSynth.prototype.triggerEnvelopeAttack = function(time, velocity){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis.voice0.envelope.triggerAttack(time, velocity);\n\t\t\tthis.voice1.envelope.triggerAttack(time, velocity);\n\t\t\tthis.voice0.filterEnvelope.triggerAttack(time);\n\t\t\tthis.voice1.filterEnvelope.triggerAttack(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  start the release portion of the envelopes\n\t\t *  \n\t\t *  @param {Tone.Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.DuoSynth} `this`\n\t\t */\n\t\tTone.DuoSynth.prototype.triggerEnvelopeRelease = function(time){\n\t\t\tthis.voice0.triggerRelease(time);\n\t\t\tthis.voice1.triggerRelease(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * The ratio between the two carrier and the modulator. \n\t\t * @memberOf Tone.DuoSynth#\n\t\t * @type {number}\n\t\t * @name harmonicity\n\t\t */\n\t\tObject.defineProperty(Tone.DuoSynth.prototype, \"harmonicity\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._harmonicity.value;\n\t\t\t},\n\t\t\tset : function(harm){\n\t\t\t\tthis._harmonicity.value = harm;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.DuoSynth} `this`\n\t\t */\n\t\tTone.DuoSynth.prototype.dispose = function(){\n\t\t\tTone.Monophonic.prototype.dispose.call(this);\n\t\t\tthis.voice0.dispose();\n\t\t\tthis.voice0 = null;\n\t\t\tthis.voice1.dispose();\n\t\t\tthis.voice1 = null;\n\t\t\tthis.frequency.dispose();\n\t\t\tthis.frequency = null;\n\t\t\tthis._vibrato.dispose();\n\t\t\tthis._vibrato = null;\n\t\t\tthis._vibratoGain.disconnect();\n\t\t\tthis._vibratoGain = null;\n\t\t\tthis._harmonicity.dispose();\n\t\t\tthis._harmonicity = null;\n\t\t\tthis.vibratoAmount.dispose();\n\t\t\tthis.vibratoAmount = null;\n\t\t\tthis.vibratoRate = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.DuoSynth;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  the FMSynth is composed of two MonoSynths where one MonoSynth is the \n\t\t *          carrier and the second is the modulator.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Monophonic}\n\t\t *  @param {Object} options the options available for the synth \n\t\t *                          see defaults below\n\t\t *  @example\n\t\t *  var fmSynth = new Tone.FMSynth();\n\t\t */\n\t\tTone.FMSynth = function(options){\n\n\t\t\toptions = this.defaultArg(options, Tone.FMSynth.defaults);\n\t\t\tTone.Monophonic.call(this, options);\n\n\t\t\t/**\n\t\t\t *  the first voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t\t\tthis.carrier = new Tone.MonoSynth(options.carrier);\n\t\t\tthis.carrier.volume.value = -10;\n\n\t\t\t/**\n\t\t\t *  the second voice\n\t\t\t *  @type {Tone.MonoSynth}\n\t\t\t */\n\t\t\tthis.modulator = new Tone.MonoSynth(options.modulator);\n\t\t\tthis.modulator.volume.value = -10;\n\n\t\t\t/**\n\t\t\t *  the frequency control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.frequency = new Tone.Signal(440, Tone.Signal.Units.Frequency);\n\n\t\t\t/**\n\t\t\t *  the ratio between the two voices\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._harmonicity = new Tone.Multiply(options.harmonicity);\n\n\t\t\t/**\n\t\t\t *  \n\t\t\t *\n\t\t\t *\t@type {Tone.Multiply}\n\t\t\t *\t@private\n\t\t\t */\n\t\t\tthis._modulationIndex = new Tone.Multiply(options.modulationIndex);\n\n\t\t\t/**\n\t\t\t *  the node where the modulation happens\n\t\t\t *  @type {GainNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._modulationNode = this.context.createGain();\n\n\t\t\t//control the two voices frequency\n\t\t\tthis.frequency.connect(this.carrier.frequency);\n\t\t\tthis.frequency.chain(this._harmonicity, this.modulator.frequency);\n\t\t\tthis.frequency.chain(this._modulationIndex, this._modulationNode);\n\t\t\tthis.modulator.connect(this._modulationNode.gain);\n\t\t\tthis._modulationNode.gain.value = 0;\n\t\t\tthis._modulationNode.connect(this.carrier.frequency);\n\t\t\tthis.carrier.connect(this.output);\n\t\t};\n\n\t\tTone.extend(Tone.FMSynth, Tone.Monophonic);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.FMSynth.defaults = {\n\t\t\t\"harmonicity\" : 3,\n\t\t\t\"modulationIndex\" : 10,\n\t\t\t\"carrier\" : {\n\t\t\t\t\"volume\" : -10,\n\t\t\t\t\"portamento\" : 0,\n\t\t\t\t\"oscillator\" : {\n\t\t\t\t\t\"type\" : \"sine\"\n\t\t\t\t},\n\t\t\t\t\"envelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5\n\t\t\t\t},\n\t\t\t\t\"filterEnvelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5,\n\t\t\t\t\t\"min\" : 20000,\n\t\t\t\t\t\"max\" : 20000\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"modulator\" : {\n\t\t\t\t\"volume\" : -10,\n\t\t\t\t\"portamento\" : 0,\n\t\t\t\t\"oscillator\" : {\n\t\t\t\t\t\"type\" : \"triangle\"\n\t\t\t\t},\n\t\t\t\t\"envelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5\n\t\t\t\t},\n\t\t\t\t\"filterEnvelope\" : {\n\t\t\t\t\t\"attack\" : 0.01,\n\t\t\t\t\t\"decay\" : 0.0,\n\t\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\t\"release\" : 0.5,\n\t\t\t\t\t\"min\" : 20000,\n\t\t\t\t\t\"max\" : 20000\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  trigger the attack portion of the note\n\t\t *  \n\t\t *  @param  {Tone.Time} [time=now] the time the note will occur\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.FMSynth} `this`\n\t\t */\n\t\tTone.FMSynth.prototype.triggerEnvelopeAttack = function(time, velocity){\n\t\t\t//the port glide\n\t\t\ttime = this.toSeconds(time);\n\t\t\t//the envelopes\n\t\t\tthis.carrier.envelope.triggerAttack(time, velocity);\n\t\t\tthis.modulator.envelope.triggerAttack(time);\n\t\t\tthis.carrier.filterEnvelope.triggerAttack(time);\n\t\t\tthis.modulator.filterEnvelope.triggerAttack(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  trigger the release portion of the note\n\t\t *  \n\t\t *  @param  {Tone.Time} [time=now] the time the note will release\n\t\t *  @returns {Tone.FMSynth} `this`\n\t\t */\n\t\tTone.FMSynth.prototype.triggerEnvelopeRelease = function(time){\n\t\t\tthis.carrier.triggerRelease(time);\n\t\t\tthis.modulator.triggerRelease(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * The ratio between the two carrier and the modulator. \n\t\t * @memberOf Tone.FMSynth#\n\t\t * @type {number}\n\t\t * @name harmonicity\n\t\t */\n\t\tObject.defineProperty(Tone.FMSynth.prototype, \"harmonicity\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._harmonicity.value;\n\t\t\t},\n\t\t\tset : function(harm){\n\t\t\t\tthis._harmonicity.value = harm;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the \n\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the \n\t\t *  modulating signal (ma) -- as in ma/mf. \n\t\t * @memberOf Tone.FMSynth#\n\t\t * @type {number}\n\t\t * @name modulationIndex\n\t\t */\n\t\tObject.defineProperty(Tone.FMSynth.prototype, \"modulationIndex\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._modulationIndex.value;\n\t\t\t},\n\t\t\tset : function(mod){\n\t\t\t\tthis._modulationIndex.value = mod;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.FMSynth} `this`\n\t\t */\n\t\tTone.FMSynth.prototype.dispose = function(){\n\t\t\tTone.Monophonic.prototype.dispose.call(this);\n\t\t\tthis.carrier.dispose();\n\t\t\tthis.carrier = null;\n\t\t\tthis.modulator.dispose();\n\t\t\tthis.modulator = null;\n\t\t\tthis.frequency.dispose();\n\t\t\tthis.frequency = null;\n\t\t\tthis._modulationIndex.dispose();\n\t\t\tthis._modulationIndex = null;\n\t\t\tthis._harmonicity.dispose();\n\t\t\tthis._harmonicity = null;\n\t\t\tthis._modulationNode.disconnect();\n\t\t\tthis._modulationNode = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.FMSynth;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\t\t\n\t\t/**\n\t\t *  @class  Audio file player with start, loop, stop.\n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Source} \n\t\t *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from\n\t\t *                                  which to load the AudioBuffer\n\t\t *  @param {function=} onload The function to invoke when the buffer is loaded. \n\t\t *                            Recommended to use {@link Tone.Buffer#onload} instead.\n\t\t *  @example\n\t\t *  var player = new Tone.Player(\"./path/to/sample.mp3\");\n\t\t */\n\t\tTone.Player = function(){\n\t\t\t\n\t\t\tvar options = this.optionsObject(arguments, [\"url\", \"onload\"], Tone.Player.defaults);\n\t\t\tTone.Source.call(this, options);\n\n\t\t\t/**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t\t\tthis._source = null;\n\t\t\t\n\t\t\t/**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Buffer}\n\t\t\t */\n\t\t\tthis._buffer = new Tone.Buffer(options.url, options.onload.bind(null, this));\n\n\t\t\t/**\n\t\t\t *  if the buffer should loop once it's over\n\t\t\t *  @type {boolean}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._loop = options.loop;\n\n\t\t\t/**\n\t\t\t *  if 'loop' is true, the loop will start at this position\n\t\t\t *  @type {Tone.Time}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._loopStart = options.loopStart;\n\n\t\t\t/**\n\t\t\t *  if 'loop' is true, the loop will end at this position\n\t\t\t *  @type {Tone.Time}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._loopEnd = options.loopEnd;\n\n\t\t\t/**\n\t\t\t *  the playback rate\n\t\t\t *  @private\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis._playbackRate = options.playbackRate;\n\n\t\t\t/**\n\t\t\t *  Enabling retrigger will allow a player to be restarted\n\t\t\t *  before the the previous 'start' is done playing.\n\t\t\t *  @type {boolean}\n\t\t\t */\n\t\t\tthis.retrigger = options.retrigger;\n\t\t};\n\n\t\tTone.extend(Tone.Player, Tone.Source);\n\t\t\n\t\t/**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Player.defaults = {\n\t\t\t\"onload\" : function(){},\n\t\t\t\"playbackRate\" : 1,\n\t\t\t\"loop\" : false,\n\t\t\t\"loopStart\" : 0,\n\t\t\t\"loopEnd\" : 0,\n\t\t\t\"retrigger\" : false,\n\t\t};\n\n\t\t/**\n\t\t *  Load the audio file as an audio buffer.\n\t\t *  Decodes the audio asynchronously and invokes\n\t\t *  the callback once the audio buffer loads. \n\t\t *  Note: this does not need to be called, if a url\n\t\t *  was passed in to the constructor. Only use this\n\t\t *  if you want to manually load a new url. \n\t\t * @param {string} url The url of the buffer to load.\n\t\t *                     filetype support depends on the\n\t\t *                     browser.\n\t\t *  @param  {function(Tone.Player)=} callback\n\t\t *  @returns {Tone.Player} `this`\n\t\t */\n\t\tTone.Player.prototype.load = function(url, callback){\n\t\t\tthis._buffer.load(url, callback.bind(this, this));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  play the buffer between the desired positions\n\t\t *  \n\t\t *  @private\n\t\t *  @param  {Tone.Time} [startTime=now] when the player should start.\n\t\t *  @param  {Tone.Time} [offset=0] the offset from the beginning of the sample\n\t\t *                                 to start at. \n\t\t *  @param  {Tone.Time=} duration how long the sample should play. If no duration\n\t\t *                                is given, it will default to the full length \n\t\t *                                of the sample (minus any offset)\n\t\t *  @returns {Tone.Player} `this`\n\t\t */\n\t\tTone.Player.prototype._start = function(startTime, offset, duration){\n\t\t\tif (this._buffer.loaded){\n\t\t\t\t//if it's a loop the default offset is the loopstart point\n\t\t\t\tif (this._loop){\n\t\t\t\t\toffset = this.defaultArg(offset, this._loopStart);\n\t\t\t\t\toffset = this.toSeconds(offset);\n\t\t\t\t} else {\n\t\t\t\t\t//otherwise the default offset is 0\n\t\t\t\t\toffset = this.defaultArg(offset, 0);\n\t\t\t\t}\n\t\t\t\tduration = this.defaultArg(duration, this._buffer.duration - offset);\n\t\t\t\t//the values in seconds\n\t\t\t\tstartTime = this.toSeconds(startTime);\n\t\t\t\tduration = this.toSeconds(duration);\n\t\t\t\t//make the source\n\t\t\t\tthis._source = this.context.createBufferSource();\n\t\t\t\tthis._source.buffer = this._buffer.get();\n\t\t\t\t//set the looping properties\n\t\t\t\tif (this._loop){\n\t\t\t\t\tthis._source.loop = this._loop;\n\t\t\t\t\tthis._source.loopStart = this.toSeconds(this._loopStart);\n\t\t\t\t\tthis._source.loopEnd = this.toSeconds(this._loopEnd);\n\t\t\t\t} else {\n\t\t\t\t\tthis._nextStop = startTime + duration;\n\t\t\t\t}\n\t\t\t\t//and other properties\n\t\t\t\tthis._source.playbackRate.value = this._playbackRate;\n\t\t\t\tthis._source.onended = this.onended;\n\t\t\t\tthis._source.connect(this.output);\n\t\t\t\t//start it\n\t\t\t\tthis._source.start(startTime, offset, duration);\n\t\t\t} else {\n\t\t\t\tthrow Error(\"tried to start Player before the buffer was loaded\");\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Stop playback.\n\t\t *  @private\n\t\t *  @param  {Tone.Time} [time=now]\n\t\t *  @returns {Tone.Player} `this`\n\t\t */\n\t\tTone.Player.prototype._stop = function(time){\n\t\t\tif (this._source){\n\t\t\t\tthis._source.stop(this.toSeconds(time));\n\t\t\t\tthis._source = null;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  Set the loop start and end. Will only loop if `loop` is \n\t\t *  set to `true`. \n\t\t *  @param {Tone.Time} loopStart The loop end time\n\t\t *  @param {Tone.Time} loopEnd The loop end time\n\t\t *  @returns {Tone.Player} `this`\n\t\t *  @example\n\t\t *  player.setLoopPoints(0.2, 0.3);\n\t\t *  player.loop = true;\n\t\t */\n\t\tTone.Player.prototype.setLoopPoints = function(loopStart, loopEnd){\n\t\t\tthis.loopStart = loopStart;\n\t\t\tthis.loopEnd = loopEnd;\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * If `loop` is true, the loop will start at this position. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {Tone.Time}\n\t\t * @name loopStart\n\t\t */\n\t\tObject.defineProperty(Tone.Player.prototype, \"loopStart\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._loopStart;\n\t\t\t}, \n\t\t\tset : function(loopStart){\n\t\t\t\tthis._loopStart = loopStart;\n\t\t\t\tif (this._source){\n\t\t\t\t\tthis._source.loopStart = this.toSeconds(loopStart);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * If `loop` is true, the loop will end at this position.\n\t\t * @memberOf Tone.Player#\n\t\t * @type {Tone.Time}\n\t\t * @name loopEnd\n\t\t */\n\t\tObject.defineProperty(Tone.Player.prototype, \"loopEnd\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._loopEnd;\n\t\t\t}, \n\t\t\tset : function(loopEnd){\n\t\t\t\tthis._loopEnd = loopEnd;\n\t\t\t\tif (this._source){\n\t\t\t\t\tthis._source.loopEnd = this.toSeconds(loopEnd);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The audio buffer belonging to the player. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {AudioBuffer}\n\t\t * @name buffer\n\t\t */\n\t\tObject.defineProperty(Tone.Player.prototype, \"buffer\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._buffer;\n\t\t\t}, \n\t\t\tset : function(buffer){\n\t\t\t\tthis._buffer.set(buffer);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * If the buffer should loop once it's over. \n\t\t * @memberOf Tone.Player#\n\t\t * @type {boolean}\n\t\t * @name loop\n\t\t */\n\t\tObject.defineProperty(Tone.Player.prototype, \"loop\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._loop;\n\t\t\t}, \n\t\t\tset : function(loop){\n\t\t\t\tthis._loop = loop;\n\t\t\t\tif (this._source){\n\t\t\t\t\tthis._source.loop = loop;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The playback speed. 1 is normal speed. \n\t\t * Note that this is not a Tone.Signal because of a bug in Blink. \n\t\t * Please star this issue if this an important thing to you: \n\t\t * https://code.google.com/p/chromium/issues/detail?id=311284\n\t\t * \n\t\t * @memberOf Tone.Player#\n\t\t * @type {number}\n\t\t * @name playbackRate\n\t\t */\n\t\tObject.defineProperty(Tone.Player.prototype, \"playbackRate\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._playbackRate;\n\t\t\t}, \n\t\t\tset : function(rate){\n\t\t\t\tthis._playbackRate = rate;\n\t\t\t\tif (this._source) {\n\t\t\t\t\tthis._source.playbackRate.value = rate;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  dispose and disconnect\n\t\t *  @return {Tone.Player} `this`\n\t\t */\n\t\tTone.Player.prototype.dispose = function(){\n\t\t\tTone.Source.prototype.dispose.call(this);\n\t\t\tif (this._source !== null){\n\t\t\t\tthis._source.disconnect();\n\t\t\t\tthis._source = null;\n\t\t\t}\n\t\t\tthis._buffer.dispose();\n\t\t\tthis._buffer = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Player;\n\t});\n\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class A simple sampler instrument which plays an audio buffer \n\t\t *         through an amplitude envelope and a filter envelope. Nested\n\t\t *         lists will be flattened.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object|string} urls the urls of the audio file\n\t\t *  @param {Object} options the options object for the synth\n\t\t *  @example\n\t\t *  var sampler = new Sampler({\n\t\t *  \tA : {\n\t\t *  \t\t1 : {\"./audio/casio/A1.mp3\",\n\t\t *  \t\t2 : \"./audio/casio/A2.mp3\",\n\t\t *  \t},\n\t\t *  \t\"B.1\" : \"./audio/casio/B1.mp3\",\n\t\t *  });\n\t\t *  //...once samples have loaded\n\t\t *  sampler.triggerAttack(\"A.1\", time, velocity);\n\t\t */\n\t\tTone.Sampler = function(urls, options){\n\n\t\t\tTone.Instrument.call(this);\n\t\t\toptions = this.defaultArg(options, Tone.Sampler.defaults);\n\n\t\t\t/**\n\t\t\t *  the sample player\n\t\t\t *  @type {Tone.Player}\n\t\t\t */\n\t\t\tthis.player = new Tone.Player(options.player);\n\t\t\tthis.player.retrigger = true;\n\n\t\t\t/**\n\t\t\t *  the buffers\n\t\t\t *  @type {Object<Tone.Buffer>}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._buffers = {};\n\n\t\t\t/**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.Envelope}\n\t\t\t */\n\t\t\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t\t\t/**\n\t\t\t *  The filter envelope. \n\t\t\t *  @type {Tone.Envelope}\n\t\t\t */\n\t\t\tthis.filterEnvelope = new Tone.ScaledEnvelope(options.filterEnvelope);\n\n\t\t\t/**\n\t\t\t *  The name of the current sample. \n\t\t\t *  @type {string}\n\t\t\t */\n\t\t\tthis._sample = options.sample;\n\n\t\t\t/**\n\t\t\t * the private reference to the pitch\n\t\t\t * @type {number}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._pitch = options.pitch;\n\n\t\t\t/**\n\t\t\t *  The filter.\n\t\t\t *  @type {BiquadFilterNode}\n\t\t\t */\n\t\t\tthis.filter = new Tone.Filter(options.filter);\n\n\t\t\t//connections / setup\n\t\t\tthis._loadBuffers(urls);\n\t\t\tthis.pitch = options.pitch;\n\t\t\tthis.player.chain(this.filter, this.envelope, this.output);\n\t\t\tthis.filterEnvelope.connect(this.filter.frequency);\n\t\t};\n\n\t\tTone.extend(Tone.Sampler, Tone.Instrument);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *  @static\n\t\t */\n\t\tTone.Sampler.defaults = {\n\t\t\t\"sample\" : 0,\n\t\t\t\"pitch\" : 0,\n\t\t\t\"player\" : {\n\t\t\t\t\"loop\" : false,\n\t\t\t},\n\t\t\t\"envelope\" : {\n\t\t\t\t\"attack\" : 0.001,\n\t\t\t\t\"decay\" : 0,\n\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\"release\" : 0.1\n\t\t\t},\n\t\t\t\"filterEnvelope\" : {\n\t\t\t\t\"attack\" : 0.001,\n\t\t\t\t\"decay\" : 0.001,\n\t\t\t\t\"sustain\" : 1,\n\t\t\t\t\"release\" : 0.5,\n\t\t\t\t\"min\" : 20,\n\t\t\t\t\"max\" : 20000,\n\t\t\t\t\"exponent\" : 2,\n\t\t\t},\n\t\t\t\"filter\" : {\n\t\t\t\t\"type\" : \"lowpass\"\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  load the buffers\n\t\t *  @param   {Object} urls   the urls\n\t\t *  @private\n\t\t */\n\t\tTone.Sampler.prototype._loadBuffers = function(urls){\n\t\t\tif (typeof urls === \"string\"){\n\t\t\t\tthis._buffers[\"0\"] = new Tone.Buffer(urls, function(){\n\t\t\t\t\tthis.sample = \"0\";\n\t\t\t\t}.bind(this));\n\t\t\t} else {\n\t\t\t\turls = this._flattenUrls(urls);\n\t\t\t\tfor (var buffName in urls){\n\t\t\t\t\tthis._sample = buffName;\n\t\t\t\t\tvar urlString = urls[buffName];\n\t\t\t\t\tthis._buffers[buffName] = new Tone.Buffer(urlString);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  flatten an object into a single depth object\n\t\t *  https://gist.github.com/penguinboy/762197\n\t\t *  @param   {Object} ob \t\n\t\t *  @return  {Object}    \n\t\t *  @private\n\t\t */\n\t\tTone.Sampler.prototype._flattenUrls = function(ob) {\n\t\t\tvar toReturn = {};\n\t\t\tfor (var i in ob) {\n\t\t\t\tif (!ob.hasOwnProperty(i)) continue;\n\t\t\t\tif ((typeof ob[i]) == \"object\") {\n\t\t\t\t\tvar flatObject = this._flattenUrls(ob[i]);\n\t\t\t\t\tfor (var x in flatObject) {\n\t\t\t\t\t\tif (!flatObject.hasOwnProperty(x)) continue;\n\t\t\t\t\t\ttoReturn[i + \".\" + x] = flatObject[x];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttoReturn[i] = ob[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn toReturn;\n\t\t};\n\n\t\t/**\n\t\t *  start the sample.\n\t\t *  @param {string=} sample the name of the samle to trigger, defaults to\n\t\t *                          the last sample used\n\t\t *  @param {Tone.Time} [time=now] the time when the note should start\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.Sampler} `this`\n\t\t */\n\t\tTone.Sampler.prototype.triggerAttack = function(name, time, velocity){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tif (name){\n\t\t\t\tthis.sample = name;\n\t\t\t}\n\t\t\tthis.player.start(time, 0);\n\t\t\tthis.envelope.triggerAttack(time, velocity);\n\t\t\tthis.filterEnvelope.triggerAttack(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  start the release portion of the sample\n\t\t *  \n\t\t *  @param {Tone.Time} [time=now] the time when the note should release\n\t\t *  @returns {Tone.Sampler} `this`\n\t\t */\n\t\tTone.Sampler.prototype.triggerRelease = function(time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis.filterEnvelope.triggerRelease(time);\n\t\t\tthis.envelope.triggerRelease(time);\n\t\t\tthis.player.stop(this.toSeconds(this.envelope.release) + time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * The name of the sample to trigger.\n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {number|string}\n\t\t * @name sample\n\t\t */\n\t\tObject.defineProperty(Tone.Sampler.prototype, \"sample\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._sample;\n\t\t\t},\n\t\t\tset : function(name){\n\t\t\t\tif (this._buffers.hasOwnProperty(name)){\n\t\t\t\t\tthis._sample = name;\n\t\t\t\t\tthis.player.buffer = this._buffers[name];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Sampler does not have a sample named \"+name);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Repitch the sampled note by some interval (measured\n\t\t * in semi-tones). \n\t\t * @memberOf Tone.Sampler#\n\t\t * @type {number}\n\t\t * @name pitch\n\t\t * @example\n\t\t * sampler.pitch = -12; //down one octave\n\t\t * sampler.pitch = 7; //up a fifth\n\t\t */\n\t\tObject.defineProperty(Tone.Sampler.prototype, \"pitch\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._pitch;\n\t\t\t},\n\t\t\tset : function(interval){\n\t\t\t\tthis._pitch = interval;\n\t\t\t\tthis.player.playbackRate = this.intervalToFrequencyRatio(interval);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Sampler} `this`\n\t\t */\n\t\tTone.Sampler.prototype.dispose = function(){\n\t\t\tTone.Instrument.prototype.dispose.call(this);\n\t\t\tthis.player.dispose();\n\t\t\tthis.filterEnvelope.dispose();\n\t\t\tthis.envelope.dispose();\n\t\t\tthis.filter.dispose();\n\t\t\tthis.player = null;\n\t\t\tthis.filterEnvelope = null;\n\t\t\tthis.envelope = null;\n\t\t\tthis.filter = null;\n\t\t\tfor (var sample in this._buffers){\n\t\t\t\tthis._buffers[sample].dispose();\n\t\t\t\tthis._buffers[sample] = null;\n\t\t\t}\n\t\t\tthis._buffers = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Sampler;\n\t});\n\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Deprecated.\n\t\t *\n\t\t *  @constructor\n\t\t *  @deprecated Use Tone.PolySynth with Tone.Sampler as the voice.\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} samples the samples used in this\n\t\t *  @param {function} onload the callback to invoke when all \n\t\t *                           of the samples have been loaded\n\t\t */\n\t\tTone.MultiSampler = function(samples, onload){\n\n\t\t\tconsole.warn(\"Tone.MultiSampler is deprecated - use Tone.PolySynth with Tone.Sampler as the voice\");\n\t\t \tTone.Instrument.call(this);\n\n\t\t \t/**\n\t\t \t *  the array of voices\n\t\t \t *  @type {Tone.Sampler}\n\t\t \t */\n\t\t\tthis.samples = {};\n\n\t\t\t//make the samples\n\t\t\tthis._createSamples(samples, onload);\n\t\t};\n\n\t\tTone.extend(Tone.MultiSampler, Tone.Instrument);\n\n\t\t/**\n\t\t *  creates all of the samples and tracks their loading\n\t\t *  \n\t\t *  @param   {Object} samples the samples\n\t\t *  @param   {function} onload  the onload callback\n\t\t *  @private\n\t\t */\n\t\tTone.MultiSampler.prototype._createSamples = function(samples, onload){\n\t\t\t//object which tracks the number of loaded samples\n\t\t\tvar loadCounter = {\n\t\t\t\ttotal : 0,\n\t\t\t\tloaded : 0\n\t\t\t};\n\t\t\t//get the count\n\t\t\tfor (var s in samples){ //jshint ignore:line\n\t\t\t\tloadCounter.total++;\n\t\t\t}\n\t\t\t//the function to invoke when a sample is loaded\n\t\t\tvar onSampleLoad = function(){\n\t\t\t\tloadCounter.loaded++;\n\t\t\t\tif (loadCounter.loaded === loadCounter.total){\n\t\t\t\t\tif (onload){\n\t\t\t\t\t\tonload();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tfor (var samp in samples){\n\t\t\t\tvar url = samples[samp];\n\t\t\t\tvar sampler = new Tone.Sampler(url, onSampleLoad);\n\t\t\t\tsampler.connect(this.output);\n\t\t\t\tthis.samples[samp] = sampler;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  start a sample\n\t\t *  \n\t\t *  @param  {string} sample the note name to start\n\t\t *  @param {Tone.Time} [time=now] the time when the note should start\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t */\n\t\tTone.MultiSampler.prototype.triggerAttack = function(sample, time, velocity){\n\t\t\tif (this.samples.hasOwnProperty(sample)){\n\t\t\t\tthis.samples[sample].triggerAttack(0, time, velocity);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  start the release portion of the note\n\t\t *  \n\t\t *  @param  {string} sample the note name to release\n\t\t *  @param {Tone.Time} [time=now] the time when the note should release\n\t\t */\n\t\tTone.MultiSampler.prototype.triggerRelease = function(sample, time){\n\t\t\tif (this.samples.hasOwnProperty(sample)){\n\t\t\t\tthis.samples[sample].triggerRelease(time);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t  *  start the release portion of the note\n\t\t  *  \n\t\t  *  @param  {string} sample the note name to release\n\t\t  *  @param {Tone.Time} duration the duration of the note\n\t\t  *  @param {Tone.Time} [time=now] the time when the note should start\n\t\t  *  @param {number} [velocity=1] the velocity of the note\n\t\t  */\n\t\tTone.MultiSampler.prototype.triggerAttackRelease = function(sample, duration, time, velocity){\n\t\t\tif (this.samples.hasOwnProperty(sample)){\n\t\t\t\ttime = this.toSeconds(time);\n\t\t\t\tduration = this.toSeconds(duration);\n\t\t\t\tvar samp = this.samples[sample];\n\t\t\t\tsamp.triggerAttack(0, time, velocity);\n\t\t\t\tsamp.triggerRelease(time + duration);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  sets all the samplers with these settings\n\t\t *  @param {object} params the parameters to be applied \n\t\t *                         to all internal samplers\n\t\t */\n\t\tTone.MultiSampler.prototype.set = function(params){\n\t\t\tfor (var samp in this.samples){\n\t\t\t\tthis.samples[samp].set(params);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t */\n\t\tTone.MultiSampler.prototype.dispose = function(){\n\t\t\tTone.Instrument.prototype.dispose.call(this);\n\t\t\tfor (var samp in this.samples){\n\t\t\t\tthis.samples[samp].dispose();\n\t\t\t\tthis.samples[samp] = null;\n\t\t\t}\n\t\t\tthis.samples = null;\n\t\t};\n\n\t\treturn Tone.MultiSampler;\n\t});\n\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Noise generator. \n\t\t *          Uses looped noise buffers to save on performance. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {string} type the noise type (white|pink|brown)\n\t\t *  @example\n\t\t *  var noise = new Tone.Noise(\"pink\");\n\t\t */\n\t\tTone.Noise = function(){\n\n\t\t\tvar options = this.optionsObject(arguments, [\"type\"], Tone.Noise.defaults);\n\t\t\tTone.Source.call(this, options);\n\n\t\t\t/**\n\t\t\t *  @private\n\t\t\t *  @type {AudioBufferSourceNode}\n\t\t\t */\n\t\t\tthis._source = null;\n\t\t\t\n\t\t\t/**\n\t\t\t *  the buffer\n\t\t\t *  @private\n\t\t\t *  @type {AudioBuffer}\n\t\t\t */\n\t\t\tthis._buffer = null;\n\n\t\t\tthis.type = options.type;\n\t\t};\n\n\t\tTone.extend(Tone.Noise, Tone.Source);\n\n\t\t/**\n\t\t *  the default parameters\n\t\t *\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.Noise.defaults = {\n\t\t\t\"type\" : \"white\",\n\t\t};\n\n\t\t/**\n\t\t * The type of the noise. Can be \"white\", \"brown\", or \"pink\". \n\t\t * @memberOf Tone.Noise#\n\t\t * @type {string}\n\t\t * @name type\n\t\t * @example\n\t\t * noise.type = \"white\";\n\t\t */\n\t\tObject.defineProperty(Tone.Noise.prototype, \"type\", {\n\t\t\tget : function(){\n\t\t\t\tif (this._buffer === _whiteNoise){\n\t\t\t\t\treturn \"white\";\n\t\t\t\t} else if (this._buffer === _brownNoise){\n\t\t\t\t\treturn \"brown\";\n\t\t\t\t} else if (this._buffer === _pinkNoise){\n\t\t\t\t\treturn \"pink\";\n\t\t\t\t}\n\t\t\t}, \n\t\t\tset : function(type){\n\t\t\t\tif (this.type !== type){\n\t\t\t\t\tswitch (type){\n\t\t\t\t\t\tcase \"white\" : \n\t\t\t\t\t\t\tthis._buffer = _whiteNoise;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"pink\" : \n\t\t\t\t\t\t\tthis._buffer = _pinkNoise;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"brown\" : \n\t\t\t\t\t\t\tthis._buffer = _brownNoise;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault : \n\t\t\t\t\t\t\tthis._buffer = _whiteNoise;\n\t\t\t\t\t}\n\t\t\t\t\t//if it's playing, stop and restart it\n\t\t\t\t\tif (this.state === Tone.Source.State.STARTED){\n\t\t\t\t\t\tvar now = this.now() + this.bufferTime;\n\t\t\t\t\t\t//remove the listener\n\t\t\t\t\t\tthis._source.onended = undefined;\n\t\t\t\t\t\tthis._stop(now);\n\t\t\t\t\t\tthis._start(now);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  internal start method\n\t\t *  \n\t\t *  @param {Tone.Time} time\n\t\t *  @private\n\t\t */\n\t\tTone.Noise.prototype._start = function(time){\t\t\n\t\t\tthis._source = this.context.createBufferSource();\n\t\t\tthis._source.buffer = this._buffer;\n\t\t\tthis._source.loop = true;\n\t\t\tthis.connectSeries(this._source, this.output);\n\t\t\tthis._source.start(this.toSeconds(time));\n\t\t\tthis._source.onended = this.onended;\n\t\t};\n\n\t\t/**\n\t\t *  internal stop method\n\t\t *  \n\t\t *  @param {Tone.Time} time\n\t\t *  @private\n\t\t */\n\t\tTone.Noise.prototype._stop = function(time){\n\t\t\tif (this._source){\n\t\t\t\tthis._source.stop(this.toSeconds(time));\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  dispose all the components\n\t\t *  @returns {Tone.Noise} `this`\n\t\t */\n\t\tTone.Noise.prototype.dispose = function(){\n\t\t\tTone.Source.prototype.dispose.call(this);\n\t\t\tif (this._source !== null){\n\t\t\t\tthis._source.disconnect();\n\t\t\t\tthis._source = null;\n\t\t\t}\n\t\t\tthis._buffer = null;\n\t\t\treturn this;\n\t\t};\n\n\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t// THE BUFFERS\n\t\t// borred heavily from http://noisehack.com/generate-noise-web-audio-api/\n\t\t///////////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *\tstatic noise buffers\n\t\t *  \n\t\t *  @static\n\t\t *  @private\n\t\t *  @type {AudioBuffer}\n\t\t */\n\t\tvar _pinkNoise = null, _brownNoise = null, _whiteNoise = null;\n\n\t\tTone._initAudioContext(function(audioContext){\n\n\t\t\tvar sampleRate = audioContext.sampleRate;\n\t\t\t\n\t\t\t//four seconds per buffer\n\t\t\tvar bufferLength = sampleRate * 4;\n\n\t\t\t//fill the buffers\n\t\t\t_pinkNoise = (function() {\n\t\t\t\tvar buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t\t\t\tfor (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++){\n\t\t\t\t\tvar channel = buffer.getChannelData(channelNum);\n\t\t\t\t\tvar b0, b1, b2, b3, b4, b5, b6;\n\t\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\t\t\t\tfor (var i = 0; i < bufferLength; i++) {\n\t\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\n\t\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\n\t\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\n\t\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\n\t\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\n\t\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\n\t\t\t\t\t\tchannel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t\t\t\t\t\tchannel[i] *= 0.11; // (roughly) compensate for gain\n\t\t\t\t\t\tb6 = white * 0.115926;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn buffer;\n\t\t\t}());\n\n\t\t\t_brownNoise = (function() {\n\t\t\t\tvar buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t\t\t\tfor (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++){\n\t\t\t\t\tvar channel = buffer.getChannelData(channelNum);\n\t\t\t\t\tvar lastOut = 0.0;\n\t\t\t\t\tfor (var i = 0; i < bufferLength; i++) {\n\t\t\t\t\t\tvar white = Math.random() * 2 - 1;\n\t\t\t\t\t\tchannel[i] = (lastOut + (0.02 * white)) / 1.02;\n\t\t\t\t\t\tlastOut = channel[i];\n\t\t\t\t\t\tchannel[i] *= 3.5; // (roughly) compensate for gain\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn buffer;\n\t\t\t})();\n\n\t\t\t_whiteNoise = (function(){\n\t\t\t\tvar buffer = audioContext.createBuffer(2, bufferLength, sampleRate);\n\t\t\t\tfor (var channelNum = 0; channelNum < buffer.numberOfChannels; channelNum++){\n\t\t\t\t\tvar channel = buffer.getChannelData(channelNum);\n\t\t\t\t\tfor (var i = 0; i < bufferLength; i++){\n\t\t\t\t\t\tchannel[i] =  Math.random() * 2 - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn buffer;\n\t\t\t}());\n\t\t});\n\n\t\treturn Tone.Noise;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  the NoiseSynth is a single oscillator, monophonic synthesizer\n\t\t *          with a filter, and two envelopes (on the filter and the amplitude)\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} options the options available for the synth \n\t\t *                          see defaults below\n\t\t * @example\n\t\t * var noiseSynth = new Tone.NoiseSynth();\n\t\t */\n\t\tTone.NoiseSynth = function(options){\n\n\t\t\t//get the defaults\n\t\t\toptions = this.defaultArg(options, Tone.NoiseSynth.defaults);\n\t\t\tTone.Instrument.call(this);\n\n\t\t\t/**\n\t\t\t *  The noise source. Set the type by setting\n\t\t\t *  `noiseSynth.noise.type`. \n\t\t\t *  @type {Tone.Noise}\n\t\t\t */\n\t\t\tthis.noise = new Tone.Noise();\n\n\t\t\t/**\n\t\t\t *  The filter .\n\t\t\t *  @type {Tone.Filter}\n\t\t\t */\n\t\t\tthis.filter = new Tone.Filter(options.filter);\n\n\t\t\t/**\n\t\t\t *  The filter envelope. \n\t\t\t *  @type {Tone.Envelope}\n\t\t\t */\n\t\t\tthis.filterEnvelope = new Tone.ScaledEnvelope(options.filterEnvelope);\n\n\t\t\t/**\n\t\t\t *  The amplitude envelope. \n\t\t\t *  @type {Tone.Envelope}\n\t\t\t */\n\t\t\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t\t\t//connect the noise to the output\n\t\t\tthis.noise.chain(this.filter, this.envelope, this.output);\n\t\t\t//start the noise\n\t\t\tthis.noise.start();\n\t\t\t//connect the filter envelope\n\t\t\tthis.filterEnvelope.connect(this.filter.frequency);\n\t\t};\n\n\t\tTone.extend(Tone.NoiseSynth, Tone.Instrument);\n\n\t\t/**\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.NoiseSynth.defaults = {\n\t\t\t\"noise\" : {\n\t\t\t\t\"type\" : \"white\"\n\t\t\t},\n\t\t\t\"filter\" : {\n\t\t\t\t\"Q\" : 6,\n\t\t\t\t\"type\" : \"highpass\",\n\t\t\t\t\"rolloff\" : -24\n\t\t\t},\n\t\t\t\"envelope\" : {\n\t\t\t\t\"attack\" : 0.005,\n\t\t\t\t\"decay\" : 0.1,\n\t\t\t\t\"sustain\" : 0.0,\n\t\t\t},\n\t\t\t\"filterEnvelope\" : {\n\t\t\t\t\"attack\" : 0.06,\n\t\t\t\t\"decay\" : 0.2,\n\t\t\t\t\"sustain\" : 0,\n\t\t\t\t\"release\" : 2,\n\t\t\t\t\"min\" : 20,\n\t\t\t\t\"max\" : 4000,\n\t\t\t\t\"exponent\" : 2\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *  start the attack portion of the envelope\n\t\t *  @param {Tone.Time} [time=now] the time the attack should start\n\t\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t\t *  @returns {Tone.NoiseSynth} `this`\n\t\t */\n\t\tTone.NoiseSynth.prototype.triggerAttack = function(time, velocity){\n\t\t\t//the envelopes\n\t\t\tthis.envelope.triggerAttack(time, velocity);\n\t\t\tthis.filterEnvelope.triggerAttack(time);\t\n\t\t\treturn this;\t\n\t\t};\n\n\t\t/**\n\t\t *  start the release portion of the envelope\n\t\t *  @param {Tone.Time} [time=now] the time the release should start\n\t\t *  @returns {Tone.NoiseSynth} `this`\n\t\t */\n\t\tTone.NoiseSynth.prototype.triggerRelease = function(time){\n\t\t\tthis.envelope.triggerRelease(time);\n\t\t\tthis.filterEnvelope.triggerRelease(time);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  trigger the attack and then the release\n\t\t *  @param  {Tone.Time} duration the duration of the note\n\t\t *  @param  {Tone.Time} [time=now]     the time of the attack\n\t\t *  @param  {number} [velocity=1] the velocity\n\t\t *  @returns {Tone.NoiseSynth} `this`\n\t\t */\n\t\tTone.NoiseSynth.prototype.triggerAttackRelease = function(duration, time, velocity){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tduration = this.toSeconds(duration);\n\t\t\tthis.triggerAttack(time, velocity);\n\t\t\tconsole.log(time + duration);\n\t\t\tthis.triggerRelease(time + duration);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.NoiseSynth} `this`\n\t\t */\n\t\tTone.NoiseSynth.prototype.dispose = function(){\n\t\t\tTone.Instrument.prototype.dispose.call(this);\n\t\t\tthis.noise.dispose();\n\t\t\tthis.noise = null;\n\t\t\tthis.envelope.dispose();\n\t\t\tthis.envelope = null;\n\t\t\tthis.filterEnvelope.dispose();\n\t\t\tthis.filterEnvelope = null;\n\t\t\tthis.filter.dispose();\n\t\t\tthis.filter = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.NoiseSynth;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Karplus-String string synthesis. \n\t\t *  \n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {Object} options see the defaults\n\t\t *  @example\n\t\t *  var plucky = new Tone.PluckSynth();\n\t\t */\n\t\tTone.PluckSynth = function(options){\n\n\t\t\toptions = this.defaultArg(options, Tone.PluckSynth.defaults);\n\t\t\tTone.Instrument.call(this);\n\n\t\t\t/**\n\t\t\t *  @type {Tone.Noise}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._noise = new Tone.Noise(\"pink\");\n\n\t\t\t/**\n\t\t\t *  The amount of noise at the attack. \n\t\t\t *  Nominal range of [0.1, 20]\n\t\t\t *  @type {number}\n\t\t\t */\n\t\t\tthis.attackNoise = 1;\n\n\t\t\t/**\n\t\t\t *  the LFCF\n\t\t\t *  @type {Tone.LowpassCombFilter}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._lfcf = new Tone.LowpassCombFilter(1 / 440);\n\n\t\t\t/**\n\t\t\t *  the resonance control\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.resonance = this._lfcf.resonance;\n\n\t\t\t/**\n\t\t\t *  the dampening control. i.e. the lowpass filter frequency of the comb filter\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.dampening = this._lfcf.dampening;\n\n\t\t\t//connections\n\t\t\tthis._noise.connect(this._lfcf);\n\t\t\tthis._lfcf.connect(this.output);\n\t\t};\n\n\t\tTone.extend(Tone.PluckSynth, Tone.Instrument);\n\n\t\t/**\n\t\t *  @static\n\t\t *  @const\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.PluckSynth.defaults = {\n\t\t\t\"attackNoise\" : 1,\n\t\t\t\"dampening\" : 4000,\n\t\t\t\"resonance\" : 0.5\n\t\t};\n\n\t\t/**\n\t\t *  trigger the attack portion\n\t\t *  @param {string|number} note the note name or frequency\n\t\t *  @param {Tone.Time} [time=now] the time of the note\n\t\t *  @returns {Tone.PluckSynth} `this`\n\t\t */\n\t\tTone.PluckSynth.prototype.triggerAttack = function(note, time) {\n\t\t\tnote = this.toFrequency(note);\n\t\t\ttime = this.toSeconds(time);\n\t\t\tvar delayAmount = 1 / note;\n\t\t\tthis._lfcf.setDelayTimeAtTime(delayAmount, time);\t\t\n\t\t\tthis._noise.start(time);\n\t\t\tthis._noise.stop(time + delayAmount * this.attackNoise);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.PluckSynth} `this`\n\t\t */\n\t\tTone.PluckSynth.prototype.dispose = function(){\n\t\t\tTone.Instrument.prototype.dispose.call(this);\n\t\t\tthis._noise.dispose();\n\t\t\tthis._lfcf.dispose();\n\t\t\tthis._noise = null;\n\t\t\tthis._lfcf = null;\n\t\t\tthis.dampening = null;\n\t\t\tthis.resonance = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.PluckSynth;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  Creates a polyphonic synthesizer out of \n\t\t *          the monophonic voice which is passed in. \n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Instrument}\n\t\t *  @param {number|Object} [polyphony=4] the number of voices to create\n\t\t *  @param {function} [voice=Tone.MonoSynth] the constructor of the voices\n\t\t *                                            uses Tone.MonoSynth by default\n\t\t *  @example\n\t\t *  //a polysynth composed of 6 Voices of MonoSynth\n\t\t *  var synth = new Tone.PolySynth(6, Tone.MonoSynth);\n\t\t *  //set a MonoSynth preset\n\t\t *  synth.setPreset(\"Pianoetta\");\n\t\t */\n\t\tTone.PolySynth = function(){\n\n\t\t\tTone.Instrument.call(this);\n\n\t\t\tvar options = this.optionsObject(arguments, [\"polyphony\", \"voice\"], Tone.PolySynth.defaults);\n\n\t\t\t/**\n\t\t\t *  the array of voices\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t\tthis.voices = new Array(options.polyphony);\n\n\t\t\t/**\n\t\t\t *  the queue of free voices\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t\tthis._freeVoices = [];\n\n\t\t\t/**\n\t\t\t *  keeps track of which notes are down\n\t\t\t *  @private\n\t\t\t *  @type {Object}\n\t\t\t */\n\t\t\tthis._activeVoices = {};\n\n\t\t\t//create the voices\n\t\t\tfor (var i = 0; i < options.polyphony; i++){\n\t\t\t\tvar v = new options.voice(arguments[2], arguments[3]);\n\t\t\t\tthis.voices[i] = v;\n\t\t\t\tv.connect(this.output);\n\t\t\t}\n\n\t\t\t//make a copy of the voices\n\t\t\tthis._freeVoices = this.voices.slice(0);\n\t\t\t//get the prototypes and properties\n\t\t};\n\n\t\tTone.extend(Tone.PolySynth, Tone.Instrument);\n\n\t\t/**\n\t\t *  the defaults\n\t\t *  @const\n\t\t *  @static\n\t\t *  @type {Object}\n\t\t */\n\t\tTone.PolySynth.defaults = {\n\t\t\t\"polyphony\" : 4,\n\t\t\t\"voice\" : Tone.MonoSynth\n\t\t};\n\n\t\t/**\n\t\t * Pull properties from the \n\t\t */\n\n\t\t/**\n\t\t *  trigger the attack\n\t\t *  @param  {string|number|Object|Array} value the value of the note(s) to start.\n\t\t *                                             if the value is an array, it will iterate\n\t\t *                                             over the array to play each of the notes\n\t\t *  @param  {Tone.Time} [time=now]  the start time of the note\n\t\t *  @param {number} [velocity=1] the velocity of the note\n\t\t *  @returns {Tone.PolySynth} `this`\n\t\t */\n\t\tTone.PolySynth.prototype.triggerAttack = function(value, time, velocity){\n\t\t\tif (!Array.isArray(value)){\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t\tfor (var i = 0; i < value.length; i++){\n\t\t\t\tvar val = value[i];\n\t\t\t\tvar stringified = JSON.stringify(val);\n\t\t\t\tif (this._activeVoices[stringified]){\n\t\t\t\t\tthis._activeVoices[stringified].triggerAttack(val, time, velocity);\n\t\t\t\t} else if (this._freeVoices.length > 0){\n\t\t\t\t\tvar voice = this._freeVoices.shift();\n\t\t\t\t\tvoice.triggerAttack(val, time, velocity);\n\t\t\t\t\tthis._activeVoices[stringified] = voice;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  trigger the attack and release after the specified duration\n\t\t *  \n\t\t *  @param  {string|number|Object|Array} value the note(s).\n\t\t *                                             if the value is an array, it will iterate\n\t\t *                                             over the array to play each of the notes\n\t\t *  @param  {Tone.Time} duration the duration of the note\n\t\t *  @param  {Tone.Time} [time=now]     if no time is given, defaults to now\n\t\t *  @param  {number} [velocity=1] the velocity of the attack (0-1)\n\t\t *  @returns {Tone.PolySynth} `this`\n\t\t */\n\t\tTone.PolySynth.prototype.triggerAttackRelease = function(value, duration, time, velocity){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis.triggerAttack(value, time, velocity);\n\t\t\tthis.triggerRelease(value, time + this.toSeconds(duration));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  trigger the release of a note\n\t\t *  @param  {string|number|Object|Array} value the value of the note(s) to release.\n\t\t *                                             if the value is an array, it will iterate\n\t\t *                                             over the array to play each of the notes\n\t\t *  @param  {Tone.Time} [time=now]  the release time of the note\n\t\t *  @returns {Tone.PolySynth} `this`\n\t\t */\n\t\tTone.PolySynth.prototype.triggerRelease = function(value, time){\n\t\t\tif (!Array.isArray(value)){\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t\tfor (var i = 0; i < value.length; i++){\n\t\t\t\t//get the voice\n\t\t\t\tvar stringified = JSON.stringify(value[i]);\n\t\t\t\tvar voice = this._activeVoices[stringified];\n\t\t\t\tif (voice){\n\t\t\t\t\tvoice.triggerRelease(time);\n\t\t\t\t\tthis._freeVoices.push(voice);\n\t\t\t\t\tthis._activeVoices[stringified] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  set the options on all of the voices\n\t\t *  @param {Object} params \n\t\t *  @returns {Tone.PolySynth} `this`\n\t\t */\n\t\tTone.PolySynth.prototype.set = function(params){\n\t\t\tfor (var i = 0; i < this.voices.length; i++){\n\t\t\t\tthis.voices[i].set(params);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  get a group of parameters\n\t\t *  @param {Array=} params the parameters to get, otherwise will return \n\t\t *  \t\t\t\t\t   all available.\n\t\t */\n\t\tTone.PolySynth.prototype.get = function(params){\n\t\t\treturn this.voices[0].get(params);\n\t\t};\n\n\t\t/**\n\t\t *  @param {string} presetName the preset name\n\t\t *  @returns {Tone.PolySynth} `this`\n\t\t */\n\t\tTone.PolySynth.prototype.setPreset = function(presetName){\n\t\t\tfor (var i = 0; i < this.voices.length; i++){\n\t\t\t\tthis.voices[i].setPreset(presetName);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.PolySynth} `this`\n\t\t */\n\t\tTone.PolySynth.prototype.dispose = function(){\n\t\t\tTone.Instrument.prototype.dispose.call(this);\n\t\t\tfor (var i = 0; i < this.voices.length; i++){\n\t\t\t\tthis.voices[i].dispose();\n\t\t\t\tthis.voices[i] = null;\n\t\t\t}\n\t\t\tthis.voices = null;\n\t\t\tthis._activeVoices = null;\n\t\t\tthis._freeVoices = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.PolySynth;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t * \t@class  Clip the incoming signal so that the output is always between min and max\n\t\t * \t\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} min the minimum value of the outgoing signal\n\t\t *  @param {number} max the maximum value of the outgoing signal\n\t\t *  @example\n\t\t *  var clip = new Tone.Clip(0.5, 1);\n\t\t *  var osc = new Tone.Oscillator().connect(clip);\n\t\t *  //clips the output of the oscillator to between 0.5 and 1.\n\t\t */\n\t\tTone.Clip = function(min, max){\n\t\t\t//make sure the args are in the right order\n\t\t\tif (min > max){\n\t\t\t\tvar tmp = min;\n\t\t\t\tmin = max;\n\t\t\t\tmax = tmp;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t *  The min clip value\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.min = this.input = new Tone.Min(max);\n\n\t\t\t/**\n\t\t\t *  The max clip value\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.max = this.output = new Tone.Max(min);\n\n\t\t\tthis.min.connect(this.max);\n\t\t};\n\n\t\tTone.extend(Tone.Clip, Tone.SignalBase);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Clip} `this`\n\t\t */\n\t\tTone.Clip.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.min.dispose();\n\t\t\tthis.min = null;\n\t\t\tthis.max.dispose();\n\t\t\tthis.max = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Clip;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  this is the maximum value that the divide can handle\t\n\t\t *  @type {number}\n\t\t *  @const\n\t\t */\n\t\tvar MAX_VALUE = Math.pow(2, 13);\n\n\t\t/**\n\t\t *  @private\n\t\t *  @static\n\t\t *  @type {Array}\n\t\t */\n\t\tvar guessCurve = new Array(MAX_VALUE);\n\t\t//set the value\n\t\tfor (var i = 0; i < guessCurve.length; i++){\n\t\t\tvar normalized = (i / (guessCurve.length - 1)) * 2 - 1;\n\t\t\tif (normalized === 0){\n\t\t\t\tguessCurve[i] = 0;\n\t\t\t} else {\n\t\t\t\tguessCurve[i] = 1 / (normalized * MAX_VALUE);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *  @class Compute the inverse of the input.\n\t\t *         Uses this approximation algorithm: \n\t\t *         http://en.wikipedia.org/wiki/Multiplicative_inverse#Algorithms\n\t\t *\n\t\t *  @deprecated\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {number} [precision=3] the precision of the calculation\n\t\t */\n\t\tTone.Inverse = function(precision){\n\n\t\t\tconsole.warn(\"Tone.Inverse has been deprecated. Multiply is always more efficient than dividing.\");\n\n\t\t\tTone.call(this);\n\n\t\t\tprecision = this.defaultArg(precision, 3);\n\n\t\t\t/**\n\t\t\t *  a constant generator of the value 2\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis._two = new Tone.Signal(2);\n\n\t\t\t/**\n\t\t\t *  starting guess is 0.1 times the input\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._guessMult = new Tone.Multiply(1/MAX_VALUE);\n\n\t\t\t/**\n\t\t\t *  produces a starting guess based on the input\n\t\t\t *  @type {WaveShaperNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._guess = new Tone.WaveShaper(guessCurve);\n\t\t\tthis.input.chain(this._guessMult, this._guess);\n\n\t\t\t/**\n\t\t\t *  the array of inverse helpers\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._inverses = new Array(precision);\n\n\t\t\t//create the helpers\n\t\t\tfor (var i = 0; i < precision; i++){\n\t\t\t\tvar guess;\n\t\t\t\tif (i === 0){\n\t\t\t\t\tguess = this._guess;\n\t\t\t\t} else {\n\t\t\t\t\tguess = this._inverses[i-1];\n\t\t\t\t}\n\t\t\t\tvar inv = new InverseHelper(guess, this._two);\n\t\t\t\tthis.input.connect(inv);\n\t\t\t\tthis._inverses[i] = inv;\n\t\t\t}\n\t\t\tthis._inverses[precision-1].connect(this.output);\n\t\t};\n\n\t\tTone.extend(Tone.Inverse, Tone.SignalBase);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Inverse} `this`\n\t\t */\n\t\tTone.Inverse.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tfor (var i = 0; i < this._inverses.length; i++){\n\t\t\t\tthis._inverses[i].dispose();\n\t\t\t\tthis._inverses[i] = null;\n\t\t\t}\n\t\t\tthis._inverses = null;\n\t\t\tthis._two.dispose();\n\t\t\tthis._two = null;\n\t\t\tthis._guessMult.dispose();\n\t\t\tthis._guessMult = null;\n\t\t\tthis._guess.disconnect();\n\t\t\tthis._guess = null;\n\t\t\treturn this;\n\t\t};\n\n\t\t// BEGIN INVERSE HELPER ///////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  internal helper function for computing the inverse of a signal\n\t\t *  @extends {Tone}\n\t\t *  @constructor\n\t\t *  @private\n\t\t */\n\t\tvar InverseHelper = function(guess, two){\n\t\t\tthis._outerMultiply = new Tone.Multiply();\n\t\t\tthis._innerMultiply = new Tone.Multiply();\n\t\t\tthis._subtract = new Tone.Subtract();\n\t\t\t//connections\n\t\t\tguess.connect(this._innerMultiply, 0, 1);\n\t\t\ttwo.connect(this._subtract, 0, 0);\n\t\t\tthis._innerMultiply.connect(this._subtract, 0, 1);\n\t\t\tthis._subtract.connect(this._outerMultiply, 0, 1);\n\t\t\tguess.connect(this._outerMultiply, 0, 0);\n\t\t\tthis.output = this._outerMultiply;\n\t\t\tthis.input = this._innerMultiply;\n\t\t};\n\n\t\tTone.extend(InverseHelper);\n\n\t\tInverseHelper.prototype.dispose = function(){\n\t\t\tthis._outerMultiply.dispose();\n\t\t\tthis._outerMultiply = null;\n\t\t\tthis._innerMultiply.dispose();\n\t\t\tthis._innerMultiply = null;\n\t\t\tthis._subtract.dispose();\n\t\t\tthis._subtract = null;\n\t\t};\n\t\t\n\t\t// END INVERSE HELPER /////////////////////////////////////////////////////\n\n\t\treturn Tone.Inverse;\n\t});\n\tToneModule( \n\tfunction(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Divide by a value or signal. \n\t\t *         input 0: numerator. input 1: divisor. \n\t\t *\n\t\t *  @deprecated\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @param {number=} divisor if no value is provided, Tone.Divide will divide the first\n\t\t *                         and second inputs. \n\t\t *  @param {number} [precision=3] the precision of the calculation\n\t\t */\n\t\tTone.Divide = function(divisor, precision){\n\n\t\t\tconsole.warn(\"Tone.Divide has been deprecated. If possible, it's much more efficient to multiply by the inverse value.\");\n\n\t\t\tTone.call(this, 2, 0);\n\n\t\t\t/**\n\t\t\t *  the denominator value\n\t\t\t *  @type {Tone.Signal}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._denominator = null;\n\n\t\t\t/**\n\t\t\t *  the inverse\n\t\t\t *  @type {Tone}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._inverse = new Tone.Inverse(precision);\n\n\t\t\t/**\n\t\t\t *  multiply input 0 by the inverse\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._mult = new Tone.Multiply();\n\n\t\t\tif (isFinite(divisor)){\n\t\t\t\tthis._denominator = new Tone.Signal(divisor);\n\t\t\t\tthis._denominator.connect(this._inverse);\n\t\t\t}\n\t\t\tthis.input[1] = this._inverse;\n\t\t\tthis._inverse.connect(this._mult, 0, 1);\n\t\t\tthis.input[0] = this.output = this._mult.input[0];\n\t\t};\n\n\t\tTone.extend(Tone.Divide, Tone.SignalBase);\n\n\t\t/**\n\t\t * The value being divided from the incoming signal. Note, that\n\t\t * if Divide was constructed without a divisor, it expects\n\t\t * that the signals to numberator will be connected to input 0 and \n\t\t * the denominator to input 1 and therefore will throw an error when \n\t\t * trying to set/get the value. \n\t\t * \n\t\t * @memberOf Tone.Divide#\n\t\t * @type {number}\n\t\t * @name value\n\t\t */\n\t\tObject.defineProperty(Tone.Divide.prototype, \"value\", {\n\t\t\tget : function(){\n\t\t\t\tif (this._denominator !== null){\n\t\t\t\t\treturn this._denominator.value;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"cannot switch from signal to number\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tset : function(value){\n\t\t\t\tif (this._denominator !== null){\n\t\t\t\t\tthis._denominator.value = value;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"cannot switch from signal to number\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Divide} `this`\n\t\t */\n\t\tTone.Divide.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tif (this._denominator){\n\t\t\t\tthis._denominator.dispose();\n\t\t\t\tthis._denominator = null;\n\t\t\t}\n\t\t\tthis._inverse.dispose();\n\t\t\tthis._inverse = null;\n\t\t\tthis._mult.dispose();\n\t\t\tthis._mult = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Divide;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Normalize takes an input min and max and maps it linearly to [0,1]\n\t\t *\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @constructor\n\t\t *  @example\n\t\t *  var norm = new Tone.Normalize(2, 4);\n\t\t *  var sig = new Tone.Signal(3).connect(norm);\n\t\t *  //output of norm is 0.5. \n\t\t */\n\t\tTone.Normalize = function(inputMin, inputMax){\n\n\t\t\t/**\n\t\t\t *  the min input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._inputMin = this.defaultArg(inputMin, 0);\n\n\t\t\t/**\n\t\t\t *  the max input value\n\t\t\t *  @type {number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._inputMax = this.defaultArg(inputMax, 1);\n\n\t\t\t/**\n\t\t\t *  subtract the min from the input\n\t\t\t *  @type {Tone.Add}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._sub = this.input = new Tone.Add(0);\n\n\t\t\t/**\n\t\t\t *  divide by the difference between the input and output\n\t\t\t *  @type {Tone.Multiply}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._div = this.output = new Tone.Multiply(1);\n\n\t\t\tthis._sub.connect(this._div);\n\t\t\tthis._setRange();\n\t\t};\n\n\t\tTone.extend(Tone.Normalize, Tone.SignalBase);\n\n\t\t/**\n\t\t * The minimum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name min\n\t\t */\n\t\tObject.defineProperty(Tone.Normalize.prototype, \"min\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._inputMin;\n\t\t\t},\n\t\t\tset : function(min){\n\t\t\t\tthis._inputMin = min;\n\t\t\t\tthis._setRange();\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * The maximum value the input signal will reach.\n\t\t * @memberOf Tone.Normalize#\n\t\t * @type {number}\n\t\t * @name max\n\t\t */\n\t\tObject.defineProperty(Tone.Normalize.prototype, \"max\", {\n\t\t\tget : function(){\n\t\t\t\treturn this._inputMax;\n\t\t\t},\n\t\t\tset : function(max){\n\t\t\t\tthis._inputMax = max;\n\t\t\t\tthis._setRange();\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t *  set the values\n\t\t *  @private\n\t\t */\n\t\tTone.Normalize.prototype._setRange = function() {\n\t\t\tthis._sub.value = -this._inputMin;\n\t\t\tthis._div.value = 1 / (this._inputMax - this._inputMin);\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Normalize} `this`\n\t\t */\n\t\tTone.Normalize.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis._sub.dispose();\n\t\t\tthis._sub = null;\n\t\t\tthis._div.dispose();\n\t\t\tthis._div = null;\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Tone.Normalize;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class Route a single input to the specified output\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @param {number} [outputCount=2] the number of inputs the switch accepts\n\t\t *  @example\n\t\t *  var route = new Tone.Route(4);\n\t\t *  var signal = new Tone.Signal(3).connect(route);\n\t\t *  route.gate.value = 0;\n\t\t *  //signal is routed through output 0\n\t\t *  route.gate.value = 3;\n\t\t *  //signal is now routed through output 3\n\t\t */\n\t\tTone.Route = function(outputCount){\n\n\t\t\toutputCount = this.defaultArg(outputCount, 2);\n\t\t\tTone.call(this, 1, outputCount);\n\n\t\t\t/**\n\t\t\t *  the control signal\n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.gate = new Tone.Signal(0);\n\n\t\t\t//make all the inputs and connect them\n\t\t\tfor (var i = 0; i < outputCount; i++){\n\t\t\t\tvar routeGate = new RouteGate(i);\n\t\t\t\tthis.output[i] = routeGate;\n\t\t\t\tthis.gate.connect(routeGate.selecter);\n\t\t\t\tthis.input.connect(routeGate);\n\t\t\t}\n\t\t};\n\n\t\tTone.extend(Tone.Route, Tone.SignalBase);\n\n\t\t/**\n\t\t *  routes the signal to one of the outputs and close the others\n\t\t *  @param {number} [which=0] open one of the gates (closes the other)\n\t\t *  @param {Tone.Time} time the time when the switch will open\n\t\t *  @returns {Tone.Route} `this`\n\t\t */\n\t\tTone.Route.prototype.select = function(which, time){\n\t\t\t//make sure it's an integer\n\t\t\twhich = Math.floor(which);\n\t\t\tthis.gate.setValueAtTime(which, this.toSeconds(time));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  dispose method\n\t\t *  @returns {Tone.Route} `this`\n\t\t */\n\t\tTone.Route.prototype.dispose = function(){\n\t\t\tthis.gate.dispose();\n\t\t\tfor (var i = 0; i < this.output.length; i++){\n\t\t\t\tthis.output[i].dispose();\n\t\t\t\tthis.output[i] = null;\n\t\t\t}\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.gate = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\t////////////START HELPER////////////\n\n\t\t/**\n\t\t *  helper class for Tone.Route representing a single gate\n\t\t *  @constructor\n\t\t *  @extends {Tone}\n\t\t *  @private\n\t\t */\n\t\tvar RouteGate = function(num){\n\n\t\t\t/**\n\t\t\t *  the selector\n\t\t\t *  @type {Tone.Equal}\n\t\t\t */\n\t\t\tthis.selecter = new Tone.Equal(num);\n\n\t\t\t/**\n\t\t\t *  the gate\n\t\t\t *  @type {GainNode}\n\t\t\t */\n\t\t\tthis.gate = this.input = this.output = this.context.createGain();\n\n\t\t\t//connect the selecter to the gate gain\n\t\t\tthis.selecter.connect(this.gate.gain);\n\t\t};\n\n\t\tTone.extend(RouteGate);\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @private\n\t\t */\n\t\tRouteGate.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.selecter.dispose();\n\t\t\tthis.gate.disconnect();\n\t\t\tthis.selecter = null;\n\t\t\tthis.gate = null;\n\t\t};\n\n\t\t////////////END HELPER////////////\n\n\t\t//return Tone.Route\n\t\treturn Tone.Route;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  When the gate is set to 0, the input signal does not pass through to the output. \n\t\t *          If the gate is set to 1, the input signal passes through.\n\t\t *          the gate is initially closed.\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.SignalBase}\n\t\t *  @example\n\t\t *  var sigSwitch = new Tone.Switch();\n\t\t *  var signal = new Tone.Signal(2).connect(sigSwitch);\n\t\t *  //initially no output from sigSwitch\n\t\t *  sigSwitch.gate.value = 1;\n\t\t *  //open the switch and allow the signal through\n\t\t *  //the output of sigSwitch is now 2. \n\t\t */\n\t\tTone.Switch = function(){\n\t\t\tTone.call(this);\n\n\t\t\t/**\n\t\t\t *  the control signal for the switch\n\t\t\t *  when this value is 0, the input signal will not pass through,\n\t\t\t *  when it is high (1), the input signal will pass through.\n\t\t\t *  \n\t\t\t *  @type {Tone.Signal}\n\t\t\t */\n\t\t\tthis.gate = new Tone.Signal(0);\n\n\t\t\t/**\n\t\t\t *  thresh the control signal to either 0 or 1\n\t\t\t *  @type {Tone.GreaterThan}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._thresh = new Tone.GreaterThan(0.5);\n\n\t\t\tthis.input.connect(this.output);\n\t\t\tthis.gate.chain(this._thresh, this.output.gain);\n\t\t};\n\n\t\tTone.extend(Tone.Switch, Tone.SignalBase);\n\n\t\t/**\n\t\t *  open the switch at a specific time\n\t\t *\n\t\t *  @param {Tone.Time=} time the time when the switch will be open\n\t\t *  @returns {Tone.Switch} `this`\n\t\t *  @example\n\t\t *  //open the switch to let the signal through\n\t\t *  sigSwitch.open();\n\t\t */\n\t\tTone.Switch.prototype.open = function(time){\n\t\t\tthis.gate.setValueAtTime(1, this.toSeconds(time));\n\t\t\treturn this;\n\t\t}; \n\n\t\t/**\n\t\t *  close the switch at a specific time\n\t\t *\n\t\t *  @param {Tone.Time} time the time when the switch will be open\n\t\t *  @returns {Tone.Switch} `this`\n\t\t *  @example\n\t\t *  //close the switch a half second from now\n\t\t *  sigSwitch.close(\"+0.5\");\n\t\t */\n\t\tTone.Switch.prototype.close = function(time){\n\t\t\tthis.gate.setValueAtTime(0, this.toSeconds(time));\n\t\t\treturn this;\n\t\t}; \n\n\t\t/**\n\t\t *  clean up\n\t\t *  @returns {Tone.Switch} `this`\n\t\t */\n\t\tTone.Switch.prototype.dispose = function(){\n\t\t\tTone.prototype.dispose.call(this);\n\t\t\tthis.gate.dispose();\n\t\t\tthis._thresh.dispose();\n\t\t\tthis.gate = null;\n\t\t\tthis._thresh = null;\n\t\t\treturn this;\n\t\t}; \n\n\t\treturn Tone.Switch;\n\t});\n\tToneModule( function(Tone){\n\n\t\t\n\n\t\t/**\n\t\t *  @class  WebRTC Microphone. \n\t\t *          CHROME ONLY (for now) because of the \n\t\t *          use of the MediaStreamAudioSourceNode\n\t\t *\n\t\t *  @constructor\n\t\t *  @extends {Tone.Source}\n\t\t *  @param {number=} inputNum \n\t\t */\n\t\tTone.Microphone = function(inputNum){\n\t\t\tTone.Source.call(this);\n\n\t\t\t/**\n\t\t\t *  @type {MediaStreamAudioSourceNode}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._mediaStream = null;\n\t\t\t\n\t\t\t/**\n\t\t\t *  @type {LocalMediaStream}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._stream = null;\n\t\t\t\n\t\t\t/**\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._constraints = {\"audio\" : true};\n\n\t\t\t//get the option\n\t\t\tvar self = this;\n\t\t\tMediaStreamTrack.getSources(function (media_sources) {\n\t\t\t\tif (inputNum < media_sources.length){\n\t\t\t\t\tself.constraints.audio = {\n\t\t\t\t\t\toptional : [{ sourceId: media_sources[inputNum].id}]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\t\t\n\t\t};\n\n\t\tTone.extend(Tone.Microphone, Tone.Source);\n\n\t\t/**\n\t\t *  start the stream. \n\t\t *  @private\n\t\t */\n\t\tTone.Microphone.prototype._start = function(){\n\t\t\tnavigator.getUserMedia(this._constraints, \n\t\t\t\tthis._onStream.bind(this), this._onStreamError.bind(this));\n\t\t};\n\n\t\t/**\n\t\t *  stop the stream. \n\t\t *  @private\n\t\t */\n\t\tTone.Microphone.prototype._stop = function(){\n\t\t\tthis._stream.stop();\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *  called when the stream is successfully setup\n\t\t *  @param   {LocalMediaStream} stream \n\t\t *  @private\n\t\t */\n\t\tTone.Microphone.prototype._onStream = function(stream) {\n\t\t\tthis._stream = stream;\n\t\t\t// Wrap a MediaStreamSourceNode around the live input stream.\n\t\t\tthis._mediaStream = this.context.createMediaStreamSource(stream);\n\t\t\tthis._mediaStream.connect(this.output);\n\t\t};\n\n\t\t/**\n\t\t *  called on error\n\t\t *  @param   {Error} e \n\t\t *  @private\n\t\t */\n\t\tTone.Microphone.prototype._onStreamError = function(e) {\n\t\t\tconsole.error(e);\n\t\t};\n\n\t\t/**\n\t\t *  clean up\n\t\t *  @return {Tone.Microphone} `this`\n\t\t */\n\t\tTone.Microphone.prototype.dispose = function() {\n\t\t\tTone.Source.prototype.dispose.call(this);\n\t\t\tif (this._mediaStream){\n\t\t\t\tthis._mediaStream.disconnect();\n\t\t\t\tthis._mediaStream = null;\n\t\t\t}\n\t\t\tthis._stream = null;\n\t\t\tthis._constraints = null;\n\t\t\treturn this;\n\t\t};\n\n\t\t//polyfill\n\t\tnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || \n\t\t\tnavigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n\t\treturn Tone.Microphone;\n\t});\n\n\t//requirejs compatibility\n\tif ( true ) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn Tone;\n\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t\troot.Tone = Tone;\n\t}\n} (this));\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/tone/build/Tone.js\n ** module id = 15\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/tone/build/Tone.js?");

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _core = __webpack_require__(13)[\"default\"];\n\nvar _interopRequire = __webpack_require__(8)[\"default\"];\n\nvar Bacon = _interopRequire(__webpack_require__(14));\n\nvar Tone = _interopRequire(__webpack_require__(15));\n\nvar tone = new Tone();\n\nfunction transportDelay(delay) {\n  return Bacon.fromBinder(function (sink) {\n    sink(true);\n\n    Tone.Transport.setTimeout(function () {\n      sink(false);\n      sink(new Bacon.End());\n    }, delay);\n  });\n}\n\nfunction clone(event) {\n  return _core.Object.assign({}, event);\n}\n\nexports.bus = {\n  pool: function pool() {\n    var n = arguments[0] === undefined ? 5 : arguments[0];\n\n    var buses = [];\n\n    for (var i = 0; i < n; i++) {\n      buses.push(new Bacon.Bus());\n    }\n\n    return buses;\n  }\n};\n\nexports.cycle = function (transform) {\n  for (var _len = arguments.length, items = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    items[_key - 1] = arguments[_key];\n  }\n\n  var tick = 0;\n\n  return function (event) {\n    var item = items[tick++];\n    tick = tick % items.length;\n\n    return transform(item)(event);\n  };\n};\n\nexports.random = function (transform) {\n  for (var _len = arguments.length, items = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    items[_key - 1] = arguments[_key];\n  }\n\n  return function (event) {\n    var position = Math.floor(Math.random() * items.length);\n    var item = items[position];\n\n    return transform(item)(event);\n  };\n};\n\nexports.stack = function (transform) {\n  for (var _len = arguments.length, items = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    items[_key - 1] = arguments[_key];\n  }\n\n  return function (event) {\n    return Bacon.fromArray(items).flatMap(function (item) {\n      return transform(item)(event);\n    });\n  };\n};\n\nexports.passThrough = function (x) {\n  return function () {\n    return x;\n  };\n};\n\nfunction mappable(fn) {\n  return function (x, event) {\n    return event ? fn(x, clone(event)) : function (event) {\n      return fn(x, clone(event));\n    };\n  };\n}\n\nexports.time = {\n  add: mappable(function (x, event) {\n    event.time += tone.notationToSeconds(x);\n    return event;\n  }),\n\n  delay: mappable(function (x, event) {\n    return Bacon.once(event).map(exports.time.add(x)).delay(0).holdWhen(transportDelay(x));\n  })\n};\n\nexports.note = {\n  add: mappable(function (x, event) {\n    event.note = Math.max(0, event.note + x);\n    return event;\n  }),\n\n  set: mappable(function (x, event) {\n    event.note = x;\n    return event;\n  })\n};\n\nexports.dur = {\n  set: mappable(function (x, event) {\n    event.dur = x;\n    return event;\n  })\n};\n\nexports.vel = {\n  add: mappable(function (x, event) {\n    event.vel += x;\n    return event;\n  }),\n\n  multiply: mappable(function (x, event) {\n    event.vel *= x;\n    return event;\n  }),\n\n  set: mappable(function (x, event) {\n    event.vel = x;\n    return event;\n  })\n};\n\nexports.start = function () {\n  var bpm = arguments[0] === undefined ? 140 : arguments[0];\n\n  Tone.Transport.bpm.value = bpm;\n\n  setTimeout(function () {\n    Tone.Transport.start();\n  }, 500);\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/Utils.js\n ** module id = 16\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../src/Utils.js?");

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _classCallCheck = __webpack_require__(9)[\"default\"];\n\nvar _interopRequire = __webpack_require__(8)[\"default\"];\n\nvar Bacon = _interopRequire(__webpack_require__(14));\n\nvar Tone = _interopRequire(__webpack_require__(15));\n\nvar Metronome = function Metronome() {\n  var _ref = arguments[0] === undefined ? {} : arguments[0];\n\n  var _ref$div = _ref.div;\n  var div = _ref$div === undefined ? \"4n\" : _ref$div;\n  var _ref$note = _ref.note;\n  var note = _ref$note === undefined ? 0 : _ref$note;\n  var _ref$dur = _ref.dur;\n  var dur = _ref$dur === undefined ? \"64n\" : _ref$dur;\n  var _ref$vel = _ref.vel;\n  var vel = _ref$vel === undefined ? 1 : _ref$vel;\n\n  _classCallCheck(this, Metronome);\n\n  return Bacon.fromBinder(function (sink) {\n    Tone.Transport.setInterval(function (time) {\n      sink({ time: time, note: note, dur: dur, vel: vel });\n    }, div);\n  });\n};\n\nmodule.exports = Metronome;\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/Metronome.js\n ** module id = 17\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../src/Metronome.js?");

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar _classCallCheck = __webpack_require__(9)[\"default\"];\n\nvar _createClass = __webpack_require__(12)[\"default\"];\n\nvar _interopRequire = __webpack_require__(8)[\"default\"];\n\nvar Teoria = _interopRequire(__webpack_require__(58));\n\nvar Bacon = _interopRequire(__webpack_require__(14));\n\nvar VoiceGroup = (function () {\n  function VoiceGroup() {\n    var _ref = arguments[0] === undefined ? {} : arguments[0];\n\n    var _ref$root = _ref.root;\n    var root = _ref$root === undefined ? \"c3\" : _ref$root;\n    var _ref$scale = _ref.scale;\n    var scale = _ref$scale === undefined ? \"major\" : _ref$scale;\n    var synth = _ref.synth;\n\n    _classCallCheck(this, VoiceGroup);\n\n    this.bus = new Bacon.Bus();\n    this.synth = synth;\n    this.root = Teoria.note(root);\n    this.scale = this.root.scale(scale);\n\n    this.bus.onValue(this.handleValue.bind(this));\n\n    return this.bus;\n  }\n\n  _createClass(VoiceGroup, {\n    handleValue: {\n      value: function handleValue(_ref) {\n        var note = _ref.note;\n        var _ref$dur = _ref.dur;\n        var dur = _ref$dur === undefined ? \"32n\" : _ref$dur;\n        var time = _ref.time;\n        var vel = _ref.vel;\n\n        this.synth.triggerAttackRelease(this.convertNote(note), dur, time, Math.min(Math.abs(vel), 1));\n      }\n    },\n    convertNote: {\n      value: function convertNote(note) {\n        // @todo handle negative index\n        var downward = note < 0;\n        var sign = downward ? -1 : 1;\n\n        var scaleLength = this.scale.scale.length;\n\n        var octave = this.root.octave() + Math.floor(note / scaleLength);\n        var position = note % scaleLength + 1;\n\n        var noteName = this.scale.get(position).toString(true) + octave;\n\n        return noteName;\n      }\n    }\n  });\n\n  return VoiceGroup;\n})();\n\nmodule.exports = VoiceGroup;\n\n/*****************\n ** WEBPACK FOOTER\n ** ../src/VoiceGroup.js\n ** module id = 18\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../src/VoiceGroup.js?");

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n\"use strict\";\n\nvar _core = __webpack_require__(13)[\"default\"];\n\n!(function (global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var iteratorSymbol = typeof _core.Symbol === \"function\" && _core.Symbol.iterator || \"@@iterator\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    return new Generator(innerFn, outerFn, self || null, tryLocsList || []);\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction ||\n    // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    genFun.__proto__ = GeneratorFunctionPrototype;\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    return new _core.Promise(function (resolve, reject) {\n      var generator = wrap(innerFn, outerFn, self, tryLocsList);\n      var callNext = step.bind(generator.next);\n      var callThrow = step.bind(generator[\"throw\"]);\n\n      function step(arg) {\n        var record = tryCatch(this, null, arg);\n        if (record.type === \"throw\") {\n          reject(record.arg);\n          return;\n        }\n\n        var info = record.arg;\n        if (info.done) {\n          resolve(info.value);\n        } else {\n          _core.Promise.resolve(info.value).then(callNext, callThrow);\n        }\n      }\n\n      callNext();\n    });\n  };\n\n  function Generator(innerFn, outerFn, self, tryLocsList) {\n    var generator = outerFn ? Object.create(outerFn.prototype) : this;\n    var context = new Context(tryLocsList);\n    var state = GenStateSuspendedStart;\n\n    function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          if (state === GenStateSuspendedStart && typeof arg !== \"undefined\") {\n            // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n            throw new TypeError(\"attempt to send \" + JSON.stringify(arg) + \" to newborn generator\");\n          }\n\n          if (state === GenStateSuspendedYield) {\n            context.sent = arg;\n          } else {\n            delete context.sent;\n          }\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n\n          if (method === \"next\") {\n            context.dispatchException(record.arg);\n          } else {\n            arg = record.arg;\n          }\n        }\n      }\n    }\n\n    generator.next = invoke.bind(generator, \"next\");\n    generator[\"throw\"] = invoke.bind(generator, \"throw\");\n    generator[\"return\"] = invoke.bind(generator, \"return\");\n\n    return generator;\n  }\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset();\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function reset() {\n      this.prev = 0;\n      this.next = 0;\n      this.sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      // Pre-initialize at least 20 temporary variables to enable hidden\n      // class optimizations for simple generators.\n      for (var tempIndex = 0, tempName; hasOwn.call(this, tempName = \"t\" + tempIndex) || tempIndex < 20; ++tempIndex) {\n        this[tempName] = null;\n      }\n    },\n\n    stop: function stop() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg < finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          return this.complete(entry.completion, entry.afterLoc);\n        }\n      }\n    },\n\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n// Among the various tricks for obtaining a reference to the global\n// object, this seems to be the most reliable technique that does not\n// use indirect eval (which violates Content Security Policy).\ntypeof global === \"object\" ? global : typeof window === \"object\" ? window : undefined);\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/babel-runtime/regenerator/runtime.js\n ** module id = 19\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///../~/babel-runtime/regenerator/runtime.js?");

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule React\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar EventPluginUtils = __webpack_require__(26);\nvar ReactChildren = __webpack_require__(27);\nvar ReactComponent = __webpack_require__(28);\nvar ReactClass = __webpack_require__(29);\nvar ReactContext = __webpack_require__(30);\nvar ReactCurrentOwner = __webpack_require__(31);\nvar ReactElement = __webpack_require__(32);\nvar ReactElementValidator = __webpack_require__(33);\nvar ReactDOM = __webpack_require__(34);\nvar ReactDOMTextComponent = __webpack_require__(35);\nvar ReactDefaultInjection = __webpack_require__(36);\nvar ReactInstanceHandles = __webpack_require__(37);\nvar ReactMount = __webpack_require__(38);\nvar ReactPerf = __webpack_require__(39);\nvar ReactPropTypes = __webpack_require__(40);\nvar ReactReconciler = __webpack_require__(41);\nvar ReactServerRendering = __webpack_require__(42);\n\nvar assign = __webpack_require__(43);\nvar findDOMNode = __webpack_require__(44);\nvar onlyChild = __webpack_require__(45);\n\nReactDefaultInjection.inject();\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar render = ReactPerf.measure('React', 'render', ReactMount.render);\n\nvar React = {\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    only: onlyChild\n  },\n  Component: ReactComponent,\n  DOM: ReactDOM,\n  PropTypes: ReactPropTypes,\n  initializeTouchEvents: function(shouldUseTouch) {\n    EventPluginUtils.useTouchEvents = shouldUseTouch;\n  },\n  createClass: ReactClass.createClass,\n  createElement: createElement,\n  cloneElement: cloneElement,\n  createFactory: createFactory,\n  createMixin: function(mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n  constructAndRenderComponent: ReactMount.constructAndRenderComponent,\n  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,\n  findDOMNode: findDOMNode,\n  render: render,\n  renderToString: ReactServerRendering.renderToString,\n  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  isValidElement: ReactElement.isValidElement,\n  withContext: ReactContext.withContext,\n\n  // Hook for JSX spread, don't use this for anything else.\n  __spread: assign\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    CurrentOwner: ReactCurrentOwner,\n    InstanceHandles: ReactInstanceHandles,\n    Mount: ReactMount,\n    Reconciler: ReactReconciler,\n    TextComponent: ReactDOMTextComponent\n  });\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var ExecutionEnvironment = __webpack_require__(46);\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // If we're in Chrome, look for the devtools marker and provide a download\n    // link if not installed.\n    if (navigator.userAgent.indexOf('Chrome') > -1) {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n        console.debug(\n          'Download the React DevTools for a better development experience: ' +\n          'http://fb.me/react-devtools'\n        );\n      }\n    }\n\n    var expectedFeatures = [\n      // shims\n      Array.isArray,\n      Array.prototype.every,\n      Array.prototype.forEach,\n      Array.prototype.indexOf,\n      Array.prototype.map,\n      Date.now,\n      Function.prototype.bind,\n      Object.keys,\n      String.prototype.split,\n      String.prototype.trim,\n\n      // shams\n      Object.create,\n      Object.freeze\n    ];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        console.error(\n          'One or more ES5 shim/shams expected by React are not available: ' +\n          'http://fb.me/react-warning-polyfills'\n        );\n        break;\n      }\n    }\n  }\n}\n\nReact.version = '0.13.1';\n\nmodule.exports = React;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/React.js\n ** module id = 20\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/React.js?");

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactWithAddons\n */\n\n/**\n * This module exists purely in the open source project, and is meant as a way\n * to create a separate standalone build of React. This build has \"addons\", or\n * functionality we've built and think might be useful but doesn't have a good\n * place to live inside React core.\n */\n\n'use strict';\n\nvar LinkedStateMixin = __webpack_require__(47);\nvar React = __webpack_require__(20);\nvar ReactComponentWithPureRenderMixin =\n  __webpack_require__(48);\nvar ReactCSSTransitionGroup = __webpack_require__(49);\nvar ReactFragment = __webpack_require__(50);\nvar ReactTransitionGroup = __webpack_require__(51);\nvar ReactUpdates = __webpack_require__(52);\n\nvar cx = __webpack_require__(53);\nvar cloneWithProps = __webpack_require__(54);\nvar update = __webpack_require__(55);\n\nReact.addons = {\n  CSSTransitionGroup: ReactCSSTransitionGroup,\n  LinkedStateMixin: LinkedStateMixin,\n  PureRenderMixin: ReactComponentWithPureRenderMixin,\n  TransitionGroup: ReactTransitionGroup,\n\n  batchedUpdates: ReactUpdates.batchedUpdates,\n  classSet: cx,\n  cloneWithProps: cloneWithProps,\n  createFragment: ReactFragment.create,\n  update: update\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  React.addons.Perf = __webpack_require__(56);\n  React.addons.TestUtils = __webpack_require__(57);\n}\n\nmodule.exports = React;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactWithAddons.js\n ** module id = 21\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactWithAddons.js?");

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!Please JS v0.4.2, Jordan Checkman 2014, Checkman.io, MIT License, Have fun.*/\n!function(e,r,a){true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (a), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):\"object\"==typeof exports?module.exports=a():r[e]=a()}(\"Please\",this,function(){\"use strict\";function e(){function e(e,r,a){var o=Math.random;return a instanceof l&&(o=a.random),Math.floor(o()*(r-e+1))+e}function r(e,r,a){var o=Math.random;return a instanceof l&&(o=a.random),o()*(r-e)+e}function a(e,r,a){return Math.max(r,Math.min(e,a))}function o(e,r){var a;switch(e){case\"hex\":for(a=0;a<r.length;a++)r[a]=F.HSV_to_HEX(r[a]);break;case\"rgb\":for(a=0;a<r.length;a++)r[a]=F.HSV_to_RGB(r[a]);break;case\"rgb-string\":for(a=0;a<r.length;a++){var o=F.HSV_to_RGB(r[a]);r[a]=\"rgb(\"+o.r+\",\"+o.g+\",\"+o.b+\")\"}break;case\"hsv\":break;default:console.error(\"Format not recognized.\")}return r}function n(e){var r=F.HSV_to_RGB(e),a=(299*r.r+587*r.g+114*r.b)/1e3;return a>=128?\"dark\":\"light\"}function t(e){var r={};for(var a in e)e.hasOwnProperty(a)&&(r[a]=e[a]);return r}function l(e){function r(){o=(o+1)%256,n=(n+a[o])%256;var e=a[o];return a[o]=a[n],a[n]=e,a[(a[o]+a[n])%256]}for(var a=[],o=0,n=0,t=0;256>t;t++)a[t]=t;for(var l=0,F=0;256>l;l++){F=(F+a[l]+e.charCodeAt(l%e.length))%256;var s=a[l];a[l]=a[F],a[F]=s}this.random=function(){for(var e=0,a=0,o=1;8>e;e++)a+=r()*o,o*=256;return a/0x10000000000000000}}var F={},s={aliceblue:\"F0F8FF\",antiquewhite:\"FAEBD7\",aqua:\"00FFFF\",aquamarine:\"7FFFD4\",azure:\"F0FFFF\",beige:\"F5F5DC\",bisque:\"FFE4C4\",black:\"000000\",blanchedalmond:\"FFEBCD\",blue:\"0000FF\",blueviolet:\"8A2BE2\",brown:\"A52A2A\",burlywood:\"DEB887\",cadetblue:\"5F9EA0\",chartreuse:\"7FFF00\",chocolate:\"D2691E\",coral:\"FF7F50\",cornflowerblue:\"6495ED\",cornsilk:\"FFF8DC\",crimson:\"DC143C\",cyan:\"00FFFF\",darkblue:\"00008B\",darkcyan:\"008B8B\",darkgoldenrod:\"B8860B\",darkgray:\"A9A9A9\",darkgrey:\"A9A9A9\",darkgreen:\"006400\",darkkhaki:\"BDB76B\",darkmagenta:\"8B008B\",darkolivegreen:\"556B2F\",darkorange:\"FF8C00\",darkorchid:\"9932CC\",darkred:\"8B0000\",darksalmon:\"E9967A\",darkseagreen:\"8FBC8F\",darkslateblue:\"483D8B\",darkslategray:\"2F4F4F\",darkslategrey:\"2F4F4F\",darkturquoise:\"00CED1\",darkviolet:\"9400D3\",deeppink:\"FF1493\",deepskyblue:\"00BFFF\",dimgray:\"696969\",dimgrey:\"696969\",dodgerblue:\"1E90FF\",firebrick:\"B22222\",floralwhite:\"FFFAF0\",forestgreen:\"228B22\",fuchsia:\"FF00FF\",gainsboro:\"DCDCDC\",ghostwhite:\"F8F8FF\",gold:\"FFD700\",goldenrod:\"DAA520\",gray:\"808080\",grey:\"808080\",green:\"008000\",greenyellow:\"ADFF2F\",honeydew:\"F0FFF0\",hotpink:\"FF69B4\",indianred:\"CD5C5C\",indigo:\"4B0082\",ivory:\"FFFFF0\",khaki:\"F0E68C\",lavender:\"E6E6FA\",lavenderblush:\"FFF0F5\",lawngreen:\"7CFC00\",lemonchiffon:\"FFFACD\",lightblue:\"ADD8E6\",lightcoral:\"F08080\",lightcyan:\"E0FFFF\",lightgoldenrodyellow:\"FAFAD2\",lightgray:\"D3D3D3\",lightgrey:\"D3D3D3\",lightgreen:\"90EE90\",lightpink:\"FFB6C1\",lightsalmon:\"FFA07A\",lightseagreen:\"20B2AA\",lightskyblue:\"87CEFA\",lightslategray:\"778899\",lightslategrey:\"778899\",lightsteelblue:\"B0C4DE\",lightyellow:\"FFFFE0\",lime:\"00FF00\",limegreen:\"32CD32\",linen:\"FAF0E6\",magenta:\"FF00FF\",maroon:\"800000\",mediumaquamarine:\"66CDAA\",mediumblue:\"0000CD\",mediumorchid:\"BA55D3\",mediumpurple:\"9370D8\",mediumseagreen:\"3CB371\",mediumslateblue:\"7B68EE\",mediumspringgreen:\"00FA9A\",mediumturquoise:\"48D1CC\",mediumvioletred:\"C71585\",midnightblue:\"191970\",mintcream:\"F5FFFA\",mistyrose:\"FFE4E1\",moccasin:\"FFE4B5\",navajowhite:\"FFDEAD\",navy:\"000080\",oldlace:\"FDF5E6\",olive:\"808000\",olivedrab:\"6B8E23\",orange:\"FFA500\",orangered:\"FF4500\",orchid:\"DA70D6\",palegoldenrod:\"EEE8AA\",palegreen:\"98FB98\",paleturquoise:\"AFEEEE\",palevioletred:\"D87093\",papayawhip:\"FFEFD5\",peachpuff:\"FFDAB9\",peru:\"CD853F\",pink:\"FFC0CB\",plum:\"DDA0DD\",powderblue:\"B0E0E6\",purple:\"800080\",rebeccapurple:\"663399\",red:\"FF0000\",rosybrown:\"BC8F8F\",royalblue:\"4169E1\",saddlebrown:\"8B4513\",salmon:\"FA8072\",sandybrown:\"F4A460\",seagreen:\"2E8B57\",seashell:\"FFF5EE\",sienna:\"A0522D\",silver:\"C0C0C0\",skyblue:\"87CEEB\",slateblue:\"6A5ACD\",slategray:\"708090\",slategrey:\"708090\",snow:\"FFFAFA\",springgreen:\"00FF7F\",steelblue:\"4682B4\",tan:\"D2B48C\",teal:\"008080\",thistle:\"D8BFD8\",tomato:\"FF6347\",turquoise:\"40E0D0\",violet:\"EE82EE\",wheat:\"F5DEB3\",white:\"FFFFFF\",whitesmoke:\"F5F5F5\",yellow:\"FFFF00\",yellowgreen:\"9ACD32\"},i=.618033988749895,u={hue:null,saturation:null,value:null,base_color:\"\",greyscale:!1,grayscale:!1,golden:!0,full_random:!1,colors_returned:1,format:\"hex\",seed:null},c={scheme_type:\"analogous\",format:\"hex\"},h={golden:!1,format:\"hex\"};return F.NAME_to_HEX=function(e){return e=e.toLowerCase(),e in s?s[e]:(console.error(\"Color name not recognized.\"),void 0)},F.NAME_to_RGB=function(e){return F.HEX_to_RGB(F.NAME_to_HEX(e))},F.NAME_to_HSV=function(e){return F.HEX_to_HSV(F.NAME_to_HEX(e))},F.HEX_to_RGB=function(e){var r=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;e=e.replace(r,function(e,r,a,o){return r+r+a+a+o+o});var a=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(e);return a?{r:parseInt(a[1],16),g:parseInt(a[2],16),b:parseInt(a[3],16)}:null},F.RGB_to_HEX=function(e){return\"#\"+((1<<24)+(e.r<<16)+(e.g<<8)+e.b).toString(16).slice(1)},F.HSV_to_RGB=function(e){var r,a,o,n,t,l,F,s,i=e.h,u=e.s,c=e.v;if(0===u)return{r:c,g:c,b:c};switch(i/=60,n=Math.floor(i),t=i-n,l=c*(1-u),F=c*(1-u*t),s=c*(1-u*(1-t)),n){case 0:r=c,a=s,o=l;break;case 1:r=F,a=c,o=l;break;case 2:r=l,a=c,o=s;break;case 3:r=l,a=F,o=c;break;case 4:r=s,a=l,o=c;break;case 5:r=c,a=l,o=F}return{r:Math.floor(255*r),g:Math.floor(255*a),b:Math.floor(255*o)}},F.RGB_to_HSV=function(e){var r=e.r/255,a=e.g/255,o=e.b/255,n=0,t=0,l=0,F=Math.min(r,Math.min(a,o)),s=Math.max(r,Math.max(a,o));if(F===s)return l=F,{h:0,s:0,v:l};var i=r===F?a-o:o===F?r-a:o-r,u=r===F?3:o===F?1:5;return n=60*(u-i/(s-F)),t=(s-F)/s,l=s,{h:n,s:t,v:l}},F.HSV_to_HEX=function(e){return F.RGB_to_HEX(F.HSV_to_RGB(e))},F.HEX_to_HSV=function(e){return F.RGB_to_HSV(F.HEX_to_RGB(e))},F.make_scheme=function(e,r){function n(e){return{h:e.h,s:e.s,v:e.v}}var l,F,s,i,u,h=t(c);if(null!==r)for(var d in r)r.hasOwnProperty(d)&&(h[d]=r[d]);var g=[e];switch(h.scheme_type.toLowerCase()){case\"monochromatic\":case\"mono\":for(u=1;2>=u;u++)l=n(e),s=l.s+.1*u,s=a(s,0,1),i=l.v+.1*u,i=a(i,0,1),l.s=s,l.v=i,g.push(l);for(u=1;2>=u;u++)l=n(e),s=l.s-.1*u,s=a(s,0,1),i=l.v-.1*u,i=a(i,0,1),l.s=s,l.v=i,g.push(l);break;case\"complementary\":case\"complement\":case\"comp\":l=n(e),l.h=(l.h+180)%360,g.push(l);break;case\"split-complementary\":case\"split-complement\":case\"split\":l=n(e),l.h=(l.h+165)%360,g.push(l),l=n(e),l.h=Math.abs((l.h-165)%360),g.push(l);break;case\"double-complementary\":case\"double-complement\":case\"double\":l=n(e),l.h=(l.h+180)%360,g.push(l),l.h=(l.h+30)%360,F=n(l),g.push(l),l.h=(l.h+180)%360,g.push(F);break;case\"analogous\":case\"ana\":for(u=1;5>=u;u++)l=n(e),l.h=(l.h+20*u)%360,g.push(l);break;case\"triadic\":case\"triad\":case\"tri\":for(u=1;3>u;u++)l=n(e),l.h=(l.h+120*u)%360,g.push(l);break;default:console.error(\"Color scheme not recognized.\")}return o(h.format.toLowerCase(),g),g},F.make_color=function(n){var s=[],c=t(u),h=null;if(null!==n)for(var d in n)n.hasOwnProperty(d)&&(c[d]=n[d]);var g=null;\"string\"==typeof c.seed&&(g=new l(c.seed)),c.base_color.length>0&&(h=c.base_color.match(/^#?([0-9a-f]{3})([0-9a-f]{3})?$/i)?F.HEX_to_HSV(c.base_color):F.NAME_to_HSV(c.base_color));for(var m=0;m<c.colors_returned;m++){var f,E,b,p=e(0,360,g);null!==h?(f=a(e(h.h-5,h.h+5,g),0,360),E=0===h.s?0:r(.4,.85,g),b=r(.4,.85,g),s.push({h:f,s:E,v:b})):(f=c.greyscale===!0||c.grayscale===!0?0:c.golden===!0?(p+p/i)%360:null===c.hue||c.full_random===!0?p:a(c.hue,0,360),E=c.greyscale===!0||c.grayscale===!0?0:c.full_random===!0?r(0,1,g):null===c.saturation?.4:a(c.saturation,0,1),b=c.full_random===!0?r(0,1,g):c.greyscale===!0||c.grayscale===!0?r(.15,.75,g):null===c.value?.75:a(c.value,0,1),s.push({h:f,s:E,v:b}))}return o(c.format.toLowerCase(),s),s},F.make_contrast=function(e,r){var l=t(h);if(null!==r)for(var s in r)r.hasOwnProperty(s)&&(l[s]=r[s]);var u,c,d=n(e);if(l.golden===!0)c=e.h*(1+i)%360;else{var g=F.make_scheme(e,{scheme_type:\"complementary\",format:\"hsv\"})[1];c=a(g.h-30,0,360)}var m;return\"dark\"===d?m=a(e.v-.25,0,1):\"light\"===d&&(m=a(e.v+.25,0,1)),u=[{h:c,s:e.s,v:m}],o(l.format.toLowerCase(),u),u[0]},F}return e()});\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/pleasejs/dist/Please.js\n ** module id = 22\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/pleasejs/dist/Please.js?");

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-define.js\n ** module id = 23\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///(webpack)/buildin/amd-define.js?");

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-options.js\n ** module id = 24\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///(webpack)/buildin/amd-options.js?");

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 25\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\n\nvar invariant = __webpack_require__(61);\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function(InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        InjectedMount && InjectedMount.getNode,\n        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +\n        'is missing getNode.'\n      ) : invariant(InjectedMount && InjectedMount.getNode));\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp ||\n         topLevelType === topLevelTypes.topTouchEnd ||\n         topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove ||\n         topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown ||\n         topLevelType === topLevelTypes.topTouchStart;\n}\n\n\nvar validateEventDispatches;\nif (\"production\" !== process.env.NODE_ENV) {\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ?\n      dispatchListeners.length :\n      dispatchListeners ? 1 : 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      idsIsArr === listenersIsArr && IDsLen === listenersLen,\n      'EventPluginUtils: Invalid `event`.'\n    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));\n  };\n}\n\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, cb) {\n  forEachEventDispatch(event, cb);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.'\n  ) : invariant(!Array.isArray(dispatchListener)));\n  var res = dispatchListener ?\n    dispatchListener(event, dispatchID) :\n    null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\n\nmodule.exports = EventPluginUtils;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/EventPluginUtils.js\n ** module id = 26\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/EventPluginUtils.js?");

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = __webpack_require__(62);\nvar ReactFragment = __webpack_require__(50);\n\nvar traverseAllChildren = __webpack_require__(63);\nvar warning = __webpack_require__(64);\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar threeArgumentPooler = PooledClass.threeArgumentPooler;\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.forEachFunction = forEachFunction;\n  this.forEachContext = forEachContext;\n}\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(traverseContext, child, name, i) {\n  var forEachBookKeeping = traverseContext;\n  forEachBookKeeping.forEachFunction.call(\n    forEachBookKeeping.forEachContext, child, i);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext =\n    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, mapFunction, mapContext) {\n  this.mapResult = mapResult;\n  this.mapFunction = mapFunction;\n  this.mapContext = mapContext;\n}\nPooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);\n\nfunction mapSingleChildIntoContext(traverseContext, child, name, i) {\n  var mapBookKeeping = traverseContext;\n  var mapResult = mapBookKeeping.mapResult;\n\n  var keyUnique = !mapResult.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'ReactChildren.map(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n\n  if (keyUnique) {\n    var mappedChild =\n      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);\n    mapResult[name] = mappedChild;\n  }\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * TODO: This may likely break any calls to `ReactChildren.map` that were\n * previously relying on the fact that we guarded against null children.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var mapResult = {};\n  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n  return ReactFragment.create(mapResult);\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name, i) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  count: countChildren\n};\n\nmodule.exports = ReactChildren;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactChildren.js\n ** module id = 27\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactChildren.js?");

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponent\n */\n\n'use strict';\n\nvar ReactUpdateQueue = __webpack_require__(65);\n\nvar invariant = __webpack_require__(61);\nvar warning = __webpack_require__(64);\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context) {\n  this.props = props;\n  this.context = context;\n}\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function(partialState, callback) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof partialState === 'object' ||\n    typeof partialState === 'function' ||\n    partialState == null,\n    'setState(...): takes an object of state variables to update or a ' +\n    'function which returns an object of state variables.'\n  ) : invariant(typeof partialState === 'object' ||\n  typeof partialState === 'function' ||\n  partialState == null));\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      partialState != null,\n      'setState(...): You passed an undefined or null state object; ' +\n      'instead, use forceUpdate().'\n    ) : null);\n  }\n  ReactUpdateQueue.enqueueSetState(this, partialState);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function(callback) {\n  ReactUpdateQueue.enqueueForceUpdate(this);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (\"production\" !== process.env.NODE_ENV) {\n  var deprecatedAPIs = {\n    getDOMNode: 'getDOMNode',\n    isMounted: 'isMounted',\n    replaceProps: 'replaceProps',\n    replaceState: 'replaceState',\n    setProps: 'setProps'\n  };\n  var defineDeprecationWarning = function(methodName, displayName) {\n    try {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function() {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            '%s(...) is deprecated in plain JavaScript React classes.',\n            displayName\n          ) : null);\n          return undefined;\n        }\n      });\n    } catch (x) {\n      // IE will fail on defineProperty (es5-shim/sham too)\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactComponent.js\n ** module id = 28\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactComponent.js?");

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar ReactComponent = __webpack_require__(28);\nvar ReactCurrentOwner = __webpack_require__(31);\nvar ReactElement = __webpack_require__(32);\nvar ReactErrorUtils = __webpack_require__(66);\nvar ReactInstanceMap = __webpack_require__(67);\nvar ReactLifeCycle = __webpack_require__(68);\nvar ReactPropTypeLocations = __webpack_require__(69);\nvar ReactPropTypeLocationNames = __webpack_require__(70);\nvar ReactUpdateQueue = __webpack_require__(65);\n\nvar assign = __webpack_require__(43);\nvar invariant = __webpack_require__(61);\nvar keyMirror = __webpack_require__(71);\nvar keyOf = __webpack_require__(72);\nvar warning = __webpack_require__(64);\n\nvar MIXINS_KEY = keyOf({mixins: null});\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or native components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function(Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function(Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function(Constructor, childContextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        childContextTypes,\n        ReactPropTypeLocations.childContext\n      );\n    }\n    Constructor.childContextTypes = assign(\n      {},\n      Constructor.childContextTypes,\n      childContextTypes\n    );\n  },\n  contextTypes: function(Constructor, contextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        contextTypes,\n        ReactPropTypeLocations.context\n      );\n    }\n    Constructor.contextTypes = assign(\n      {},\n      Constructor.contextTypes,\n      contextTypes\n    );\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function(Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(\n        Constructor.getDefaultProps,\n        getDefaultProps\n      );\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function(Constructor, propTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        propTypes,\n        ReactPropTypeLocations.prop\n      );\n    }\n    Constructor.propTypes = assign(\n      {},\n      Constructor.propTypes,\n      propTypes\n    );\n  },\n  statics: function(Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  }\n};\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but not in __DEV__\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof typeDef[propName] === 'function',\n        '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n        'React.PropTypes.',\n        Constructor.displayName || 'ReactClass',\n        ReactPropTypeLocationNames[location],\n        propName\n      ) : null);\n    }\n  }\n}\n\nfunction validateMethodOverride(proto, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?\n    ReactClassInterface[name] :\n    null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.OVERRIDE_BASE,\n      'ReactClassInterface: You are attempting to override ' +\n      '`%s` from your class specification. Ensure that your method names ' +\n      'do not overlap with React methods.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (proto.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.DEFINE_MANY ||\n      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,\n      'ReactClassInterface: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be due ' +\n      'to a mixin.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||\n    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classses.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    return;\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof spec !== 'function',\n    'ReactClass: You\\'re attempting to ' +\n    'use a component class as a mixin. Instead, just use a regular object.'\n  ) : invariant(typeof spec !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !ReactElement.isValidElement(spec),\n    'ReactClass: You\\'re attempting to ' +\n    'use a component as a mixin. Instead, just use a regular object.'\n  ) : invariant(!ReactElement.isValidElement(spec)));\n\n  var proto = Constructor.prototype;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above\n      continue;\n    }\n\n    var property = spec[name];\n    validateMethodOverride(proto, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod =\n        ReactClassInterface.hasOwnProperty(name);\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      var markedDontBind = property && property.__reactDontBind;\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind =\n        isFunction &&\n        !isReactClassMethod &&\n        !isAlreadyDefined &&\n        !markedDontBind;\n\n      if (shouldAutoBind) {\n        if (!proto.__reactAutoBindMap) {\n          proto.__reactAutoBindMap = {};\n        }\n        proto.__reactAutoBindMap[name] = property;\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            isReactClassMethod && (\n              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n            ),\n            'ReactClass: Unexpected spec policy %s for key %s ' +\n            'when mixing in component specs.',\n            specPolicy,\n            name\n          ) : invariant(isReactClassMethod && (\n            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n          )));\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (\"production\" !== process.env.NODE_ENV) {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isReserved,\n      'ReactClass: You are attempting to define a reserved ' +\n      'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n      'as an instance property instead; it will still be accessible on the ' +\n      'constructor.',\n      name\n    ) : invariant(!isReserved));\n\n    var isInherited = name in Constructor;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isInherited,\n      'ReactClass: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be ' +\n      'due to a mixin.',\n      name\n    ) : invariant(!isInherited));\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    one && two && typeof one === 'object' && typeof two === 'object',\n    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        one[key] === undefined,\n        'mergeIntoWithNoDuplicateKeys(): ' +\n        'Tried to merge two objects with the same key: `%s`. This conflict ' +\n        'may be due to a mixin; in particular, this may be caused by two ' +\n        'getInitialState() or getDefaultProps() methods returning objects ' +\n        'with clashing keys.',\n        key\n      ) : invariant(one[key] === undefined));\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (\"production\" !== process.env.NODE_ENV) {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    /* eslint-disable block-scoped-var, no-undef */\n    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): React component methods may only be bound to the ' +\n          'component instance. See %s',\n          componentName\n        ) : null);\n      } else if (!args.length) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): You are binding a component method to the component. ' +\n          'React does this for you automatically in a high-performance ' +\n          'way, so you can safely remove this call. See %s',\n          componentName\n        ) : null);\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n      /* eslint-enable */\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      var method = component.__reactAutoBindMap[autoBindKey];\n      component[autoBindKey] = bindAutoBindMethod(\n        component,\n        ReactErrorUtils.guard(\n          method,\n          component.constructor.displayName + '.' + autoBindKey\n        )\n      );\n    }\n  }\n}\n\nvar typeDeprecationDescriptor = {\n  enumerable: false,\n  get: function() {\n    var displayName = this.displayName || this.name || 'Component';\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      '%s.type is deprecated. Use %s directly to access the class.',\n      displayName,\n      displayName\n    ) : null);\n    Object.defineProperty(this, 'type', {\n      value: this\n    });\n    return this;\n  }\n};\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function(newState, callback) {\n    ReactUpdateQueue.enqueueReplaceState(this, newState);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function() {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          owner._warnedAboutRefsInRender,\n          '%s is accessing isMounted inside its render() function. ' +\n          'render() should be a pure function of props and state. It should ' +\n          'never access something that requires stale data from the previous ' +\n          'render, such as refs. Move this logic to componentDidMount and ' +\n          'componentDidUpdate instead.',\n          owner.getName() || 'A component'\n        ) : null);\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(this);\n    return (\n      internalInstance &&\n      internalInstance !== ReactLifeCycle.currentlyMountingInstance\n    );\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  setProps: function(partialProps, callback) {\n    ReactUpdateQueue.enqueueSetProps(this, partialProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Replace all the props.\n   *\n   * @param {object} newProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  replaceProps: function(newProps, callback) {\n    ReactUpdateQueue.enqueueReplaceProps(this, newProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  }\n};\n\nvar ReactClassComponent = function() {};\nassign(\n  ReactClassComponent.prototype,\n  ReactComponent.prototype,\n  ReactClassMixin\n);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function(spec) {\n    var Constructor = function(props, context) {\n      // This constructor is overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n          'JSX instead. See: http://fb.me/react-legacyfactory'\n        ) : null);\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindMap) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (\"production\" !== process.env.NODE_ENV) {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (typeof initialState === 'undefined' &&\n            this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n\n    injectedMixins.forEach(\n      mixSpecIntoComponent.bind(null, Constructor)\n    );\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    ) : invariant(Constructor.prototype.render));\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        spec.displayName || 'A component'\n      ) : null);\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    // Legacy hook\n    Constructor.type = Constructor;\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function(mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactClass.js\n ** module id = 29\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactClass.js?");

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactContext\n */\n\n'use strict';\n\nvar assign = __webpack_require__(43);\nvar emptyObject = __webpack_require__(73);\nvar warning = __webpack_require__(64);\n\nvar didWarn = false;\n\n/**\n * Keeps track of the current context.\n *\n * The context is automatically passed down the component ownership hierarchy\n * and is accessible via `this.context` on ReactCompositeComponents.\n */\nvar ReactContext = {\n\n  /**\n   * @internal\n   * @type {object}\n   */\n  current: emptyObject,\n\n  /**\n   * Temporarily extends the current context while executing scopedCallback.\n   *\n   * A typical use case might look like\n   *\n   *  render: function() {\n   *    var children = ReactContext.withContext({foo: 'foo'}, () => (\n   *\n   *    ));\n   *    return <div>{children}</div>;\n   *  }\n   *\n   * @param {object} newContext New context to merge into the existing context\n   * @param {function} scopedCallback Callback to run with the new context\n   * @return {ReactComponent|array<ReactComponent>}\n   */\n  withContext: function(newContext, scopedCallback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        didWarn,\n        'withContext is deprecated and will be removed in a future version. ' +\n        'Use a wrapper component with getChildContext instead.'\n      ) : null);\n\n      didWarn = true;\n    }\n\n    var result;\n    var previousContext = ReactContext.current;\n    ReactContext.current = assign({}, previousContext, newContext);\n    try {\n      result = scopedCallback();\n    } finally {\n      ReactContext.current = previousContext;\n    }\n    return result;\n  }\n\n};\n\nmodule.exports = ReactContext;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactContext.js\n ** module id = 30\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactContext.js?");

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n *\n * The depth indicate how many composite components are above this render level.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactCurrentOwner.js\n ** module id = 31\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactCurrentOwner.js?");

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactContext = __webpack_require__(30);\nvar ReactCurrentOwner = __webpack_require__(31);\n\nvar assign = __webpack_require__(43);\nvar warning = __webpack_require__(64);\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true\n};\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} object\n * @param {string} key\n */\nfunction defineWarningProperty(object, key) {\n  Object.defineProperty(object, key, {\n\n    configurable: false,\n    enumerable: true,\n\n    get: function() {\n      if (!this._store) {\n        return null;\n      }\n      return this._store[key];\n    },\n\n    set: function(value) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        false,\n        'Don\\'t set the %s property of the React element. Instead, ' +\n        'specify the correct value when initially creating the element.',\n        key\n      ) : null);\n      this._store[key] = value;\n    }\n\n  });\n}\n\n/**\n * This is updated to true if the membrane is successfully created.\n */\nvar useMutationMembrane = false;\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} element\n */\nfunction defineMutationMembrane(prototype) {\n  try {\n    var pseudoFrozenProperties = {\n      props: true\n    };\n    for (var key in pseudoFrozenProperties) {\n      defineWarningProperty(prototype, key);\n    }\n    useMutationMembrane = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {string|object} ref\n * @param {*} key\n * @param {*} props\n * @internal\n */\nvar ReactElement = function(type, key, ref, owner, context, props) {\n  // Built-in properties that belong on the element\n  this.type = type;\n  this.key = key;\n  this.ref = ref;\n\n  // Record the component responsible for creating this element.\n  this._owner = owner;\n\n  // TODO: Deprecate withContext, and then the context becomes accessible\n  // through the owner.\n  this._context = context;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // The validation flag and props are currently mutative. We put them on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    this._store = {props: props, originalProps: assign({}, props)};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    try {\n      Object.defineProperty(this._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true\n      });\n    } catch (x) {\n    }\n    this._store.validated = false;\n\n    // We're not allowed to set props directly on the object so we early\n    // return and rely on the prototype membrane to forward to the backing\n    // store.\n    if (useMutationMembrane) {\n      Object.freeze(this);\n      return;\n    }\n  }\n\n  this.props = props;\n};\n\n// We intentionally don't expose the function on the constructor property.\n// ReactElement should be indistinguishable from a plain object.\nReactElement.prototype = {\n  _isReactElement: true\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  defineMutationMembrane(ReactElement.prototype);\n}\n\nReactElement.createElement = function(type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return new ReactElement(\n    type,\n    key,\n    ref,\n    ReactCurrentOwner.current,\n    ReactContext.current,\n    props\n  );\n};\n\nReactElement.createFactory = function(type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceProps = function(oldElement, newProps) {\n  var newElement = new ReactElement(\n    oldElement.type,\n    oldElement.key,\n    oldElement.ref,\n    oldElement._owner,\n    oldElement._context,\n    newProps\n  );\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n  return newElement;\n};\n\nReactElement.cloneElement = function(element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return new ReactElement(\n    element.type,\n    key,\n    ref,\n    owner,\n    element._context,\n    props\n  );\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  // ReactTestUtils is often used outside of beforeEach where as React is\n  // within it. This leads to two different instances of React on the same\n  // page. To identify a element from a different React instance we use\n  // a flag instead of an instanceof check.\n  var isElement = !!(object && object._isReactElement);\n  // if (isElement && !(object instanceof ReactElement)) {\n  // This is an indicator that you're using multiple versions of React at the\n  // same time. This will screw with ownership and stuff. Fix it, please.\n  // TODO: We could possibly warn here.\n  // }\n  return isElement;\n};\n\nmodule.exports = ReactElement;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactElement.js\n ** module id = 32\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactElement.js?");

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = __webpack_require__(32);\nvar ReactFragment = __webpack_require__(50);\nvar ReactPropTypeLocations = __webpack_require__(69);\nvar ReactPropTypeLocationNames = __webpack_require__(70);\nvar ReactCurrentOwner = __webpack_require__(31);\nvar ReactNativeComponent = __webpack_require__(74);\n\nvar getIteratorFn = __webpack_require__(75);\nvar invariant = __webpack_require__(61);\nvar warning = __webpack_require__(64);\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the instance's name for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getName(instance) {\n  var publicInstance = instance && instance.getPublicInstance();\n  if (!publicInstance) {\n    return undefined;\n  }\n  var constructor = publicInstance.constructor;\n  if (!constructor) {\n    return undefined;\n  }\n  return constructor.displayName || constructor.name || undefined;\n}\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return (\n    current && getName(current) || undefined\n  );\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  warnAndMonitorForKeyUse(\n    'Each child in an array or iterator should have a unique \"key\" prop.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validatePropertyKey(name, element, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse(\n    'Child objects should have non-numeric keys so ordering is preserved.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} message The base warning that gets output.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction warnAndMonitorForKeyUse(message, element, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = typeof parentType === 'string' ?\n    parentType : parentType.displayName || parentType.name;\n\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[message] || (\n    (ownerHasKeyUseWarning[message] = {})\n  );\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n\n  var parentOrOwnerAddendum =\n    ownerName ? (\" Check the render method of \" + ownerName + \".\") :\n    parentName ? (\" Check the React.render call using <\" + parentName + \">.\") :\n    '';\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerAddendum = '';\n  if (element &&\n      element._owner &&\n      element._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    var childOwnerName = getName(element._owner);\n\n    childOwnerAddendum = (\" It was passed a child from \" + childOwnerName + \".\");\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    message + '%s%s See http://fb.me/react-warning-keys for more information.',\n    parentOrOwnerAddendum,\n    childOwnerAddendum\n  ) : null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    node._store.validated = true;\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    } else if (typeof node === 'object') {\n      var fragment = ReactFragment.extractIfFragment(node);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          validatePropertyKey(key, fragment[key], parentType);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          typeof propTypes[propName] === 'function',\n          '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n          'React.PropTypes.',\n          componentName || 'React class',\n          ReactPropTypeLocationNames[location],\n          propName\n        ) : invariant(typeof propTypes[propName] === 'function'));\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(this);\n        (\"production\" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);\n      }\n    }\n  }\n}\n\nvar warnedPropsMutations = {};\n\n/**\n * Warn about mutating props when setting `propName` on `element`.\n *\n * @param {string} propName The string key within props that was set\n * @param {ReactElement} element\n */\nfunction warnForPropsMutation(propName, element) {\n  var type = element.type;\n  var elementName = typeof type === 'string' ? type : type.displayName;\n  var ownerName = element._owner ?\n    element._owner.getPublicInstance().constructor.displayName : null;\n\n  var warningKey = propName + '|' + elementName + '|' + ownerName;\n  if (warnedPropsMutations.hasOwnProperty(warningKey)) {\n    return;\n  }\n  warnedPropsMutations[warningKey] = true;\n\n  var elementInfo = '';\n  if (elementName) {\n    elementInfo = ' <' + elementName + ' />';\n  }\n  var ownerInfo = '';\n  if (ownerName) {\n    ownerInfo = ' The element was created by ' + ownerName + '.';\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    'Don\\'t set .props.%s of the React component%s. ' +\n    'Instead, specify the correct value when ' +\n    'initially creating the element.%s',\n    propName,\n    elementInfo,\n    ownerInfo\n  ) : null);\n}\n\n// Inline Object.is polyfill\nfunction is(a, b) {\n  if (a !== a) {\n    // NaN\n    return b !== b;\n  }\n  if (a === 0 && b === 0) {\n    // +-0\n    return 1 / a === 1 / b;\n  }\n  return a === b;\n}\n\n/**\n * Given an element, check if its props have been mutated since element\n * creation (or the last call to this function). In particular, check if any\n * new props have been added, which we can't directly catch by defining warning\n * properties on the props object.\n *\n * @param {ReactElement} element\n */\nfunction checkAndWarnForMutatedProps(element) {\n  if (!element._store) {\n    // Element was created using `new ReactElement` directly or with\n    // `ReactElement.createElement`; skip mutation checking\n    return;\n  }\n\n  var originalProps = element._store.originalProps;\n  var props = element.props;\n\n  for (var propName in props) {\n    if (props.hasOwnProperty(propName)) {\n      if (!originalProps.hasOwnProperty(propName) ||\n          !is(originalProps[propName], props[propName])) {\n        warnForPropsMutation(propName, element);\n\n        // Copy over the new value so that the two props objects match again\n        originalProps[propName] = props[propName];\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (element.type == null) {\n    // This has already warned. Don't throw.\n    return;\n  }\n  // Extract the component class from the element. Converts string types\n  // to a composite class which may have propTypes.\n  // TODO: Validating a string's propTypes is not decoupled from the\n  // rendering target which is problematic.\n  var componentClass = ReactNativeComponent.getComponentClassForElement(\n    element\n  );\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(\n      name,\n      componentClass.propTypes,\n      element.props,\n      ReactPropTypeLocations.prop\n    );\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      componentClass.getDefaultProps.isReactClassApproved,\n      'getDefaultProps is only used on classic React.createClass ' +\n      'definitions. Use a static property named `defaultProps` instead.'\n    ) : null);\n  }\n}\n\nvar ReactElementValidator = {\n\n  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,\n\n  createElement: function(type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      type != null,\n      'React.createElement: type should not be null or undefined. It should ' +\n        'be a string (for DOM elements) or a ReactClass (for composite ' +\n        'components).'\n    ) : null);\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function(type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(\n      null,\n      type\n    );\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(\n          validatedFactory,\n          'type',\n          {\n            enumerable: false,\n            get: function() {\n              (\"production\" !== process.env.NODE_ENV ? warning(\n                false,\n                'Factory.type is deprecated. Access the class directly ' +\n                'before passing it to createFactory.'\n              ) : null);\n              Object.defineProperty(this, 'type', {\n                value: type\n              });\n              return type;\n            }\n          }\n        );\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n\n    return validatedFactory;\n  },\n\n  cloneElement: function(element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactElementValidator.js\n ** module id = 33\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactElementValidator.js?");

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOM\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactElement = __webpack_require__(32);\nvar ReactElementValidator = __webpack_require__(33);\n\nvar mapObject = __webpack_require__(76);\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @param {string} tag Tag name (e.g. `div`).\n * @private\n */\nfunction createDOMFactory(tag) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    return ReactElementValidator.createFactory(tag);\n  }\n  return ReactElement.createFactory(tag);\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOM = mapObject({\n  a: 'a',\n  abbr: 'abbr',\n  address: 'address',\n  area: 'area',\n  article: 'article',\n  aside: 'aside',\n  audio: 'audio',\n  b: 'b',\n  base: 'base',\n  bdi: 'bdi',\n  bdo: 'bdo',\n  big: 'big',\n  blockquote: 'blockquote',\n  body: 'body',\n  br: 'br',\n  button: 'button',\n  canvas: 'canvas',\n  caption: 'caption',\n  cite: 'cite',\n  code: 'code',\n  col: 'col',\n  colgroup: 'colgroup',\n  data: 'data',\n  datalist: 'datalist',\n  dd: 'dd',\n  del: 'del',\n  details: 'details',\n  dfn: 'dfn',\n  dialog: 'dialog',\n  div: 'div',\n  dl: 'dl',\n  dt: 'dt',\n  em: 'em',\n  embed: 'embed',\n  fieldset: 'fieldset',\n  figcaption: 'figcaption',\n  figure: 'figure',\n  footer: 'footer',\n  form: 'form',\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  head: 'head',\n  header: 'header',\n  hr: 'hr',\n  html: 'html',\n  i: 'i',\n  iframe: 'iframe',\n  img: 'img',\n  input: 'input',\n  ins: 'ins',\n  kbd: 'kbd',\n  keygen: 'keygen',\n  label: 'label',\n  legend: 'legend',\n  li: 'li',\n  link: 'link',\n  main: 'main',\n  map: 'map',\n  mark: 'mark',\n  menu: 'menu',\n  menuitem: 'menuitem',\n  meta: 'meta',\n  meter: 'meter',\n  nav: 'nav',\n  noscript: 'noscript',\n  object: 'object',\n  ol: 'ol',\n  optgroup: 'optgroup',\n  option: 'option',\n  output: 'output',\n  p: 'p',\n  param: 'param',\n  picture: 'picture',\n  pre: 'pre',\n  progress: 'progress',\n  q: 'q',\n  rp: 'rp',\n  rt: 'rt',\n  ruby: 'ruby',\n  s: 's',\n  samp: 'samp',\n  script: 'script',\n  section: 'section',\n  select: 'select',\n  small: 'small',\n  source: 'source',\n  span: 'span',\n  strong: 'strong',\n  style: 'style',\n  sub: 'sub',\n  summary: 'summary',\n  sup: 'sup',\n  table: 'table',\n  tbody: 'tbody',\n  td: 'td',\n  textarea: 'textarea',\n  tfoot: 'tfoot',\n  th: 'th',\n  thead: 'thead',\n  time: 'time',\n  title: 'title',\n  tr: 'tr',\n  track: 'track',\n  u: 'u',\n  ul: 'ul',\n  'var': 'var',\n  video: 'video',\n  wbr: 'wbr',\n\n  // SVG\n  circle: 'circle',\n  defs: 'defs',\n  ellipse: 'ellipse',\n  g: 'g',\n  line: 'line',\n  linearGradient: 'linearGradient',\n  mask: 'mask',\n  path: 'path',\n  pattern: 'pattern',\n  polygon: 'polygon',\n  polyline: 'polyline',\n  radialGradient: 'radialGradient',\n  rect: 'rect',\n  stop: 'stop',\n  svg: 'svg',\n  text: 'text',\n  tspan: 'tspan'\n\n}, createDOMFactory);\n\nmodule.exports = ReactDOM;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOM.js\n ** module id = 34\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOM.js?");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMPropertyOperations = __webpack_require__(77);\nvar ReactComponentBrowserEnvironment =\n  __webpack_require__(78);\nvar ReactDOMComponent = __webpack_require__(79);\n\nvar assign = __webpack_require__(43);\nvar escapeTextContentForBrowser = __webpack_require__(80);\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings in elements so that they can undergo\n * the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function(props) {\n  // This constructor and its argument is currently used by mocks.\n};\n\nassign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * @param {ReactText} text\n   * @internal\n   */\n  construct: function(text) {\n    // TODO: This is really a ReactText (ReactNode), not a ReactElement\n    this._currentElement = text;\n    this._stringText = '' + text;\n\n    // Properties\n    this._rootNodeID = null;\n    this._mountIndex = 0;\n  },\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    var escapedText = escapeTextContentForBrowser(this._stringText);\n\n    if (transaction.renderToStaticMarkup) {\n      // Normally we'd wrap this in a `span` for the reasons stated above, but\n      // since this is a situation where React won't take over (static pages),\n      // we can simply return the text as it is.\n      return escapedText;\n    }\n\n    return (\n      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +\n        escapedText +\n      '</span>'\n    );\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function(nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        ReactDOMComponent.BackendIDOperations.updateTextContentByID(\n          this._rootNodeID,\n          nextStringText\n        );\n      }\n    }\n  },\n\n  unmountComponent: function() {\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMTextComponent.js\n ** module id = 35\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMTextComponent.js?");

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = __webpack_require__(81);\nvar ChangeEventPlugin = __webpack_require__(82);\nvar ClientReactRootIndex = __webpack_require__(83);\nvar DefaultEventPluginOrder = __webpack_require__(84);\nvar EnterLeaveEventPlugin = __webpack_require__(85);\nvar ExecutionEnvironment = __webpack_require__(46);\nvar HTMLDOMPropertyConfig = __webpack_require__(86);\nvar MobileSafariClickEventPlugin = __webpack_require__(87);\nvar ReactBrowserComponentMixin = __webpack_require__(88);\nvar ReactClass = __webpack_require__(29);\nvar ReactComponentBrowserEnvironment =\n  __webpack_require__(78);\nvar ReactDefaultBatchingStrategy = __webpack_require__(89);\nvar ReactDOMComponent = __webpack_require__(79);\nvar ReactDOMButton = __webpack_require__(90);\nvar ReactDOMForm = __webpack_require__(91);\nvar ReactDOMImg = __webpack_require__(92);\nvar ReactDOMIDOperations = __webpack_require__(93);\nvar ReactDOMIframe = __webpack_require__(94);\nvar ReactDOMInput = __webpack_require__(95);\nvar ReactDOMOption = __webpack_require__(96);\nvar ReactDOMSelect = __webpack_require__(97);\nvar ReactDOMTextarea = __webpack_require__(98);\nvar ReactDOMTextComponent = __webpack_require__(35);\nvar ReactElement = __webpack_require__(32);\nvar ReactEventListener = __webpack_require__(99);\nvar ReactInjection = __webpack_require__(100);\nvar ReactInstanceHandles = __webpack_require__(37);\nvar ReactMount = __webpack_require__(38);\nvar ReactReconcileTransaction = __webpack_require__(101);\nvar SelectEventPlugin = __webpack_require__(102);\nvar ServerReactRootIndex = __webpack_require__(103);\nvar SimpleEventPlugin = __webpack_require__(104);\nvar SVGDOMPropertyConfig = __webpack_require__(105);\n\nvar createFullPageComponent = __webpack_require__(106);\n\nfunction autoGenerateWrapperClass(type) {\n  return ReactClass.createClass({\n    tagName: type.toUpperCase(),\n    render: function() {\n      return new ReactElement(\n        type,\n        null,\n        null,\n        null,\n        null,\n        this.props\n      );\n    }\n  });\n}\n\nfunction inject() {\n  ReactInjection.EventEmitter.injectReactEventListener(\n    ReactEventListener\n  );\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.NativeComponent.injectGenericComponentClass(\n    ReactDOMComponent\n  );\n\n  ReactInjection.NativeComponent.injectTextComponentClass(\n    ReactDOMTextComponent\n  );\n\n  ReactInjection.NativeComponent.injectAutoWrapper(\n    autoGenerateWrapperClass\n  );\n\n  // This needs to happen before createFullPageComponent() otherwise the mixin\n  // won't be included.\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n\n  ReactInjection.NativeComponent.injectComponentClasses({\n    'button': ReactDOMButton,\n    'form': ReactDOMForm,\n    'iframe': ReactDOMIframe,\n    'img': ReactDOMImg,\n    'input': ReactDOMInput,\n    'option': ReactDOMOption,\n    'select': ReactDOMSelect,\n    'textarea': ReactDOMTextarea,\n\n    'html': createFullPageComponent('html'),\n    'head': createFullPageComponent('head'),\n    'body': createFullPageComponent('body')\n  });\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n\n  ReactInjection.Updates.injectReconcileTransaction(\n    ReactReconcileTransaction\n  );\n  ReactInjection.Updates.injectBatchingStrategy(\n    ReactDefaultBatchingStrategy\n  );\n\n  ReactInjection.RootIndex.injectCreateReactRootIndex(\n    ExecutionEnvironment.canUseDOM ?\n      ClientReactRootIndex.createReactRootIndex :\n      ServerReactRootIndex.createReactRootIndex\n  );\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';\n    if ((/[?&]react_perf\\b/).test(url)) {\n      var ReactDefaultPerf = __webpack_require__(56);\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDefaultInjection.js\n ** module id = 36\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDefaultInjection.js?");

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceHandles\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactRootIndex = __webpack_require__(107);\n\nvar invariant = __webpack_require__(61);\n\nvar SEPARATOR = '.';\nvar SEPARATOR_LENGTH = SEPARATOR.length;\n\n/**\n * Maximum depth of traversals before we consider the possibility of a bad ID.\n */\nvar MAX_TREE_DEPTH = 100;\n\n/**\n * Creates a DOM ID prefix to use when mounting React components.\n *\n * @param {number} index A unique integer\n * @return {string} React root ID.\n * @internal\n */\nfunction getReactRootIDString(index) {\n  return SEPARATOR + index.toString(36);\n}\n\n/**\n * Checks if a character in the supplied ID is a separator or the end.\n *\n * @param {string} id A React DOM ID.\n * @param {number} index Index of the character to check.\n * @return {boolean} True if the character is a separator or end of the ID.\n * @private\n */\nfunction isBoundary(id, index) {\n  return id.charAt(index) === SEPARATOR || index === id.length;\n}\n\n/**\n * Checks if the supplied string is a valid React DOM ID.\n *\n * @param {string} id A React DOM ID, maybe.\n * @return {boolean} True if the string is a valid React DOM ID.\n * @private\n */\nfunction isValidID(id) {\n  return id === '' || (\n    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR\n  );\n}\n\n/**\n * Checks if the first ID is an ancestor of or equal to the second ID.\n *\n * @param {string} ancestorID\n * @param {string} descendantID\n * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.\n * @internal\n */\nfunction isAncestorIDOf(ancestorID, descendantID) {\n  return (\n    descendantID.indexOf(ancestorID) === 0 &&\n    isBoundary(descendantID, ancestorID.length)\n  );\n}\n\n/**\n * Gets the parent ID of the supplied React DOM ID, `id`.\n *\n * @param {string} id ID of a component.\n * @return {string} ID of the parent, or an empty string.\n * @private\n */\nfunction getParentID(id) {\n  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';\n}\n\n/**\n * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the\n * supplied `destinationID`. If they are equal, the ID is returned.\n *\n * @param {string} ancestorID ID of an ancestor node of `destinationID`.\n * @param {string} destinationID ID of the destination node.\n * @return {string} Next ID on the path from `ancestorID` to `destinationID`.\n * @private\n */\nfunction getNextDescendantID(ancestorID, destinationID) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(ancestorID) && isValidID(destinationID),\n    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',\n    ancestorID,\n    destinationID\n  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isAncestorIDOf(ancestorID, destinationID),\n    'getNextDescendantID(...): React has made an invalid assumption about ' +\n    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',\n    ancestorID,\n    destinationID\n  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));\n  if (ancestorID === destinationID) {\n    return ancestorID;\n  }\n  // Skip over the ancestor and the immediate separator. Traverse until we hit\n  // another separator or we reach the end of `destinationID`.\n  var start = ancestorID.length + SEPARATOR_LENGTH;\n  var i;\n  for (i = start; i < destinationID.length; i++) {\n    if (isBoundary(destinationID, i)) {\n      break;\n    }\n  }\n  return destinationID.substr(0, i);\n}\n\n/**\n * Gets the nearest common ancestor ID of two IDs.\n *\n * Using this ID scheme, the nearest common ancestor ID is the longest common\n * prefix of the two IDs that immediately preceded a \"marker\" in both strings.\n *\n * @param {string} oneID\n * @param {string} twoID\n * @return {string} Nearest common ancestor ID, or the empty string if none.\n * @private\n */\nfunction getFirstCommonAncestorID(oneID, twoID) {\n  var minLength = Math.min(oneID.length, twoID.length);\n  if (minLength === 0) {\n    return '';\n  }\n  var lastCommonMarkerIndex = 0;\n  // Use `<=` to traverse until the \"EOL\" of the shorter string.\n  for (var i = 0; i <= minLength; i++) {\n    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {\n      lastCommonMarkerIndex = i;\n    } else if (oneID.charAt(i) !== twoID.charAt(i)) {\n      break;\n    }\n  }\n  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(longestCommonID),\n    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',\n    oneID,\n    twoID,\n    longestCommonID\n  ) : invariant(isValidID(longestCommonID)));\n  return longestCommonID;\n}\n\n/**\n * Traverses the parent path between two IDs (either up or down). The IDs must\n * not be the same, and there must exist a parent path between them. If the\n * callback returns `false`, traversal is stopped.\n *\n * @param {?string} start ID at which to start traversal.\n * @param {?string} stop ID at which to end traversal.\n * @param {function} cb Callback to invoke each ID with.\n * @param {?boolean} skipFirst Whether or not to skip the first node.\n * @param {?boolean} skipLast Whether or not to skip the last node.\n * @private\n */\nfunction traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {\n  start = start || '';\n  stop = stop || '';\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    start !== stop,\n    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',\n    start\n  ) : invariant(start !== stop));\n  var traverseUp = isAncestorIDOf(stop, start);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    traverseUp || isAncestorIDOf(start, stop),\n    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +\n    'not have a parent path.',\n    start,\n    stop\n  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));\n  // Traverse from `start` to `stop` one depth at a time.\n  var depth = 0;\n  var traverse = traverseUp ? getParentID : getNextDescendantID;\n  for (var id = start; /* until break */; id = traverse(id, stop)) {\n    var ret;\n    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {\n      ret = cb(id, traverseUp, arg);\n    }\n    if (ret === false || id === stop) {\n      // Only break //after// visiting `stop`.\n      break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      depth++ < MAX_TREE_DEPTH,\n      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +\n      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',\n      start, stop\n    ) : invariant(depth++ < MAX_TREE_DEPTH));\n  }\n}\n\n/**\n * Manages the IDs assigned to DOM representations of React components. This\n * uses a specific scheme in order to traverse the DOM efficiently (e.g. in\n * order to simulate events).\n *\n * @internal\n */\nvar ReactInstanceHandles = {\n\n  /**\n   * Constructs a React root ID\n   * @return {string} A React root ID.\n   */\n  createReactRootID: function() {\n    return getReactRootIDString(ReactRootIndex.createReactRootIndex());\n  },\n\n  /**\n   * Constructs a React ID by joining a root ID with a name.\n   *\n   * @param {string} rootID Root ID of a parent component.\n   * @param {string} name A component's name (as flattened children).\n   * @return {string} A React ID.\n   * @internal\n   */\n  createReactID: function(rootID, name) {\n    return rootID + name;\n  },\n\n  /**\n   * Gets the DOM ID of the React component that is the root of the tree that\n   * contains the React component with the supplied DOM ID.\n   *\n   * @param {string} id DOM ID of a React component.\n   * @return {?string} DOM ID of the React component that is the root.\n   * @internal\n   */\n  getReactRootIDFromNodeID: function(id) {\n    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {\n      var index = id.indexOf(SEPARATOR, 1);\n      return index > -1 ? id.substr(0, index) : id;\n    }\n    return null;\n  },\n\n  /**\n   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n   * should would receive a `mouseEnter` or `mouseLeave` event.\n   *\n   * NOTE: Does not invoke the callback on the nearest common ancestor because\n   * nothing \"entered\" or \"left\" that element.\n   *\n   * @param {string} leaveID ID being left.\n   * @param {string} enterID ID being entered.\n   * @param {function} cb Callback to invoke on each entered/left ID.\n   * @param {*} upArg Argument to invoke the callback with on left IDs.\n   * @param {*} downArg Argument to invoke the callback with on entered IDs.\n   * @internal\n   */\n  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {\n    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);\n    if (ancestorID !== leaveID) {\n      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);\n    }\n    if (ancestorID !== enterID) {\n      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);\n    }\n  },\n\n  /**\n   * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseTwoPhase: function(targetID, cb, arg) {\n    if (targetID) {\n      traverseParentPath('', targetID, cb, arg, true, false);\n      traverseParentPath(targetID, '', cb, arg, false, true);\n    }\n  },\n\n  /**\n   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For\n   * example, passing `.0.$row-0.1` would result in `cb` getting called\n   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseAncestors: function(targetID, cb, arg) {\n    traverseParentPath('', targetID, cb, arg, true, false);\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getFirstCommonAncestorID: getFirstCommonAncestorID,\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getNextDescendantID: getNextDescendantID,\n\n  isAncestorIDOf: isAncestorIDOf,\n\n  SEPARATOR: SEPARATOR\n\n};\n\nmodule.exports = ReactInstanceHandles;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactInstanceHandles.js\n ** module id = 37\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactInstanceHandles.js?");

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar DOMProperty = __webpack_require__(108);\nvar ReactBrowserEventEmitter = __webpack_require__(109);\nvar ReactCurrentOwner = __webpack_require__(31);\nvar ReactElement = __webpack_require__(32);\nvar ReactElementValidator = __webpack_require__(33);\nvar ReactEmptyComponent = __webpack_require__(110);\nvar ReactInstanceHandles = __webpack_require__(37);\nvar ReactInstanceMap = __webpack_require__(67);\nvar ReactMarkupChecksum = __webpack_require__(111);\nvar ReactPerf = __webpack_require__(39);\nvar ReactReconciler = __webpack_require__(41);\nvar ReactUpdateQueue = __webpack_require__(65);\nvar ReactUpdates = __webpack_require__(52);\n\nvar emptyObject = __webpack_require__(73);\nvar containsNode = __webpack_require__(112);\nvar getReactRootElementInContainer = __webpack_require__(113);\nvar instantiateReactComponent = __webpack_require__(114);\nvar invariant = __webpack_require__(61);\nvar setInnerHTML = __webpack_require__(115);\nvar shouldUpdateReactComponent = __webpack_require__(116);\nvar warning = __webpack_require__(64);\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar nodeCache = {};\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\n\n/** Mapping from reactRootID to React component instance. */\nvar instancesByReactRootID = {};\n\n/** Mapping from reactRootID to `container` nodes. */\nvar containersByReactRootID = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  /** __DEV__-only mapping from reactRootID to root elements. */\n  var rootElementsByReactRootID = {};\n}\n\n// Used to store breadth-first search state in findComponentRoot.\nvar findComponentRootReusableArray = [];\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement} container DOM element that may contain a React component.\n * @return {?string} A \"reactRoot\" ID, if a React component is rendered.\n */\nfunction getReactRootID(container) {\n  var rootElement = getReactRootElementInContainer(container);\n  return rootElement && ReactMount.getID(rootElement);\n}\n\n/**\n * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\n * element can return its control whose name or ID equals ATTR_NAME. All\n * DOM nodes support `getAttributeNode` but this can also get called on\n * other objects so just return '' if we're given something other than a\n * DOM node (such as window).\n *\n * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\n * @return {string} ID of the supplied `domNode`.\n */\nfunction getID(node) {\n  var id = internalGetID(node);\n  if (id) {\n    if (nodeCache.hasOwnProperty(id)) {\n      var cached = nodeCache[id];\n      if (cached !== node) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !isValid(cached, id),\n          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',\n          ATTR_NAME, id\n        ) : invariant(!isValid(cached, id)));\n\n        nodeCache[id] = node;\n      }\n    } else {\n      nodeCache[id] = node;\n    }\n  }\n\n  return id;\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Sets the React-specific ID of the given node.\n *\n * @param {DOMElement} node The DOM node whose ID will be set.\n * @param {string} id The value of the ID attribute.\n */\nfunction setID(node, id) {\n  var oldID = internalGetID(node);\n  if (oldID !== id) {\n    delete nodeCache[oldID];\n  }\n  node.setAttribute(ATTR_NAME, id);\n  nodeCache[id] = node;\n}\n\n/**\n * Finds the node with the supplied React-generated DOM ID.\n *\n * @param {string} id A React-generated DOM ID.\n * @return {DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNode(id) {\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * Finds the node with the supplied public React instance.\n *\n * @param {*} instance A public React instance.\n * @return {?DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNodeFromInstance(instance) {\n  var id = ReactInstanceMap.get(instance)._rootNodeID;\n  if (ReactEmptyComponent.isNullComponentID(id)) {\n    return null;\n  }\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * A node is \"valid\" if it is contained by a currently mounted container.\n *\n * This means that the node does not have to be contained by a document in\n * order to be considered valid.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @param {string} id The expected ID of the node.\n * @return {boolean} Whether the node is contained by a mounted container.\n */\nfunction isValid(node, id) {\n  if (node) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalGetID(node) === id,\n      'ReactMount: Unexpected modification of `%s`',\n      ATTR_NAME\n    ) : invariant(internalGetID(node) === id));\n\n    var container = ReactMount.findReactContainerForID(id);\n    if (container && containsNode(container, node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Causes the cache to forget about one React-specific ID.\n *\n * @param {string} id The ID to forget.\n */\nfunction purgeID(id) {\n  delete nodeCache[id];\n}\n\nvar deepestNodeSoFar = null;\nfunction findDeepestCachedAncestorImpl(ancestorID) {\n  var ancestor = nodeCache[ancestorID];\n  if (ancestor && isValid(ancestor, ancestorID)) {\n    deepestNodeSoFar = ancestor;\n  } else {\n    // This node isn't populated in the cache, so presumably none of its\n    // descendants are. Break out of the loop.\n    return false;\n  }\n}\n\n/**\n * Return the deepest cached node whose ID is a prefix of `targetID`.\n */\nfunction findDeepestCachedAncestor(targetID) {\n  deepestNodeSoFar = null;\n  ReactInstanceHandles.traverseAncestors(\n    targetID,\n    findDeepestCachedAncestorImpl\n  );\n\n  var foundNode = deepestNodeSoFar;\n  deepestNodeSoFar = null;\n  return foundNode;\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup) {\n  var markup = ReactReconciler.mountComponent(\n    componentInstance, rootID, transaction, emptyObject\n  );\n  componentInstance._isTopLevel = true;\n  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    shouldReuseMarkup) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n  transaction.perform(\n    mountComponentIntoNode,\n    null,\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup\n  );\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n  /** Exposed for debugging purposes **/\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function(container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function(\n      prevComponent,\n      nextElement,\n      container,\n      callback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    ReactMount.scrollMonitor(container, function() {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[getReactRootID(container)] =\n        getReactRootElementInContainer(container);\n    }\n\n    return prevComponent;\n  },\n\n  /**\n   * Register a component into the instance map and starts scroll value\n   * monitoring\n   * @param {ReactComponent} nextComponent component instance to render\n   * @param {DOMElement} container container to render into\n   * @return {string} reactRoot ID prefix\n   */\n  _registerComponent: function(nextComponent, container) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      '_registerComponent(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\n    var reactRootID = ReactMount.registerContainer(container);\n    instancesByReactRootID[reactRootID] = nextComponent;\n    return reactRootID;\n  },\n\n  /**\n   * Render a new component into the DOM.\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function(\n    nextElement,\n    container,\n    shouldReuseMarkup\n  ) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      '_renderNewRootComponent(): Render methods should be a pure function ' +\n      'of props and state; triggering nested component updates from ' +\n      'render is not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    var componentInstance = instantiateReactComponent(nextElement, null);\n    var reactRootID = ReactMount._registerComponent(\n      componentInstance,\n      container\n    );\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(\n      batchedMountComponentIntoNode,\n      componentInstance,\n      reactRootID,\n      container,\n      shouldReuseMarkup\n    );\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[reactRootID] =\n        getReactRootElementInContainer(container);\n    }\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function(nextElement, container, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactElement.isValidElement(nextElement),\n      'React.render(): Invalid component element.%s',\n      (\n        typeof nextElement === 'string' ?\n          ' Instead of passing an element string, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        typeof nextElement === 'function' ?\n          ' Instead of passing a component class, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        // Check if it quacks like an element\n        nextElement != null && nextElement.props !== undefined ?\n          ' This may be caused by unintentionally loading two independent ' +\n          'copies of React.' :\n          ''\n      )\n    ) : invariant(ReactElement.isValidElement(nextElement)));\n\n    var prevComponent = instancesByReactRootID[getReactRootID(container)];\n\n    if (prevComponent) {\n      var prevElement = prevComponent._currentElement;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        return ReactMount._updateRootComponent(\n          prevComponent,\n          nextElement,\n          container,\n          callback\n        ).getPublicInstance();\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup =\n      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (ReactMount.isRenderedByReact(rootElementSibling)) {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'render(): Target node has markup rendered by React, but there ' +\n              'are unrelated nodes as well. This is most commonly caused by ' +\n              'white-space inserted around server-rendered markup.'\n            ) : null);\n            break;\n          }\n\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;\n\n    var component = ReactMount._renderNewRootComponent(\n      nextElement,\n      container,\n      shouldReuseMarkup\n    ).getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into the supplied `container`.\n   *\n   * @param {function} constructor React component constructor.\n   * @param {?object} props Initial props of the component instance.\n   * @param {DOMElement} container DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  constructAndRenderComponent: function(constructor, props, container) {\n    var element = ReactElement.createElement(constructor, props);\n    return ReactMount.render(element, container);\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into a container node identified by supplied `id`.\n   *\n   * @param {function} componentConstructor React component constructor\n   * @param {?object} props Initial props of the component instance.\n   * @param {string} id ID of the DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in the container node.\n   */\n  constructAndRenderComponentByID: function(constructor, props, id) {\n    var domNode = document.getElementById(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      domNode,\n      'Tried to get element with id of \"%s\" but it is not present on the page.',\n      id\n    ) : invariant(domNode));\n    return ReactMount.constructAndRenderComponent(constructor, props, domNode);\n  },\n\n  /**\n   * Registers a container node into which React components will be rendered.\n   * This also creates the \"reactRoot\" ID that will be assigned to the element\n   * rendered within.\n   *\n   * @param {DOMElement} container DOM element to register as a container.\n   * @return {string} The \"reactRoot\" ID of elements rendered within.\n   */\n  registerContainer: function(container) {\n    var reactRootID = getReactRootID(container);\n    if (reactRootID) {\n      // If one exists, make sure it is a valid \"reactRoot\" ID.\n      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\n    }\n    if (!reactRootID) {\n      // No valid \"reactRoot\" ID found, create one.\n      reactRootID = ReactInstanceHandles.createReactRootID();\n    }\n    containersByReactRootID[reactRootID] = container;\n    return reactRootID;\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function(container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      'unmountComponentAtNode(): Render methods should be a pure function of ' +\n      'props and state; triggering nested component updates from render is ' +\n      'not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'unmountComponentAtNode(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    var reactRootID = getReactRootID(container);\n    var component = instancesByReactRootID[reactRootID];\n    if (!component) {\n      return false;\n    }\n    ReactMount.unmountComponentFromNode(component, container);\n    delete instancesByReactRootID[reactRootID];\n    delete containersByReactRootID[reactRootID];\n    if (\"production\" !== process.env.NODE_ENV) {\n      delete rootElementsByReactRootID[reactRootID];\n    }\n    return true;\n  },\n\n  /**\n   * Unmounts a component and removes it from the DOM.\n   *\n   * @param {ReactComponent} instance React component instance.\n   * @param {DOMElement} container DOM element to unmount from.\n   * @final\n   * @internal\n   * @see {ReactMount.unmountComponentAtNode}\n   */\n  unmountComponentFromNode: function(instance, container) {\n    ReactReconciler.unmountComponent(instance);\n\n    if (container.nodeType === DOC_NODE_TYPE) {\n      container = container.documentElement;\n    }\n\n    // http://jsperf.com/emptying-a-node\n    while (container.lastChild) {\n      container.removeChild(container.lastChild);\n    }\n  },\n\n  /**\n   * Finds the container DOM element that contains React component to which the\n   * supplied DOM `id` belongs.\n   *\n   * @param {string} id The ID of an element rendered by a React component.\n   * @return {?DOMElement} DOM element that contains the `id`.\n   */\n  findReactContainerForID: function(id) {\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\n    var container = containersByReactRootID[reactRootID];\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      var rootElement = rootElementsByReactRootID[reactRootID];\n      if (rootElement && rootElement.parentNode !== container) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          // Call internalGetID here because getID calls isValid which calls\n          // findReactContainerForID (this function).\n          internalGetID(rootElement) === reactRootID,\n          'ReactMount: Root element ID differed from reactRootID.'\n        ) : invariant(// Call internalGetID here because getID calls isValid which calls\n        // findReactContainerForID (this function).\n        internalGetID(rootElement) === reactRootID));\n\n        var containerChild = container.firstChild;\n        if (containerChild &&\n            reactRootID === internalGetID(containerChild)) {\n          // If the container has a new child with the same ID as the old\n          // root element, then rootElementsByReactRootID[reactRootID] is\n          // just stale and needs to be updated. The case that deserves a\n          // warning is when the container is empty.\n          rootElementsByReactRootID[reactRootID] = containerChild;\n        } else {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'ReactMount: Root element has been removed from its original ' +\n            'container. New container:', rootElement.parentNode\n          ) : null);\n        }\n      }\n    }\n\n    return container;\n  },\n\n  /**\n   * Finds an element rendered by React with the supplied ID.\n   *\n   * @param {string} id ID of a DOM node in the React component.\n   * @return {DOMElement} Root DOM node of the React component.\n   */\n  findReactNodeByID: function(id) {\n    var reactRoot = ReactMount.findReactContainerForID(id);\n    return ReactMount.findComponentRoot(reactRoot, id);\n  },\n\n  /**\n   * True if the supplied `node` is rendered by React.\n   *\n   * @param {*} node DOM Element to check.\n   * @return {boolean} True if the DOM Element appears to be rendered by React.\n   * @internal\n   */\n  isRenderedByReact: function(node) {\n    if (node.nodeType !== 1) {\n      // Not a DOMElement, therefore not a React component\n      return false;\n    }\n    var id = ReactMount.getID(node);\n    return id ? id.charAt(0) === SEPARATOR : false;\n  },\n\n  /**\n   * Traverses up the ancestors of the supplied node to find a node that is a\n   * DOM representation of a React component.\n   *\n   * @param {*} node\n   * @return {?DOMEventTarget}\n   * @internal\n   */\n  getFirstReactDOM: function(node) {\n    var current = node;\n    while (current && current.parentNode !== current) {\n      if (ReactMount.isRenderedByReact(current)) {\n        return current;\n      }\n      current = current.parentNode;\n    }\n    return null;\n  },\n\n  /**\n   * Finds a node with the supplied `targetID` inside of the supplied\n   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\n   * quickly.\n   *\n   * @param {DOMEventTarget} ancestorNode Search from this root.\n   * @pararm {string} targetID ID of the DOM representation of the component.\n   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\n   * @internal\n   */\n  findComponentRoot: function(ancestorNode, targetID) {\n    var firstChildren = findComponentRootReusableArray;\n    var childIndex = 0;\n\n    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\n\n    firstChildren[0] = deepestAncestor.firstChild;\n    firstChildren.length = 1;\n\n    while (childIndex < firstChildren.length) {\n      var child = firstChildren[childIndex++];\n      var targetChild;\n\n      while (child) {\n        var childID = ReactMount.getID(child);\n        if (childID) {\n          // Even if we find the node we're looking for, we finish looping\n          // through its siblings to ensure they're cached so that we don't have\n          // to revisit this node again. Otherwise, we make n^2 calls to getID\n          // when visiting the many children of a single node in order.\n\n          if (targetID === childID) {\n            targetChild = child;\n          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\n            // If we find a child whose ID is an ancestor of the given ID,\n            // then we can be sure that we only want to search the subtree\n            // rooted at this child, so we can throw out the rest of the\n            // search state.\n            firstChildren.length = childIndex = 0;\n            firstChildren.push(child.firstChild);\n          }\n\n        } else {\n          // If this child had no ID, then there's a chance that it was\n          // injected automatically by the browser, as when a `<table>`\n          // element sprouts an extra `<tbody>` child as a side effect of\n          // `.innerHTML` parsing. Optimistically continue down this\n          // branch, but not before examining the other siblings.\n          firstChildren.push(child.firstChild);\n        }\n\n        child = child.nextSibling;\n      }\n\n      if (targetChild) {\n        // Emptying firstChildren/findComponentRootReusableArray is\n        // not necessary for correctness, but it helps the GC reclaim\n        // any nodes that were left at the end of the search.\n        firstChildren.length = 0;\n\n        return targetChild;\n      }\n    }\n\n    firstChildren.length = 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'findComponentRoot(..., %s): Unable to find element. This probably ' +\n      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +\n      'usually due to forgetting a <tbody> when using tables, nesting tags ' +\n      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +\n      'parent. ' +\n      'Try inspecting the child nodes of the element with React ID `%s`.',\n      targetID,\n      ReactMount.getID(ancestorNode)\n    ) : invariant(false));\n  },\n\n  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'mountComponentIntoNode(...): Target container is not valid.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n        );\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,\n          checksum\n        );\n\n        var diffIndex = firstDifferenceIndex(markup, rootMarkup);\n        var difference = ' (client) ' +\n          markup.substring(diffIndex - 20, diffIndex + 20) +\n          '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          container.nodeType !== DOC_NODE_TYPE,\n          'You\\'re trying to render a component to the document using ' +\n          'server rendering but the checksum was invalid. This usually ' +\n          'means you rendered a different component type or props on ' +\n          'the client from the one on the server, or your render() ' +\n          'methods are impure. React cannot handle this case due to ' +\n          'cross-browser quirks by rendering at the document root. You ' +\n          'should look for environment dependent code in your components ' +\n          'and ensure the props are the same client and server side:\\n%s',\n          difference\n        ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'React attempted to reuse markup in a container but the ' +\n            'checksum was invalid. This generally means that you are ' +\n            'using server rendering and the markup generated on the ' +\n            'server was not what the client was expecting. React injected ' +\n            'new markup to compensate which works but you have lost many ' +\n            'of the benefits of server rendering. Instead, figure out ' +\n            'why the markup being generated is different on the client ' +\n            'or server:\\n%s',\n            difference\n          ) : null);\n        }\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container.nodeType !== DOC_NODE_TYPE,\n      'You\\'re trying to render a component to the document but ' +\n        'you didn\\'t use server rendering. We can\\'t do this ' +\n        'without using server rendering due to cross-browser quirks. ' +\n        'See React.renderToString() for server rendering.'\n    ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n    setInnerHTML(container, markup);\n  },\n\n  /**\n   * React ID utilities.\n   */\n\n  getReactRootID: getReactRootID,\n\n  getID: getID,\n\n  setID: setID,\n\n  getNode: getNode,\n\n  getNodeFromInstance: getNodeFromInstance,\n\n  purgeID: purgeID\n};\n\nReactPerf.measureMethods(ReactMount, 'ReactMount', {\n  _renderNewRootComponent: '_renderNewRootComponent',\n  _mountImageIntoNode: '_mountImageIntoNode'\n});\n\nmodule.exports = ReactMount;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactMount.js\n ** module id = 38\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactMount.js?");

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPerf\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactPerf is a general AOP system designed to measure performance. This\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n */\nvar ReactPerf = {\n  /**\n   * Boolean to enable/disable measurement. Set to false by default to prevent\n   * accidental logging and perf loss.\n   */\n  enableMeasure: false,\n\n  /**\n   * Holds onto the measure function in use. By default, don't measure\n   * anything, but we'll override this if we inject a measure function.\n   */\n  storedMeasure: _noMeasure,\n\n  /**\n   * @param {object} object\n   * @param {string} objectName\n   * @param {object<string>} methodNames\n   */\n  measureMethods: function(object, objectName, methodNames) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      for (var key in methodNames) {\n        if (!methodNames.hasOwnProperty(key)) {\n          continue;\n        }\n        object[key] = ReactPerf.measure(\n          objectName,\n          methodNames[key],\n          object[key]\n        );\n      }\n    }\n  },\n\n  /**\n   * Use this to wrap methods you want to measure. Zero overhead in production.\n   *\n   * @param {string} objName\n   * @param {string} fnName\n   * @param {function} func\n   * @return {function}\n   */\n  measure: function(objName, fnName, func) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var measuredFunc = null;\n      var wrapper = function() {\n        if (ReactPerf.enableMeasure) {\n          if (!measuredFunc) {\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n          }\n          return measuredFunc.apply(this, arguments);\n        }\n        return func.apply(this, arguments);\n      };\n      wrapper.displayName = objName + '_' + fnName;\n      return wrapper;\n    }\n    return func;\n  },\n\n  injection: {\n    /**\n     * @param {function} measure\n     */\n    injectMeasure: function(measure) {\n      ReactPerf.storedMeasure = measure;\n    }\n  }\n};\n\n/**\n * Simply passes through the measured function, without measuring it.\n *\n * @param {string} objName\n * @param {string} fnName\n * @param {function} func\n * @return {function}\n */\nfunction _noMeasure(objName, fnName, func) {\n  return func;\n}\n\nmodule.exports = ReactPerf;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactPerf.js\n ** module id = 39\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactPerf.js?");

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\nvar ReactElement = __webpack_require__(32);\nvar ReactFragment = __webpack_require__(50);\nvar ReactPropTypeLocationNames = __webpack_require__(70);\n\nvar emptyFunction = __webpack_require__(117);\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar elementTypeChecker = createElementTypeChecker();\nvar nodeTypeChecker = createNodeChecker();\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: elementTypeChecker,\n  instanceOf: createInstanceTypeChecker,\n  node: nodeTypeChecker,\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location) {\n    componentName = componentName || ANONYMOUS;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error(\n          (\"Required \" + locationName + \" `\" + propName + \"` was not specified in \") +\n          (\"`\" + componentName + \"`.\")\n        );\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + preciseType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `\" + expectedType + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an array.\")\n      );\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location);\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactElement.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected instance of `\" + expectedClassName + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` of value `\" + propValue + \"` \") +\n      (\"supplied to `\" + componentName + \"`, expected one of \" + valuesString + \".\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an object.\")\n      );\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  function validate(props, propName, componentName, location) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n      (\"`\" + componentName + \"`.\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactNode.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + propType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `object`.\")\n      );\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n      propValue = ReactFragment.extractIfFragment(propValue);\n      for (var k in propValue) {\n        if (!isNode(propValue[k])) {\n          return false;\n        }\n      }\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\nmodule.exports = ReactPropTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactPropTypes.js\n ** module id = 40\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactPropTypes.js?");

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = __webpack_require__(118);\nvar ReactElementValidator = __webpack_require__(33);\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(internalInstance, rootID, transaction, context) {\n    var markup = internalInstance.mountComponent(rootID, transaction, context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(\n        internalInstance._currentElement\n      );\n    }\n    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function(internalInstance) {\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent();\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function(\n    internalInstance, nextElement, transaction, context\n  ) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && nextElement._owner != null) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n      return;\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(\n      prevElement,\n      nextElement\n    );\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(\n    internalInstance,\n    transaction\n  ) {\n    internalInstance.performUpdateIfNecessary(transaction);\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactReconciler.js\n ** module id = 41\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactReconciler.js?");

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactServerRendering\n */\n'use strict';\n\nvar ReactElement = __webpack_require__(32);\nvar ReactInstanceHandles = __webpack_require__(37);\nvar ReactMarkupChecksum = __webpack_require__(111);\nvar ReactServerRenderingTransaction =\n  __webpack_require__(119);\n\nvar emptyObject = __webpack_require__(73);\nvar instantiateReactComponent = __webpack_require__(114);\nvar invariant = __webpack_require__(61);\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToString(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToString(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(false);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      var markup =\n        componentInstance.mountComponent(id, transaction, emptyObject);\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup, without the extra React ID and checksum\n * (for generating static pages)\n */\nfunction renderToStaticMarkup(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToStaticMarkup(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(true);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      return componentInstance.mountComponent(id, transaction, emptyObject);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactServerRendering.js\n ** module id = 42\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactServerRendering.js?");

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/Object.assign.js\n ** module id = 43\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/Object.assign.js?");

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCurrentOwner = __webpack_require__(31);\nvar ReactInstanceMap = __webpack_require__(67);\nvar ReactMount = __webpack_require__(38);\n\nvar invariant = __webpack_require__(61);\nvar isNode = __webpack_require__(120);\nvar warning = __webpack_require__(64);\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        owner._warnedAboutRefsInRender,\n        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +\n        'render() should be a pure function of props and state. It should ' +\n        'never access something that requires stale data from the previous ' +\n        'render, such as refs. Move this logic to componentDidMount and ' +\n        'componentDidUpdate instead.',\n        owner.getName() || 'A component'\n      ) : null);\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (isNode(componentOrElement)) {\n    return componentOrElement;\n  }\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    componentOrElement.render == null ||\n    typeof componentOrElement.render !== 'function',\n    'Component (with keys: %s) contains `render` method ' +\n    'but is not mounted in the DOM',\n    Object.keys(componentOrElement)\n  ) : invariant(componentOrElement.render == null ||\n  typeof componentOrElement.render !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    false,\n    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',\n    Object.keys(componentOrElement)\n  ) : invariant(false));\n}\n\nmodule.exports = findDOMNode;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/findDOMNode.js\n ** module id = 44\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/findDOMNode.js?");

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar ReactElement = __webpack_require__(32);\n\nvar invariant = __webpack_require__(61);\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection. The current implementation of this\n * function assumes that a single child gets passed without a wrapper, but the\n * purpose of this helper function is to abstract away the particular structure\n * of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactComponent} The first and only `ReactComponent` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(children),\n    'onlyChild must be passed a children with exactly one child.'\n  ) : invariant(ReactElement.isValidElement(children)));\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/onlyChild.js\n ** module id = 45\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/onlyChild.js?");

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n/*jslint evil: true */\n\n\"use strict\";\n\nvar canUseDOM = !!(\n  (typeof window !== 'undefined' &&\n  window.document && window.document.createElement)\n);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners:\n    canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ExecutionEnvironment.js\n ** module id = 46\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ExecutionEnvironment.js?");

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedStateMixin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactLink = __webpack_require__(121);\nvar ReactStateSetters = __webpack_require__(122);\n\n/**\n * A simple mixin around ReactLink.forState().\n */\nvar LinkedStateMixin = {\n  /**\n   * Create a ReactLink that's linked to part of this component's state. The\n   * ReactLink will have the current value of this.state[key] and will call\n   * setState() when a change is requested.\n   *\n   * @param {string} key state key to update. Note: you may want to use keyOf()\n   * if you're using Google Closure Compiler advanced mode.\n   * @return {ReactLink} ReactLink instance linking to the state.\n   */\n  linkState: function(key) {\n    return new ReactLink(\n      this.state[key],\n      ReactStateSetters.createStateKeySetter(this, key)\n    );\n  }\n};\n\nmodule.exports = LinkedStateMixin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/LinkedStateMixin.js\n ** module id = 47\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/LinkedStateMixin.js?");

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule ReactComponentWithPureRenderMixin\n*/\n\n'use strict';\n\nvar shallowEqual = __webpack_require__(123);\n\n/**\n * If your React component's render function is \"pure\", e.g. it will render the\n * same result given the same props and state, provide this Mixin for a\n * considerable performance boost.\n *\n * Most React components have pure render functions.\n *\n * Example:\n *\n *   var ReactComponentWithPureRenderMixin =\n *     require('ReactComponentWithPureRenderMixin');\n *   React.createClass({\n *     mixins: [ReactComponentWithPureRenderMixin],\n *\n *     render: function() {\n *       return <div className={this.props.className}>foo</div>;\n *     }\n *   });\n *\n * Note: This only checks shallow equality for props and state. If these contain\n * complex data structures this mixin may have false-negatives for deeper\n * differences. Only mixin to components which have simple props and state, or\n * use `forceUpdate()` when you know deep data structures have changed.\n */\nvar ReactComponentWithPureRenderMixin = {\n  shouldComponentUpdate: function(nextProps, nextState) {\n    return !shallowEqual(this.props, nextProps) ||\n           !shallowEqual(this.state, nextState);\n  }\n};\n\nmodule.exports = ReactComponentWithPureRenderMixin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactComponentWithPureRenderMixin.js\n ** module id = 48\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactComponentWithPureRenderMixin.js?");

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * @providesModule ReactCSSTransitionGroup\n */\n\n'use strict';\n\nvar React = __webpack_require__(20);\n\nvar assign = __webpack_require__(43);\n\nvar ReactTransitionGroup = React.createFactory(\n  __webpack_require__(51)\n);\nvar ReactCSSTransitionGroupChild = React.createFactory(\n  __webpack_require__(124)\n);\n\nvar ReactCSSTransitionGroup = React.createClass({\n  displayName: 'ReactCSSTransitionGroup',\n\n  propTypes: {\n    transitionName: React.PropTypes.string.isRequired,\n    transitionAppear: React.PropTypes.bool,\n    transitionEnter: React.PropTypes.bool,\n    transitionLeave: React.PropTypes.bool\n  },\n\n  getDefaultProps: function() {\n    return {\n      transitionAppear: false,\n      transitionEnter: true,\n      transitionLeave: true\n    };\n  },\n\n  _wrapChild: function(child) {\n    // We need to provide this childFactory so that\n    // ReactCSSTransitionGroupChild can receive updates to name, enter, and\n    // leave while it is leaving.\n    return ReactCSSTransitionGroupChild(\n      {\n        name: this.props.transitionName,\n        appear: this.props.transitionAppear,\n        enter: this.props.transitionEnter,\n        leave: this.props.transitionLeave\n      },\n      child\n    );\n  },\n\n  render: function() {\n    return (\n      ReactTransitionGroup(\n        assign({}, this.props, {childFactory: this._wrapChild})\n      )\n    );\n  }\n});\n\nmodule.exports = ReactCSSTransitionGroup;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactCSSTransitionGroup.js\n ** module id = 49\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactCSSTransitionGroup.js?");

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule ReactFragment\n*/\n\n'use strict';\n\nvar ReactElement = __webpack_require__(32);\n\nvar warning = __webpack_require__(64);\n\n/**\n * We used to allow keyed objects to serve as a collection of ReactElements,\n * or nested sets. This allowed us a way to explicitly key a set a fragment of\n * components. This is now being replaced with an opaque data structure.\n * The upgrade path is to call React.addons.createFragment({ key: value }) to\n * create a keyed fragment. The resulting data structure is opaque, for now.\n */\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var fragmentKey = '_reactFragment';\n  var didWarnKey = '_reactDidWarn';\n  var canWarnForReactFragment = false;\n\n  try {\n    // Feature test. Don't even try to issue this warning if we can't use\n    // enumerable: false.\n\n    var dummy = function() {\n      return 1;\n    };\n\n    Object.defineProperty(\n      {},\n      fragmentKey,\n      {enumerable: false, value: true}\n    );\n\n    Object.defineProperty(\n      {},\n      'key',\n      {enumerable: true, get: dummy}\n    );\n\n    canWarnForReactFragment = true;\n  } catch (x) { }\n\n  var proxyPropertyAccessWithWarning = function(obj, key) {\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      get: function() {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an opaque type. Accessing any of its ' +\n          'properties is deprecated. Pass it to one of the React.Children ' +\n          'helpers.'\n        ) : null);\n        this[didWarnKey] = true;\n        return this[fragmentKey][key];\n      },\n      set: function(value) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an immutable opaque type. Mutating its ' +\n          'properties is deprecated.'\n        ) : null);\n        this[didWarnKey] = true;\n        this[fragmentKey][key] = value;\n      }\n    });\n  };\n\n  var issuedWarnings = {};\n\n  var didWarnForFragment = function(fragment) {\n    // We use the keys and the type of the value as a heuristic to dedupe the\n    // warning to avoid spamming too much.\n    var fragmentCacheKey = '';\n    for (var key in fragment) {\n      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';\n    }\n    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];\n    issuedWarnings[fragmentCacheKey] = true;\n    return alreadyWarnedOnce;\n  };\n}\n\nvar ReactFragment = {\n  // Wrap a keyed object in an opaque proxy that warns you if you access any\n  // of its properties.\n  create: function(object) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (typeof object !== 'object' || !object || Array.isArray(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment only accepts a single object.',\n          object\n        ) : null);\n        return object;\n      }\n      if (ReactElement.isValidElement(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment does not accept a ReactElement ' +\n          'without a wrapper object.'\n        ) : null);\n        return object;\n      }\n      if (canWarnForReactFragment) {\n        var proxy = {};\n        Object.defineProperty(proxy, fragmentKey, {\n          enumerable: false,\n          value: object\n        });\n        Object.defineProperty(proxy, didWarnKey, {\n          writable: true,\n          enumerable: false,\n          value: false\n        });\n        for (var key in object) {\n          proxyPropertyAccessWithWarning(proxy, key);\n        }\n        Object.preventExtensions(proxy);\n        return proxy;\n      }\n    }\n    return object;\n  },\n  // Extract the original keyed object from the fragment opaque type. Warn if\n  // a plain object is passed here.\n  extract: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        if (!fragment[fragmentKey]) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnForFragment(fragment),\n            'Any use of a keyed object should be wrapped in ' +\n            'React.addons.createFragment(object) before being passed as a ' +\n            'child.'\n          ) : null);\n          return fragment;\n        }\n        return fragment[fragmentKey];\n      }\n    }\n    return fragment;\n  },\n  // Check if this is a fragment and if so, extract the keyed object. If it\n  // is a fragment-like object, warn that it should be wrapped. Ignore if we\n  // can't determine what kind of object this is.\n  extractIfFragment: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        // If it is the opaque type, return the keyed object.\n        if (fragment[fragmentKey]) {\n          return fragment[fragmentKey];\n        }\n        // Otherwise, check each property if it has an element, if it does\n        // it is probably meant as a fragment, so we can warn early. Defer,\n        // the warning to extract.\n        for (var key in fragment) {\n          if (fragment.hasOwnProperty(key) &&\n              ReactElement.isValidElement(fragment[key])) {\n            // This looks like a fragment object, we should provide an\n            // early warning.\n            return ReactFragment.extract(fragment);\n          }\n        }\n      }\n    }\n    return fragment;\n  }\n};\n\nmodule.exports = ReactFragment;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactFragment.js\n ** module id = 50\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactFragment.js?");

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionGroup\n */\n\n'use strict';\n\nvar React = __webpack_require__(20);\nvar ReactTransitionChildMapping = __webpack_require__(125);\n\nvar assign = __webpack_require__(43);\nvar cloneWithProps = __webpack_require__(54);\nvar emptyFunction = __webpack_require__(117);\n\nvar ReactTransitionGroup = React.createClass({\n  displayName: 'ReactTransitionGroup',\n\n  propTypes: {\n    component: React.PropTypes.any,\n    childFactory: React.PropTypes.func\n  },\n\n  getDefaultProps: function() {\n    return {\n      component: 'span',\n      childFactory: emptyFunction.thatReturnsArgument\n    };\n  },\n\n  getInitialState: function() {\n    return {\n      children: ReactTransitionChildMapping.getChildMapping(this.props.children)\n    };\n  },\n\n  componentWillMount: function() {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  },\n\n  componentDidMount: function() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key);\n      }\n    }\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(\n      nextProps.children\n    );\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: ReactTransitionChildMapping.mergeChildMappings(\n        prevChildMapping,\n        nextChildMapping\n      )\n    });\n\n    var key;\n\n    for (key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev &&\n          !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);\n      if (prevChildMapping[key] && !hasNext &&\n          !this.currentlyTransitioningKeys[key]) {\n        this.keysToLeave.push(key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  },\n\n  componentDidUpdate: function() {\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(this.performEnter);\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(this.performLeave);\n  },\n\n  performAppear: function(key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillAppear) {\n      component.componentWillAppear(\n        this._handleDoneAppearing.bind(this, key)\n      );\n    } else {\n      this._handleDoneAppearing(key);\n    }\n  },\n\n  _handleDoneAppearing: function(key) {\n    var component = this.refs[key];\n    if (component.componentDidAppear) {\n      component.componentDidAppear();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(\n      this.props.children\n    );\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully appeared. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performEnter: function(key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillEnter) {\n      component.componentWillEnter(\n        this._handleDoneEntering.bind(this, key)\n      );\n    } else {\n      this._handleDoneEntering(key);\n    }\n  },\n\n  _handleDoneEntering: function(key) {\n    var component = this.refs[key];\n    if (component.componentDidEnter) {\n      component.componentDidEnter();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(\n      this.props.children\n    );\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully entered. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performLeave: function(key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n    if (component.componentWillLeave) {\n      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));\n    } else {\n      // Note that this is somewhat dangerous b/c it calls setState()\n      // again, effectively mutating the component before all the work\n      // is done.\n      this._handleDoneLeaving(key);\n    }\n  },\n\n  _handleDoneLeaving: function(key) {\n    var component = this.refs[key];\n\n    if (component.componentDidLeave) {\n      component.componentDidLeave();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(\n      this.props.children\n    );\n\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n      // This entered again before it fully left. Add it again.\n      this.performEnter(key);\n    } else {\n      var newChildren = assign({}, this.state.children);\n      delete newChildren[key];\n      this.setState({children: newChildren});\n    }\n  },\n\n  render: function() {\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n    for (var key in this.state.children) {\n      var child = this.state.children[key];\n      if (child) {\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(cloneWithProps(\n          this.props.childFactory(child),\n          {ref: key, key: key}\n        ));\n      }\n    }\n    return React.createElement(\n      this.props.component,\n      this.props,\n      childrenToRender\n    );\n  }\n});\n\nmodule.exports = ReactTransitionGroup;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactTransitionGroup.js\n ** module id = 51\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactTransitionGroup.js?");

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdates\n */\n\n'use strict';\n\nvar CallbackQueue = __webpack_require__(126);\nvar PooledClass = __webpack_require__(62);\nvar ReactCurrentOwner = __webpack_require__(31);\nvar ReactPerf = __webpack_require__(39);\nvar ReactReconciler = __webpack_require__(41);\nvar Transaction = __webpack_require__(127);\n\nvar assign = __webpack_require__(43);\nvar invariant = __webpack_require__(61);\nvar warning = __webpack_require__(64);\n\nvar dirtyComponents = [];\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactUpdates.ReactReconcileTransaction && batchingStrategy,\n    'ReactUpdates: must inject a reconcile transaction class and batching ' +\n    'strategy'\n  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));\n}\n\nvar NESTED_UPDATES = {\n  initialize: function() {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function() {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function() {\n    this.callbackQueue.reset();\n  },\n  close: function() {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction =\n    ReactUpdates.ReactReconcileTransaction.getPooled();\n}\n\nassign(\n  ReactUpdatesFlushTransaction.prototype,\n  Transaction.Mixin, {\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function() {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function(method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.Mixin.perform.call(\n      this,\n      this.reconcileTransaction.perform,\n      this.reconcileTransaction,\n      method,\n      scope,\n      a\n    );\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d) {\n  ensureInjected();\n  batchingStrategy.batchedUpdates(callback, a, b, c, d);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    len === dirtyComponents.length,\n    'Expected flush transaction\\'s stored dirty-components length (%s) to ' +\n    'match dirty-components array length (%s).',\n    len,\n    dirtyComponents.length\n  ) : invariant(len === dirtyComponents.length));\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    ReactReconciler.performUpdateIfNecessary(\n      component,\n      transaction.reconcileTransaction\n    );\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(\n          callbacks[j],\n          component.getPublicInstance()\n        );\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function() {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\nflushBatchedUpdates = ReactPerf.measure(\n  'ReactUpdates',\n  'flushBatchedUpdates',\n  flushBatchedUpdates\n);\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setProps, setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    ReactCurrentOwner.current == null,\n    'enqueueUpdate(): Render methods should be a pure function of props ' +\n    'and state; triggering nested component updates from render is not ' +\n    'allowed. If necessary, trigger nested updates in ' +\n    'componentDidUpdate.'\n  ) : null);\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    batchingStrategy.isBatchingUpdates,\n    'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context where' +\n    'updates are not being batched.'\n  ) : invariant(batchingStrategy.isBatchingUpdates));\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function(ReconcileTransaction) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReconcileTransaction,\n      'ReactUpdates: must provide a reconcile transaction class'\n    ) : invariant(ReconcileTransaction));\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function(_batchingStrategy) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      _batchingStrategy,\n      'ReactUpdates: must provide a batching strategy'\n    ) : invariant(_batchingStrategy));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.batchedUpdates === 'function',\n      'ReactUpdates: must provide a batchedUpdates() function'\n    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.isBatchingUpdates === 'boolean',\n      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'\n    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactUpdates.js\n ** module id = 52\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactUpdates.js?");

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule cx\n */\n\n/**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */\n\n'use strict';\nvar warning = __webpack_require__(64);\n\nvar warned = false;\n\nfunction cx(classNames) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      warned,\n      'React.addons.classSet will be deprecated in a future version. See ' +\n      'http://fb.me/react-addons-classset'\n    ) : null);\n    warned = true;\n  }\n\n  if (typeof classNames == 'object') {\n    return Object.keys(classNames).filter(function(className) {\n      return classNames[className];\n    }).join(' ');\n  } else {\n    return Array.prototype.join.call(arguments, ' ');\n  }\n}\n\nmodule.exports = cx;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/cx.js\n ** module id = 53\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/cx.js?");

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule cloneWithProps\n */\n\n'use strict';\n\nvar ReactElement = __webpack_require__(32);\nvar ReactPropTransferer = __webpack_require__(128);\n\nvar keyOf = __webpack_require__(72);\nvar warning = __webpack_require__(64);\n\nvar CHILDREN_PROP = keyOf({children: null});\n\n/**\n * Sometimes you want to change the props of a child passed to you. Usually\n * this is to add a CSS class.\n *\n * @param {ReactElement} child child element you'd like to clone\n * @param {object} props props you'd like to modify. className and style will be\n * merged automatically.\n * @return {ReactElement} a clone of child with props merged in.\n */\nfunction cloneWithProps(child, props) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      !child.ref,\n      'You are calling cloneWithProps() on a child with a ref. This is ' +\n      'dangerous because you\\'re creating a new child which will not be ' +\n      'added as a ref to its parent.'\n    ) : null);\n  }\n\n  var newProps = ReactPropTransferer.mergeProps(props, child.props);\n\n  // Use `child.props.children` if it is provided.\n  if (!newProps.hasOwnProperty(CHILDREN_PROP) &&\n      child.props.hasOwnProperty(CHILDREN_PROP)) {\n    newProps.children = child.props.children;\n  }\n\n  // The current API doesn't retain _owner and _context, which is why this\n  // doesn't use ReactElement.cloneAndReplaceProps.\n  return ReactElement.createElement(child.type, newProps);\n}\n\nmodule.exports = cloneWithProps;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/cloneWithProps.js\n ** module id = 54\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/cloneWithProps.js?");

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule update\n */\n\n'use strict';\n\nvar assign = __webpack_require__(43);\nvar keyOf = __webpack_require__(72);\nvar invariant = __webpack_require__(61);\n\nfunction shallowCopy(x) {\n  if (Array.isArray(x)) {\n    return x.concat();\n  } else if (x && typeof x === 'object') {\n    return assign(new x.constructor(), x);\n  } else {\n    return x;\n  }\n}\n\nvar COMMAND_PUSH = keyOf({$push: null});\nvar COMMAND_UNSHIFT = keyOf({$unshift: null});\nvar COMMAND_SPLICE = keyOf({$splice: null});\nvar COMMAND_SET = keyOf({$set: null});\nvar COMMAND_MERGE = keyOf({$merge: null});\nvar COMMAND_APPLY = keyOf({$apply: null});\n\nvar ALL_COMMANDS_LIST = [\n  COMMAND_PUSH,\n  COMMAND_UNSHIFT,\n  COMMAND_SPLICE,\n  COMMAND_SET,\n  COMMAND_MERGE,\n  COMMAND_APPLY\n];\n\nvar ALL_COMMANDS_SET = {};\n\nALL_COMMANDS_LIST.forEach(function(command) {\n  ALL_COMMANDS_SET[command] = true;\n});\n\nfunction invariantArrayCase(value, spec, command) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  ) : invariant(Array.isArray(value)));\n  var specValue = spec[command];\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    Array.isArray(specValue),\n    'update(): expected spec of %s to be an array; got %s. ' +\n    'Did you forget to wrap your parameter in an array?',\n    command,\n    specValue\n  ) : invariant(Array.isArray(specValue)));\n}\n\nfunction update(value, spec) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof spec === 'object',\n    'update(): You provided a key path to update() that did not contain one ' +\n    'of %s. Did you forget to include {%s: ...}?',\n    ALL_COMMANDS_LIST.join(', '),\n    COMMAND_SET\n  ) : invariant(typeof spec === 'object'));\n\n  if (spec.hasOwnProperty(COMMAND_SET)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Object.keys(spec).length === 1,\n      'Cannot have more than one key in an object with %s',\n      COMMAND_SET\n    ) : invariant(Object.keys(spec).length === 1));\n\n    return spec[COMMAND_SET];\n  }\n\n  var nextValue = shallowCopy(value);\n\n  if (spec.hasOwnProperty(COMMAND_MERGE)) {\n    var mergeObj = spec[COMMAND_MERGE];\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      mergeObj && typeof mergeObj === 'object',\n      'update(): %s expects a spec of type \\'object\\'; got %s',\n      COMMAND_MERGE,\n      mergeObj\n    ) : invariant(mergeObj && typeof mergeObj === 'object'));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      nextValue && typeof nextValue === 'object',\n      'update(): %s expects a target of type \\'object\\'; got %s',\n      COMMAND_MERGE,\n      nextValue\n    ) : invariant(nextValue && typeof nextValue === 'object'));\n    assign(nextValue, spec[COMMAND_MERGE]);\n  }\n\n  if (spec.hasOwnProperty(COMMAND_PUSH)) {\n    invariantArrayCase(value, spec, COMMAND_PUSH);\n    spec[COMMAND_PUSH].forEach(function(item) {\n      nextValue.push(item);\n    });\n  }\n\n  if (spec.hasOwnProperty(COMMAND_UNSHIFT)) {\n    invariantArrayCase(value, spec, COMMAND_UNSHIFT);\n    spec[COMMAND_UNSHIFT].forEach(function(item) {\n      nextValue.unshift(item);\n    });\n  }\n\n  if (spec.hasOwnProperty(COMMAND_SPLICE)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Array.isArray(value),\n      'Expected %s target to be an array; got %s',\n      COMMAND_SPLICE,\n      value\n    ) : invariant(Array.isArray(value)));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Array.isArray(spec[COMMAND_SPLICE]),\n      'update(): expected spec of %s to be an array of arrays; got %s. ' +\n      'Did you forget to wrap your parameters in an array?',\n      COMMAND_SPLICE,\n      spec[COMMAND_SPLICE]\n    ) : invariant(Array.isArray(spec[COMMAND_SPLICE])));\n    spec[COMMAND_SPLICE].forEach(function(args) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        Array.isArray(args),\n        'update(): expected spec of %s to be an array of arrays; got %s. ' +\n        'Did you forget to wrap your parameters in an array?',\n        COMMAND_SPLICE,\n        spec[COMMAND_SPLICE]\n      ) : invariant(Array.isArray(args)));\n      nextValue.splice.apply(nextValue, args);\n    });\n  }\n\n  if (spec.hasOwnProperty(COMMAND_APPLY)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof spec[COMMAND_APPLY] === 'function',\n      'update(): expected spec of %s to be a function; got %s.',\n      COMMAND_APPLY,\n      spec[COMMAND_APPLY]\n    ) : invariant(typeof spec[COMMAND_APPLY] === 'function'));\n    nextValue = spec[COMMAND_APPLY](nextValue);\n  }\n\n  for (var k in spec) {\n    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {\n      nextValue[k] = update(value[k], spec[k]);\n    }\n  }\n\n  return nextValue;\n}\n\nmodule.exports = update;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/update.js\n ** module id = 55\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/update.js?");

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerf\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = __webpack_require__(108);\nvar ReactDefaultPerfAnalysis = __webpack_require__(129);\nvar ReactMount = __webpack_require__(38);\nvar ReactPerf = __webpack_require__(39);\n\nvar performanceNow = __webpack_require__(130);\n\nfunction roundFloat(val) {\n  return Math.floor(val * 100) / 100;\n}\n\nfunction addValue(obj, key, val) {\n  obj[key] = (obj[key] || 0) + val;\n}\n\nvar ReactDefaultPerf = {\n  _allMeasurements: [], // last item in the list is the current one\n  _mountStack: [0],\n  _injected: false,\n\n  start: function() {\n    if (!ReactDefaultPerf._injected) {\n      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);\n    }\n\n    ReactDefaultPerf._allMeasurements.length = 0;\n    ReactPerf.enableMeasure = true;\n  },\n\n  stop: function() {\n    ReactPerf.enableMeasure = false;\n  },\n\n  getLastMeasurements: function() {\n    return ReactDefaultPerf._allMeasurements;\n  },\n\n  printExclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Component class name': item.componentName,\n        'Total inclusive time (ms)': roundFloat(item.inclusive),\n        'Exclusive mount time (ms)': roundFloat(item.exclusive),\n        'Exclusive render time (ms)': roundFloat(item.render),\n        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),\n        'Render time per instance (ms)': roundFloat(item.render / item.count),\n        'Instances': item.count\n      };\n    }));\n    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\n    // number.\n  },\n\n  printInclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Inclusive time (ms)': roundFloat(item.time),\n        'Instances': item.count\n      };\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  getMeasurementsSummaryMap: function(measurements) {\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(\n      measurements,\n      true\n    );\n    return summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Wasted time (ms)': item.time,\n        'Instances': item.count\n      };\n    });\n  },\n\n  printWasted: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  printDOM: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);\n    console.table(summary.map(function(item) {\n      var result = {};\n      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;\n      result['type'] = item.type;\n      result['args'] = JSON.stringify(item.args);\n      return result;\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  _recordWrite: function(id, fnName, totalTime, args) {\n    // TODO: totalTime isn't that useful since it doesn't count paints/reflows\n    var writes =\n      ReactDefaultPerf\n        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]\n        .writes;\n    writes[id] = writes[id] || [];\n    writes[id].push({\n      type: fnName,\n      time: totalTime,\n      args: args\n    });\n  },\n\n  measure: function(moduleName, fnName, func) {\n    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      var totalTime;\n      var rv;\n      var start;\n\n      if (fnName === '_renderNewRootComponent' ||\n          fnName === 'flushBatchedUpdates') {\n        // A \"measurement\" is a set of metrics recorded for each flush. We want\n        // to group the metrics for a given flush together so we can look at the\n        // components that rendered and the DOM operations that actually\n        // happened to determine the amount of \"wasted work\" performed.\n        ReactDefaultPerf._allMeasurements.push({\n          exclusive: {},\n          inclusive: {},\n          render: {},\n          counts: {},\n          writes: {},\n          displayNames: {},\n          totalTime: 0\n        });\n        start = performanceNow();\n        rv = func.apply(this, args);\n        ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ].totalTime = performanceNow() - start;\n        return rv;\n      } else if (fnName === '_mountImageIntoNode' ||\n          moduleName === 'ReactDOMIDOperations') {\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (fnName === '_mountImageIntoNode') {\n          var mountID = ReactMount.getID(args[1]);\n          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);\n        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {\n          // special format\n          args[0].forEach(function(update) {\n            var writeArgs = {};\n            if (update.fromIndex !== null) {\n              writeArgs.fromIndex = update.fromIndex;\n            }\n            if (update.toIndex !== null) {\n              writeArgs.toIndex = update.toIndex;\n            }\n            if (update.textContent !== null) {\n              writeArgs.textContent = update.textContent;\n            }\n            if (update.markupIndex !== null) {\n              writeArgs.markup = args[1][update.markupIndex];\n            }\n            ReactDefaultPerf._recordWrite(\n              update.parentID,\n              update.type,\n              totalTime,\n              writeArgs\n            );\n          });\n        } else {\n          // basic format\n          ReactDefaultPerf._recordWrite(\n            args[0],\n            fnName,\n            totalTime,\n            Array.prototype.slice.call(args, 1)\n          );\n        }\n        return rv;\n      } else if (moduleName === 'ReactCompositeComponent' && (\n        (// TODO: receiveComponent()?\n        (fnName === 'mountComponent' ||\n        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {\n\n        if (typeof this._currentElement.type === 'string') {\n          return func.apply(this, args);\n        }\n\n        var rootNodeID = fnName === 'mountComponent' ?\n          args[0] :\n          this._rootNodeID;\n        var isRender = fnName === '_renderValidatedComponent';\n        var isMount = fnName === 'mountComponent';\n\n        var mountStack = ReactDefaultPerf._mountStack;\n        var entry = ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ];\n\n        if (isRender) {\n          addValue(entry.counts, rootNodeID, 1);\n        } else if (isMount) {\n          mountStack.push(0);\n        }\n\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (isRender) {\n          addValue(entry.render, rootNodeID, totalTime);\n        } else if (isMount) {\n          var subMountTime = mountStack.pop();\n          mountStack[mountStack.length - 1] += totalTime;\n          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        } else {\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        }\n\n        entry.displayNames[rootNodeID] = {\n          current: this.getName(),\n          owner: this._currentElement._owner ?\n            this._currentElement._owner.getName() :\n            '<root>'\n        };\n\n        return rv;\n      } else {\n        return func.apply(this, args);\n      }\n    };\n  }\n};\n\nmodule.exports = ReactDefaultPerf;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDefaultPerf.js\n ** module id = 56\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDefaultPerf.js?");

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTestUtils\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar EventPluginHub = __webpack_require__(131);\nvar EventPropagators = __webpack_require__(132);\nvar React = __webpack_require__(20);\nvar ReactElement = __webpack_require__(32);\nvar ReactEmptyComponent = __webpack_require__(110);\nvar ReactBrowserEventEmitter = __webpack_require__(109);\nvar ReactCompositeComponent = __webpack_require__(133);\nvar ReactInstanceHandles = __webpack_require__(37);\nvar ReactInstanceMap = __webpack_require__(67);\nvar ReactMount = __webpack_require__(38);\nvar ReactUpdates = __webpack_require__(52);\nvar SyntheticEvent = __webpack_require__(134);\n\nvar assign = __webpack_require__(43);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction Event(suffix) {}\n\n/**\n * @class ReactTestUtils\n */\n\n/**\n * Todo: Support the entire DOM.scry query syntax. For now, these simple\n * utilities will suffice for testing purposes.\n * @lends ReactTestUtils\n */\nvar ReactTestUtils = {\n  renderIntoDocument: function(instance) {\n    var div = document.createElement('div');\n    // None of our tests actually require attaching the container to the\n    // DOM, and doing so creates a mess that we rely on test isolation to\n    // clean up, so we're going to stop honoring the name of this method\n    // (and probably rename it eventually) if no problems arise.\n    // document.documentElement.appendChild(div);\n    return React.render(instance, div);\n  },\n\n  isElement: function(element) {\n    return ReactElement.isValidElement(element);\n  },\n\n  isElementOfType: function(inst, convenienceConstructor) {\n    return (\n      ReactElement.isValidElement(inst) &&\n      inst.type === convenienceConstructor\n    );\n  },\n\n  isDOMComponent: function(inst) {\n    // TODO: Fix this heuristic. It's just here because composites can currently\n    // pretend to be DOM components.\n    return !!(inst && inst.tagName && inst.getDOMNode);\n  },\n\n  isDOMComponentElement: function(inst) {\n    return !!(inst &&\n              ReactElement.isValidElement(inst) &&\n              !!inst.tagName);\n  },\n\n  isCompositeComponent: function(inst) {\n    return typeof inst.render === 'function' &&\n           typeof inst.setState === 'function';\n  },\n\n  isCompositeComponentWithType: function(inst, type) {\n    return !!(ReactTestUtils.isCompositeComponent(inst) &&\n             (inst.constructor === type));\n  },\n\n  isCompositeComponentElement: function(inst) {\n    if (!ReactElement.isValidElement(inst)) {\n      return false;\n    }\n    // We check the prototype of the type that will get mounted, not the\n    // instance itself. This is a future proof way of duck typing.\n    var prototype = inst.type.prototype;\n    return (\n      typeof prototype.render === 'function' &&\n      typeof prototype.setState === 'function'\n    );\n  },\n\n  isCompositeComponentElementWithType: function(inst, type) {\n    return !!(ReactTestUtils.isCompositeComponentElement(inst) &&\n             (inst.constructor === type));\n  },\n\n  getRenderedChildOfCompositeComponent: function(inst) {\n    if (!ReactTestUtils.isCompositeComponent(inst)) {\n      return null;\n    }\n    var internalInstance = ReactInstanceMap.get(inst);\n    return internalInstance._renderedComponent.getPublicInstance();\n  },\n\n  findAllInRenderedTree: function(inst, test) {\n    if (!inst) {\n      return [];\n    }\n    var ret = test(inst) ? [inst] : [];\n    if (ReactTestUtils.isDOMComponent(inst)) {\n      var internalInstance = ReactInstanceMap.get(inst);\n      var renderedChildren = internalInstance\n        ._renderedComponent\n        ._renderedChildren;\n      var key;\n      for (key in renderedChildren) {\n        if (!renderedChildren.hasOwnProperty(key)) {\n          continue;\n        }\n        if (!renderedChildren[key].getPublicInstance) {\n          continue;\n        }\n        ret = ret.concat(\n          ReactTestUtils.findAllInRenderedTree(\n            renderedChildren[key].getPublicInstance(),\n            test\n          )\n        );\n      }\n    } else if (ReactTestUtils.isCompositeComponent(inst)) {\n      ret = ret.concat(\n        ReactTestUtils.findAllInRenderedTree(\n          ReactTestUtils.getRenderedChildOfCompositeComponent(inst),\n          test\n        )\n      );\n    }\n    return ret;\n  },\n\n  /**\n   * Finds all instance of components in the rendered tree that are DOM\n   * components with the class name matching `className`.\n   * @return an array of all the matches.\n   */\n  scryRenderedDOMComponentsWithClass: function(root, className) {\n    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {\n      var instClassName = inst.props.className;\n      return ReactTestUtils.isDOMComponent(inst) && (\n        (instClassName && (' ' + instClassName + ' ').indexOf(' ' + className + ' ') !== -1)\n      );\n    });\n  },\n\n  /**\n   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactDOMComponent} The one match.\n   */\n  findRenderedDOMComponentWithClass: function(root, className) {\n    var all =\n      ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match ' +\n        '(found: ' + all.length + ') for class:' + className\n      );\n    }\n    return all[0];\n  },\n\n\n  /**\n   * Finds all instance of components in the rendered tree that are DOM\n   * components with the tag name matching `tagName`.\n   * @return an array of all the matches.\n   */\n  scryRenderedDOMComponentsWithTag: function(root, tagName) {\n    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {\n      return ReactTestUtils.isDOMComponent(inst) &&\n            inst.tagName === tagName.toUpperCase();\n    });\n  },\n\n  /**\n   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactDOMComponent} The one match.\n   */\n  findRenderedDOMComponentWithTag: function(root, tagName) {\n    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match for tag:' + tagName);\n    }\n    return all[0];\n  },\n\n\n  /**\n   * Finds all instances of components with type equal to `componentType`.\n   * @return an array of all the matches.\n   */\n  scryRenderedComponentsWithType: function(root, componentType) {\n    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {\n      return ReactTestUtils.isCompositeComponentWithType(\n        inst,\n        componentType\n      );\n    });\n  },\n\n  /**\n   * Same as `scryRenderedComponentsWithType` but expects there to be one result\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactComponent} The one match.\n   */\n  findRenderedComponentWithType: function(root, componentType) {\n    var all = ReactTestUtils.scryRenderedComponentsWithType(\n      root,\n      componentType\n    );\n    if (all.length !== 1) {\n      throw new Error(\n        'Did not find exactly one match for componentType:' + componentType\n      );\n    }\n    return all[0];\n  },\n\n  /**\n   * Pass a mocked component module to this method to augment it with\n   * useful methods that allow it to be used as a dummy React component.\n   * Instead of rendering as usual, the component will become a simple\n   * <div> containing any provided children.\n   *\n   * @param {object} module the mock function object exported from a\n   *                        module that defines the component to be mocked\n   * @param {?string} mockTagName optional dummy root tag name to return\n   *                              from render method (overrides\n   *                              module.mockTagName if provided)\n   * @return {object} the ReactTestUtils object (for chaining)\n   */\n  mockComponent: function(module, mockTagName) {\n    mockTagName = mockTagName || module.mockTagName || \"div\";\n\n    module.prototype.render.mockImplementation(function() {\n      return React.createElement(\n        mockTagName,\n        null,\n        this.props.children\n      );\n    });\n\n    return this;\n  },\n\n  /**\n   * Simulates a top level event being dispatched from a raw event that occured\n   * on an `Element` node.\n   * @param topLevelType {Object} A type from `EventConstants.topLevelTypes`\n   * @param {!Element} node The dom to simulate an event occurring on.\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\n   */\n  simulateNativeEventOnNode: function(topLevelType, node, fakeNativeEvent) {\n    fakeNativeEvent.target = node;\n    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(\n      topLevelType,\n      fakeNativeEvent\n    );\n  },\n\n  /**\n   * Simulates a top level event being dispatched from a raw event that occured\n   * on the `ReactDOMComponent` `comp`.\n   * @param topLevelType {Object} A type from `EventConstants.topLevelTypes`.\n   * @param comp {!ReactDOMComponent}\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\n   */\n  simulateNativeEventOnDOMComponent: function(\n      topLevelType,\n      comp,\n      fakeNativeEvent) {\n    ReactTestUtils.simulateNativeEventOnNode(\n      topLevelType,\n      comp.getDOMNode(),\n      fakeNativeEvent\n    );\n  },\n\n  nativeTouchData: function(x, y) {\n    return {\n      touches: [\n        {pageX: x, pageY: y}\n      ]\n    };\n  },\n\n  createRenderer: function() {\n    return new ReactShallowRenderer();\n  },\n\n  Simulate: null,\n  SimulateNative: {}\n};\n\n/**\n * @class ReactShallowRenderer\n */\nvar ReactShallowRenderer = function() {\n  this._instance = null;\n};\n\nReactShallowRenderer.prototype.getRenderOutput = function() {\n  return (\n    (this._instance && this._instance._renderedComponent &&\n     this._instance._renderedComponent._renderedOutput)\n    || null\n  );\n};\n\nvar NoopInternalComponent = function(element) {\n  this._renderedOutput = element;\n  this._currentElement = element === null || element === false ?\n    ReactEmptyComponent.emptyElement :\n    element;\n};\n\nNoopInternalComponent.prototype = {\n\n  mountComponent: function() {\n  },\n\n  receiveComponent: function(element) {\n    this._renderedOutput = element;\n    this._currentElement = element === null || element === false ?\n      ReactEmptyComponent.emptyElement :\n      element;\n  },\n\n  unmountComponent: function() {\n  }\n\n};\n\nvar ShallowComponentWrapper = function() { };\nassign(\n  ShallowComponentWrapper.prototype,\n  ReactCompositeComponent.Mixin, {\n    _instantiateReactComponent: function(element) {\n      return new NoopInternalComponent(element);\n    },\n    _replaceNodeWithMarkupByID: function() {},\n    _renderValidatedComponent:\n      ReactCompositeComponent.Mixin.\n        _renderValidatedComponentWithoutOwnerOrContext\n  }\n);\n\nReactShallowRenderer.prototype.render = function(element, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n  this._render(element, transaction, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n};\n\nReactShallowRenderer.prototype.unmount = function() {\n  if (this._instance) {\n    this._instance.unmountComponent();\n  }\n};\n\nReactShallowRenderer.prototype._render = function(element, transaction, context) {\n  if (!this._instance) {\n    var rootID = ReactInstanceHandles.createReactRootID();\n    var instance = new ShallowComponentWrapper(element.type);\n    instance.construct(element);\n\n    instance.mountComponent(rootID, transaction, context);\n\n    this._instance = instance;\n  } else {\n    this._instance.receiveComponent(element, transaction, context);\n  }\n};\n\n/**\n * Exports:\n *\n * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`\n * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`\n * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`\n * - ... (All keys from event plugin `eventTypes` objects)\n */\nfunction makeSimulator(eventType) {\n  return function(domComponentOrNode, eventData) {\n    var node;\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\n      node = domComponentOrNode.getDOMNode();\n    } else if (domComponentOrNode.tagName) {\n      node = domComponentOrNode;\n    }\n\n    var fakeNativeEvent = new Event();\n    fakeNativeEvent.target = node;\n    // We don't use SyntheticEvent.getPooled in order to not have to worry about\n    // properly destroying any properties assigned from `eventData` upon release\n    var event = new SyntheticEvent(\n      ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType],\n      ReactMount.getID(node),\n      fakeNativeEvent\n    );\n    assign(event, eventData);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n\n    ReactUpdates.batchedUpdates(function() {\n      EventPluginHub.enqueueEvents(event);\n      EventPluginHub.processEventQueue();\n    });\n  };\n}\n\nfunction buildSimulators() {\n  ReactTestUtils.Simulate = {};\n\n  var eventType;\n  for (eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {\n    /**\n     * @param {!Element || ReactDOMComponent} domComponentOrNode\n     * @param {?object} eventData Fake event data to use in SyntheticEvent.\n     */\n    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);\n  }\n}\n\n// Rebuild ReactTestUtils.Simulate whenever event plugins are injected\nvar oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;\nEventPluginHub.injection.injectEventPluginOrder = function() {\n  oldInjectEventPluginOrder.apply(this, arguments);\n  buildSimulators();\n};\nvar oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;\nEventPluginHub.injection.injectEventPluginsByName = function() {\n  oldInjectEventPlugins.apply(this, arguments);\n  buildSimulators();\n};\n\nbuildSimulators();\n\n/**\n * Exports:\n *\n * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`\n * - ... (All keys from `EventConstants.topLevelTypes`)\n *\n * Note: Top level event types are a subset of the entire set of handler types\n * (which include a broader set of \"synthetic\" events). For example, onDragDone\n * is a synthetic event. Except when testing an event plugin or React's event\n * handling code specifically, you probably want to use ReactTestUtils.Simulate\n * to dispatch synthetic events.\n */\n\nfunction makeNativeSimulator(eventType) {\n  return function(domComponentOrNode, nativeEventData) {\n    var fakeNativeEvent = new Event(eventType);\n    assign(fakeNativeEvent, nativeEventData);\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\n      ReactTestUtils.simulateNativeEventOnDOMComponent(\n        eventType,\n        domComponentOrNode,\n        fakeNativeEvent\n      );\n    } else if (!!domComponentOrNode.tagName) {\n      // Will allow on actual dom nodes.\n      ReactTestUtils.simulateNativeEventOnNode(\n        eventType,\n        domComponentOrNode,\n        fakeNativeEvent\n      );\n    }\n  };\n}\n\nvar eventType;\nfor (eventType in topLevelTypes) {\n  // Event type is stored as 'topClick' - we transform that to 'click'\n  var convenienceName = eventType.indexOf('top') === 0 ?\n    eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;\n  /**\n   * @param {!Element || ReactDOMComponent} domComponentOrNode\n   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.\n   */\n  ReactTestUtils.SimulateNative[convenienceName] =\n    makeNativeSimulator(eventType);\n}\n\nmodule.exports = ReactTestUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactTestUtils.js\n ** module id = 57\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactTestUtils.js?");

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	eval("/*jshint unused:false */\n\n//    Teoria.js\n//    http://saebekassebil.github.com/teoria\n//    Copyright Jakob Miland (saebekassebil)\n//    Teoria may be freely distributed under the MIT License.\n\n(function teoriaScope() {\n  'use strict';\n\n  var teoria = {};\n\n  function add(note, interval) {\n    return [note[0] + interval[0], note[1] + interval[1]];\n  }\n\n  function sub(note, interval) {\n    return [note[0] - interval[0], note[1] - interval[1]];\n  }\n\n  function mul(note, interval) {\n    if (typeof interval === 'number')\n      return [note[0] * interval, note[1] * interval];\n    else\n      return [note[0] * interval[0], note[1] * interval[1]];\n  }\n\n  function sum(coord) {\n    return coord[0] + coord[1];\n  }\n\n  // Note coordinates [octave, fifth] relative to C\n  var notes = {\n    c: [0, 0],\n    d: [-1, 2],\n    e: [-2, 4],\n    f: [1, -1],\n    g: [0, 1],\n    a: [-1, 3],\n    b: [-2, 5],\n    h: [-2, 5]\n  };\n\n  var intervals = {\n    unison: [0, 0],\n    second: [3, -5],\n    third: [2, -3],\n    fourth: [1, -1],\n    fifth: [0, 1],\n    sixth: [3, -4],\n    seventh: [2, -2],\n    octave: [1, 0]\n  };\n\n  var intervalFromFifth = ['second', 'sixth', 'third', 'seventh', 'fourth',\n                           'unison', 'fifth'];\n\n  var intervalsIndex = ['unison', 'second', 'third', 'fourth', 'fifth',\n                        'sixth', 'seventh', 'octave', 'ninth', 'tenth',\n                        'eleventh', 'twelfth', 'thirteenth', 'fourteenth',\n                        'fifteenth'];\n\n  // linaer index to fifth = (2 * index + 1) % 7\n  var fifths = ['f', 'c', 'g', 'd', 'a', 'e', 'b'];\n  var accidentals = ['bb', 'b', '', '#', 'x'];\n\n  var sharp = [-4, 7];\n  var A4 = add(notes.a, [4, 0]);\n\n  var kDurations = {\n    '0.25': 'longa',\n    '0.5': 'breve',\n    '1': 'whole',\n    '2': 'half',\n    '4': 'quarter',\n    '8': 'eighth',\n    '16': 'sixteenth',\n    '32': 'thirty-second',\n    '64': 'sixty-fourth',\n    '128': 'hundred-twenty-eighth'\n  };\n\n  var kQualityLong = {\n    P: 'perfect',\n    M: 'major',\n    m: 'minor',\n    A: 'augmented',\n    AA: 'doubly augmented',\n    d: 'diminished',\n    dd: 'doubly diminished'\n  };\n\n  var kAlterations = {\n    perfect: ['dd', 'd', 'P', 'A', 'AA'],\n    minor: ['dd', 'd', 'm', 'M', 'A', 'AA']\n  };\n\n  var kSymbols = {\n    'min': ['m3', 'P5'],\n    'm': ['m3', 'P5'],\n    '-': ['m3', 'P5'],\n\n    'M': ['M3', 'P5'],\n    '': ['M3', 'P5'],\n\n    '+': ['M3', 'A5'],\n    'aug': ['M3', 'A5'],\n\n    'dim': ['m3', 'd5'],\n    'o': ['m3', 'd5'],\n\n    'maj': ['M3', 'P5', 'M7'],\n    'dom': ['M3', 'P5', 'm7'],\n    'ø': ['m3', 'd5', 'm7'],\n\n    '5': ['P5']\n  };\n\n  var kChordShort = {\n    'major': 'M',\n    'minor': 'm',\n    'augmented': 'aug',\n    'diminished': 'dim',\n    'half-diminished': '7b5',\n    'power': '5',\n    'dominant': '7'\n  };\n\n  var kStepNumber = {\n    'unison': 1,\n    'first': 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'octave': 8,\n    'ninth': 9,\n    'eleventh': 11,\n    'thirteenth': 13\n  };\n\n  // Adjusted Shearer syllables - Chromatic solfege system\n  // Some intervals are not provided for. These include:\n  // dd2 - Doubly diminished second\n  // dd3 - Doubly diminished third\n  // AA3 - Doubly augmented third\n  // dd6 - Doubly diminished sixth\n  // dd7 - Doubly diminished seventh\n  // AA7 - Doubly augmented seventh\n  var kIntervalSolfege = {\n    'dd1': 'daw',\n    'd1': 'de',\n    'P1': 'do',\n    'A1': 'di',\n    'AA1': 'dai',\n    'd2': 'raw',\n    'm2': 'ra',\n    'M2': 're',\n    'A2': 'ri',\n    'AA2': 'rai',\n    'd3': 'maw',\n    'm3': 'me',\n    'M3': 'mi',\n    'A3': 'mai',\n    'dd4': 'faw',\n    'd4': 'fe',\n    'P4': 'fa',\n    'A4': 'fi',\n    'AA4': 'fai',\n    'dd5': 'saw',\n    'd5': 'se',\n    'P5': 'so',\n    'A5': 'si',\n    'AA5': 'sai',\n    'd6': 'law',\n    'm6': 'le',\n    'M6': 'la',\n    'A6': 'li',\n    'AA6': 'lai',\n    'd7': 'taw',\n    'm7': 'te',\n    'M7': 'ti',\n    'A7': 'tai',\n    'dd8': 'daw',\n    'd8': 'de',\n    'P8': 'do',\n    'A8': 'di',\n    'AA8': 'dai'\n  };\n\n  function pad(str, ch, len) {\n    for (; len > 0; len--) {\n      str += ch;\n    }\n\n    return str;\n  }\n\n  // teoria.note namespace - All notes should be instantiated\n  // through this function.\n  teoria.note = function(name, duration) {\n    if (typeof name === 'string')\n      return teoria.note.fromString(name, duration);\n    else\n      return new TeoriaNote(name, duration);\n  };\n\n  teoria.note.fromKey = function(key) {\n    var octave = Math.floor((key - 4) / 12);\n    var distance = key - (octave * 12) - 4;\n    var name = fifths[(2 * Math.round(distance / 2) + 1) % 7];\n    var note = add(sub(notes[name], A4), [octave + 1, 0]);\n    var diff = (key - 49) - sum(mul(note, [12, 7]));\n\n    return teoria.note(diff ? add(note, mul(sharp, diff)) : note);\n  };\n\n  teoria.note.fromFrequency = function(fq, concertPitch) {\n    var key, cents, originalFq;\n    concertPitch = concertPitch || 440;\n\n    key = 49 + 12 * ((Math.log(fq) - Math.log(concertPitch)) / Math.log(2));\n    key = Math.round(key);\n    originalFq = concertPitch * Math.pow(2, (key - 49) / 12);\n    cents = 1200 * (Math.log(fq / originalFq) / Math.log(2));\n\n    return { note: teoria.note.fromKey(key), cents: cents };\n  };\n\n  teoria.note.fromMIDI = function(note) {\n    return teoria.note.fromKey(note - 20);\n  };\n\n  teoria.note.fromString = function(name, dur) {\n    var scientific = /^([a-h])(x|#|bb|b?)(-?\\d*)/i\n      , helmholtz = /^([a-h])(x|#|bb|b?)([,\\']*)$/i\n      , parser, noteName, octave, accidental, note, lower;\n\n    // Try scientific notation first\n    parser = name.match(scientific);\n    if (parser && name === parser[0] && parser[3].length) {\n      noteName = parser[1];\n      octave = +parser[3];\n    } else {\n      name = name.replace(/\\u2032/g, \"'\").replace(/\\u0375/g, ',');\n\n      parser = name.match(helmholtz);\n      if (!parser || name !== parser[0])\n        throw new Error('Invalid note format');\n\n      noteName = parser[1];\n      octave = parser[3];\n      lower = noteName === noteName.toLowerCase();\n\n      if (!octave.length)\n        octave = lower ? 3 : 2;\n      else if (octave.match(/^'+$/) && lower)\n        octave = 3 + octave.length;\n      else if (octave.match(/^,+$/) && !lower)\n        octave = 2 - octave.length;\n      else\n        throw new Error('Format must respect the Helmholtz format');\n    }\n\n    accidental = parser[2].length ? parser[2].toLowerCase() : '';\n    noteName = noteName.toLowerCase();\n\n    note = [notes[noteName][0], notes[noteName][1]];\n    note = add(note, [octave, 0]);\n    note = add(note, mul(sharp, accidentals.indexOf(accidental) - 2));\n\n    return new TeoriaNote(sub(note, A4), dur);\n  };\n\n  // teoria.chord namespace - All chords should be instantiated\n  // through this function.\n  teoria.chord = function(name, symbol) {\n    if (typeof name === 'string') {\n      var root, octave;\n      root = name.match(/^([a-h])(x|#|bb|b?)/i);\n      if (root && root[0]) {\n        octave = typeof symbol === 'number' ? symbol.toString(10) : '4';\n        return new TeoriaChord(teoria.note(root[0].toLowerCase() + octave),\n                              name.substr(root[0].length));\n      }\n    } else if (name instanceof TeoriaNote)\n      return new TeoriaChord(name, symbol);\n\n    throw new Error('Invalid Chord. Couldn\\'t find note name');\n  };\n\n  /**\n   * teoria.interval\n   *\n   * Sugar function for #from and #between methods, with the possibility to\n   * declare a interval by its string name: P8, M3, m7 etc.\n   */\n  teoria.interval = function(from, to) {\n    // Construct a TeoriaInterval object from string representation\n    if (typeof from === 'string')\n      return teoria.interval.toCoord(from);\n\n    if (typeof to === 'string' && from instanceof TeoriaNote)\n      return teoria.interval.from(from, teoria.interval.toCoord(to));\n\n    if (to instanceof TeoriaInterval && from instanceof TeoriaNote)\n      return teoria.interval.from(from, to);\n\n    if (to instanceof TeoriaNote && from instanceof TeoriaNote)\n      return teoria.interval.between(from, to);\n\n    throw new Error('Invalid parameters');\n  };\n\n  teoria.interval.toCoord = function(simple) {\n    var pattern = /^(AA|A|P|M|m|d|dd)(-?\\d+)$/\n      , parser, number, coord, quality, lower, octaves, base, type, alt, down;\n\n    parser = simple.match(pattern);\n    if (!parser)\n      throw new Error('Invalid simple format interval');\n\n    quality = parser[1];\n    number = +parser[2];\n    down = number < 0;\n    number = down ? -number : number;\n\n    lower = number > 8 ? ((number % 7) ? number % 7 : 7) : number;\n    octaves = (number - lower) / 7;\n\n    base = intervals[intervalsIndex[lower - 1]];\n    coord = add(base, [octaves, 0]);\n\n    type = base[0] <= 1 ? 'perfect' : 'minor';\n    if ((type === 'perfect' && (quality === 'M' || quality === 'm')) ||\n        (type === 'minor' && quality === 'P')) {\n      throw new Error('Invalid interval quality');\n    }\n\n    alt = kAlterations[type].indexOf(quality) - 2;\n    coord = add(coord, mul(sharp, alt));\n    coord = down ? mul(coord, -1) : coord;\n\n    return new TeoriaInterval(coord);\n  };\n\n  /**\n   * Returns the note from a given note (from), with a given interval (to)\n   */\n  teoria.interval.from = function(from, to) {\n    return new TeoriaNote(add(from.coord, to.coord));\n  };\n\n  /**\n   * Returns the interval between two instances of teoria.note\n   */\n  teoria.interval.between = function(from, to) {\n    return new TeoriaInterval(sub(to.coord, from.coord));\n  };\n\n  teoria.interval.invert = function(sInterval) {\n    return teoria.interval(sInterval).invert().toString();\n  };\n\n  // teoria.scale namespace - Scales are constructed through this function.\n  teoria.scale = function(tonic, scale) {\n    if (!(tonic instanceof TeoriaNote))\n      tonic = teoria.note(tonic);\n\n    return new TeoriaScale(tonic, scale);\n  };\n\n  teoria.scale.scales = {};\n\n  function TeoriaNote(coord, duration) {\n    duration = duration || {};\n\n    this.duration = { value: duration.value || 4, dots: duration.dots || 0 };\n    this.coord = coord;\n  }\n\n  TeoriaNote.prototype = {\n    octave: function() {\n      return this.coord[0] + A4[0] - notes[this.name()][0] +\n        this.accidentalValue() * 4;\n    },\n\n    name: function() {\n      return fifths[this.coord[1] + A4[1] - this.accidentalValue() * 7 + 1];\n    },\n\n    accidentalValue: function() {\n      return Math.round((this.coord[1] + A4[1] - 2) / 7);\n    },\n\n    accidental: function() {\n      return accidentals[this.accidentalValue() + 2];\n    },\n\n    /**\n     * Returns the key number of the note\n     */\n    key: function(white) {\n      if (white)\n        return this.coord[0] * 7 + this.coord[1] * 4 + 29;\n      else\n        return this.coord[0] * 12 + this.coord[1] * 7 + 49;\n    },\n\n    /**\n    * Returns a number ranging from 0-127 representing a MIDI note value\n    */\n    midi: function() {\n      return this.key() + 20;\n    },\n\n    /**\n     * Calculates and returns the frequency of the note.\n     * Optional concert pitch (def. 440)\n     */\n    fq: function(concertPitch) {\n      concertPitch = concertPitch || 440;\n\n      return concertPitch *\n        Math.pow(2, (this.coord[0] * 12 + this.coord[1] * 7) / 12);\n    },\n\n    /**\n     * Returns the pitch class index (chroma) of the note\n     */\n    chroma: function() {\n      var value = (sum(mul(this.coord, [12, 7])) - 3) % 12;\n\n      return (value < 0) ? value + 12 : value;\n    },\n\n    /**\n     * Sugar function for teoria.scale(note, scale)\n     */\n    scale: function(scale) {\n      return teoria.scale(this, scale);\n    },\n\n    /**\n     * Sugar function for teoria.interval(note, interval)\n     */\n    interval: function(interval) {\n      return teoria.interval(this, interval);\n    },\n\n    /**\n     * Transposes the note, returned by TeoriaNote#interval\n     */\n    transpose: function(interval) {\n      var note = teoria.interval(this, interval);\n      this.coord = note.coord;\n\n      return this;\n    },\n\n    /**\n     * Returns a TeoriaChord object with this note as root\n     */\n    chord: function(chord) {\n      chord = (chord in kChordShort) ? kChordShort[chord] : chord;\n\n      return new TeoriaChord(this, chord);\n    },\n\n    /**\n     * Returns the Helmholtz notation form of the note (fx C,, d' F# g#'')\n     */\n    helmholtz: function() {\n      var octave = this.octave();\n      var name = this.name();\n      name = octave < 3 ? name.toUpperCase() : name.toLowerCase();\n      var padchar = octave < 3 ? ',' : '\\'';\n      var padcount = octave < 2 ? 2 - octave : octave - 3;\n\n      return pad(name + this.accidental(), padchar, padcount);\n    },\n\n    /**\n     * Returns the scientific notation form of the note (fx E4, Bb3, C#7 etc.)\n     */\n    scientific: function() {\n      return this.name().toUpperCase() + this.accidental() + this.octave();\n    },\n\n    /**\n     * Returns notes that are enharmonic with this note.\n     */\n    enharmonics: function(oneaccidental) {\n      var key = this.key(), limit = oneaccidental ? 2 : 3;\n\n      return ['m3', 'm2', 'm-2', 'm-3']\n        .map(this.interval.bind(this))\n        .filter(function(note) {\n        var acc = note.accidentalValue();\n        var diff = key - (note.key() - acc);\n\n        if (diff < limit && diff > -limit) {\n          note.coord = add(note.coord, mul(sharp, diff - acc));\n          return true;\n        }\n      });\n    },\n\n    solfege: function(scale, showOctaves) {\n      if (!(scale instanceof TeoriaScale)) {\n        throw new Error('Invalid Scale');\n      }\n\n      var interval = scale.tonic.interval(this), solfege, stroke, count;\n      if (interval.direction() === 'down')\n        interval = interval.invert();\n\n      if (showOctaves) {\n        count = (this.key(true) - scale.tonic.key(true)) / 7;\n        count = (count >= 0) ? Math.floor(count) : -(Math.ceil(-count));\n        stroke = (count >= 0) ? '\\'' : ',';\n      }\n\n      solfege = kIntervalSolfege[interval.simple(true).toString()];\n      return (showOctaves) ? pad(solfege, stroke, Math.abs(count)) : solfege;\n    },\n\n    /**\n     * Returns the name of the duration value,\n     * such as 'whole', 'quarter', 'sixteenth' etc.\n     */\n    durationName: function() {\n      return kDurations[this.duration.value];\n    },\n\n    /**\n     * Returns the duration of the note (including dots)\n     * in seconds. The first argument is the tempo in beats\n     * per minute, the second is the beat unit (i.e. the\n     * lower numeral in a time signature).\n     */\n    durationInSeconds: function(bpm, beatUnit) {\n      var secs = (60 / bpm) / (this.duration.value / 4) / (beatUnit / 4);\n      return secs * 2 - secs / Math.pow(2, this.duration.dots);\n    },\n\n    /**\n     * Returns the degree of this note in a given scale\n     * If the scale doesn't contain this note, the scale degree\n     * will be returned as 0 allowing for expressions such as:\n     * if (teoria.note('a').scaleDegree(teoria.scale('a', 'major'))) {\n     *   ...\n     * }\n     *\n     * as 0 evaluates to false in boolean context\n     **/\n    scaleDegree: function(scale) {\n      var inter = scale.tonic.interval(this);\n\n      // If the direction is down, or we're dealing with an octave - invert it\n      if (inter.direction() === 'down' ||\n         (inter.coord[1] === 0 && inter.coord[0] !== 0)) {\n        inter = inter.invert();\n      }\n\n      inter = inter.simple(true).coord;\n\n      return scale.scale.reduce(function(index, current, i) {\n        var coord = teoria.interval(current).coord;\n        return coord[0] === inter[0] && coord[1] === inter[1] ? i + 1 : index;\n      }, 0);\n    },\n\n    /**\n     * Returns the name of the note, with an optional display of octave number\n     */\n    toString: function(dont) {\n      return this.name() + this.accidental() + (dont ? '' : this.octave());\n    }\n  };\n\n\n  function TeoriaInterval(coord) {\n    this.coord = coord;\n  }\n\n  TeoriaInterval.prototype = {\n    name: function() {\n      return intervalsIndex[this.number() - 1];\n    },\n\n    semitones: function() {\n      return sum(mul(this.coord, [12, 7]));\n    },\n\n    number: function() {\n      return Math.abs(this.value());\n    },\n\n    value: function() {\n      var without = sub(this.coord,\n        mul(sharp, Math.floor((this.coord[1] - 2) / 7) + 1))\n        , i, val;\n\n      i = intervalFromFifth[without[1] + 5];\n      val = kStepNumber[i] + (without[0] - intervals[i][0]) * 7;\n\n      return (val > 0) ? val : val - 2;\n    },\n\n    type: function() {\n      return intervals[this.base()][0] <= 1 ? 'perfect' : 'minor';\n    },\n\n    base: function() {\n      var fifth = sub(this.coord, mul(sharp, this.qualityValue()))[1], name;\n      fifth = this.value() > 0 ? fifth + 5 : -(fifth - 5) % 7;\n      fifth = fifth < 0 ? intervalFromFifth.length + fifth : fifth;\n\n      name = intervalFromFifth[fifth];\n      if (name === 'unison' && this.number() >= 8)\n        name = 'octave';\n\n      return name;\n    },\n\n    direction: function(dir) {\n      if (dir) {\n        var is = this.value() >= 1 ? 'up' : 'down';\n        if (is !== dir)\n          this.coord = mul(this.coord, -1);\n\n        return this;\n      }\n      else\n        return this.value() >= 1 ? 'up' : 'down';\n    },\n\n    simple: function(ignore) {\n      // Get the (upwards) base interval (with quality)\n      var simple = intervals[this.base()];\n      simple = add(simple, mul(sharp, this.qualityValue()));\n\n      // Turn it around if necessary\n      if (!ignore)\n        simple = this.direction() === 'down' ? mul(simple, -1) : simple;\n\n      return new TeoriaInterval(simple);\n    },\n\n    isCompound: function() {\n      return this.number() > 8;\n    },\n\n    octaves: function() {\n      var without, octaves;\n\n      if (this.direction() === 'up') {\n        without = sub(this.coord, mul(sharp, this.qualityValue()));\n        octaves = without[0] - intervals[this.base()][0];\n      } else {\n        without = sub(this.coord, mul(sharp, -this.qualityValue()));\n        octaves = -(without[0] + intervals[this.base()][0]);\n      }\n\n      return octaves;\n    },\n\n    invert: function() {\n      var i = this.base();\n      var qual = this.qualityValue();\n      var acc = this.type() === 'minor' ? -(qual - 1) : -qual;\n      var coord = intervals[intervalsIndex[9 - kStepNumber[i] - 1]];\n      coord = add(coord, mul(sharp, acc));\n\n      return new TeoriaInterval(coord);\n    },\n\n    quality: function(lng) {\n      var quality = kAlterations[this.type()][this.qualityValue() + 2];\n\n      return lng ? kQualityLong[quality] : quality;\n    },\n\n    qualityValue: function() {\n      if (this.direction() === 'down')\n        return Math.floor((-this.coord[1] - 2) / 7) + 1;\n      else\n        return Math.floor((this.coord[1] - 2) / 7) + 1;\n    },\n\n    equal: function(interval) {\n        return this.coord[0] === interval.coord[0] &&\n            this.coord[1] === interval.coord[1];\n    },\n\n    greater: function(interval) {\n      var semi = this.semitones();\n      var isemi = interval.semitones();\n\n      // If equal in absolute size, measure which interval is bigger\n      // For example P4 is bigger than A3\n      return (semi === isemi) ?\n        (this.number() > interval.number()) : (semi > isemi);\n    },\n\n    smaller: function(interval) {\n      return !this.equal(interval) && !this.greater(interval);\n    },\n\n    add: function(interval) {\n      return new TeoriaInterval(add(this.coord, interval.coord));\n    },\n\n    toString: function(ignore) {\n      // If given true, return the positive value\n      var number = ignore ? this.number() : this.value();\n\n      return this.quality() + number;\n    }\n  };\n\n\n  function TeoriaChord(root, name) {\n    name = name || '';\n    this.name = root.name().toUpperCase() + root.accidental() + name;\n    this.symbol = name;\n    this.root = root;\n    this.intervals = [];\n    this._voicing = [];\n\n    var i, length, c, shortQ, parsing = 'quality', additionals = [],\n        notes = ['P1', 'M3', 'P5', 'm7', 'M9', 'P11', 'M13'],\n        chordLength = 2, bass, symbol;\n\n    function setChord(intervals) {\n      for (var n = 0, chordl = intervals.length; n < chordl; n++) {\n        notes[n + 1] = intervals[n];\n      }\n\n      chordLength = intervals.length;\n    }\n\n    // Remove whitespace, commas and parentheses\n    name = name.replace(/[,\\s\\(\\)]/g, '');\n    bass = name.split('/');\n    if (bass.length === 2) {\n      name = bass[0];\n      bass = bass[1];\n    } else {\n      bass = null;\n    }\n\n    for (i = 0, length = name.length; i < length; i++) {\n      if (!(c = name[i])) {\n        break;\n      }\n\n      switch (parsing) {\n        // Parses for the \"base\" chord, either a triad or a seventh chord\n        case 'quality':\n          shortQ = ((i + 3) <= length) ? name.substr(i, 3).toLowerCase() : null;\n          symbol = (shortQ in kSymbols) ?\n            shortQ : (c in kSymbols) ? c : '';\n\n          setChord(kSymbols[symbol]);\n\n          i += symbol.length - 1;\n          parsing = 'extension';\n          break;\n\n        // Parses for the top interval or a pure sixth\n        case 'extension':\n          c = (c === '1' && name[i + 1]) ?\n            parseFloat(name.substr(i, 2)) : parseFloat(c);\n\n          if (!isNaN(c) && c !== 6) {\n            chordLength = (c - 1) / 2;\n\n            if (chordLength !== Math.round(chordLength)) {\n              throw new Error('Invalid interval extension: ' + c.toString(10));\n            }\n\n            // Special care for diminished chords\n            if (symbol === 'o' || symbol === 'dim') {\n              notes[3] = 'd7';\n            }\n\n            i += String(c).length - 1;\n          } else if (c === 6) {\n            notes[3] = 'M6';\n            chordLength = (chordLength < 3) ? 3 : chordLength;\n          } else {\n            i -= 1;\n          }\n\n          parsing = 'alterations';\n          break;\n\n        // Parses for possible alterations of intervals (#5, b9, etc.)\n        case 'alterations':\n          var alterations = name.substr(i).split(/(#|b|add|maj|sus|M)/i),\n              next, flat = false, sharp = false;\n\n          if (alterations.length === 1) {\n            throw new Error('Invalid alterations');\n          } else if (alterations[0].length !== 0) {\n            throw new Error('Invalid token: \\'' + alterations[0] + '\\'');\n          }\n\n          for (var a = 1, aLength = alterations.length; a < aLength; a++) {\n            next = alterations[a + 1];\n\n            switch (alterations[a]) {\n            case 'M':\n            case 'Maj':\n            case 'maj':\n              chordLength = (chordLength < 3) ? 3 : chordLength;\n\n              if (next === '7') { // Ignore the seventh, that is already implied\n                a++;\n              }\n\n              notes[3] = 'M7';\n              break;\n\n            case 'Sus':\n            case 'sus':\n              var type = 'P4';\n              if (next === '2' || next === '4') {\n                a++;\n\n                if (next === '2') {\n                  type = 'M2';\n                }\n              }\n\n              notes[1] = type; // Replace third with M2 or P4\n              break;\n\n            case 'Add':\n            case 'add':\n              if (next && !isNaN(+next)) {\n                if (next === '9') {\n                  additionals.push('M9');\n                } else if (next === '11') {\n                  additionals.push('P11');\n                } else if (next === '13') {\n                  additionals.push('M13');\n                }\n\n                a += next.length;\n              }\n              break;\n\n            case 'b':\n              flat = true;\n              break;\n\n            case '#':\n              sharp = true;\n              break;\n\n            default:\n              if (alterations[a].length === 0) {\n                break;\n              }\n\n              var token = +alterations[a], quality, intPos;\n              if (isNaN(token) ||\n                  String(token).length !== alterations[a].length) {\n                throw new Error('Invalid token: \\'' + alterations[a] + '\\'');\n              }\n\n              if (token === 6) {\n                if (sharp) {\n                  notes[3] = 'A6';\n                } else if (flat) {\n                  notes[3] = 'm6';\n                } else {\n                  notes[3] = 'M6';\n                }\n\n                chordLength = (chordLength < 3) ? 3 : chordLength;\n                continue;\n              }\n\n              // Calculate the position in the 'note' array\n              intPos = (token - 1) / 2;\n              if (chordLength < intPos) {\n                chordLength = intPos;\n              }\n\n              if (token < 5 || token === 7 ||\n                  intPos !== Math.round(intPos)) {\n                throw new Error('Invalid interval alteration: ' + token);\n              }\n\n              quality = notes[intPos][0];\n\n              // Alterate the quality of the interval according the accidentals\n              if (sharp) {\n                if (quality === 'd') {\n                  quality = 'm';\n                } else if (quality === 'm') {\n                  quality = 'M';\n                } else if (quality === 'M' || quality === 'P') {\n                  quality = 'A';\n                }\n              } else if (flat) {\n                if (quality === 'A') {\n                  quality = 'M';\n                } else if (quality === 'M') {\n                  quality = 'm';\n                } else if (quality === 'm' || quality === 'P') {\n                  quality = 'd';\n                }\n              }\n\n              sharp = flat = false;\n              notes[intPos] = quality + token;\n              break;\n            }\n          }\n\n          parsing = 'ended';\n          break;\n      }\n\n      if (parsing === 'ended') {\n        break;\n      }\n    }\n\n    // Sixth-nine chord is an exception to the bass rule (e.g. C6/9)\n    if (bass && bass === '9') {\n      additionals.push('M9');\n      bass = null;\n    }\n\n    this.intervals = notes\n      .slice(0, chordLength + 1)\n      .concat(additionals)\n      .map(function(i) { return teoria.interval(i); });\n\n    for (i = 0, length = this.intervals.length; i < length; i++) {\n      this._voicing[i] = this.intervals[i];\n    }\n\n    if (bass) {\n      var intervals = this.intervals, bassInterval, note;\n      // Make sure the bass is atop of the root note\n      note = teoria.note(bass + (root.octave() + 1));\n\n      bassInterval = teoria.interval.between(root, note);\n      bass = bassInterval.simple();\n\n      bassInterval = bassInterval.invert();\n      bassInterval.direction('down');\n\n      this._voicing = [bassInterval];\n      for (i = 0; i < length; i++) {\n        if (intervals[i].simple().equal(bass))\n          continue;\n\n        this._voicing.push(intervals[i]);\n      }\n    }\n  }\n\n  TeoriaChord.prototype = {\n    notes: function() {\n      var voicing = this.voicing(), notes = [];\n\n      for (var i = 0, length = voicing.length; i < length; i++) {\n        notes.push(teoria.interval.from(this.root, voicing[i]));\n      }\n\n      return notes;\n    },\n\n    voicing: function(voicing) {\n      // Get the voicing\n      if (!voicing) {\n        return this._voicing;\n      }\n\n      // Set the voicing\n      this._voicing = [];\n      for (var i = 0, length = voicing.length; i < length; i++) {\n        this._voicing[i] = teoria.interval(voicing[i]);\n      }\n\n      return this;\n    },\n\n    resetVoicing: function() {\n      this._voicing = this.intervals;\n    },\n\n    dominant: function(additional) {\n      additional = additional || '';\n      return new TeoriaChord(this.root.interval('P5'), additional);\n    },\n\n    subdominant: function(additional) {\n      additional = additional || '';\n      return new TeoriaChord(this.root.interval('P4'), additional);\n    },\n\n    parallel: function(additional) {\n      additional = additional || '';\n      var quality = this.quality();\n\n      if (this.chordType() !== 'triad' || quality === 'diminished' ||\n          quality === 'augmented') {\n        throw new Error('Only major/minor triads have parallel chords');\n      }\n\n      if (quality === 'major') {\n        return new TeoriaChord(this.root.interval('m3', 'down'), 'm');\n      } else {\n        return new TeoriaChord(this.root.interval('m3', 'up'));\n      }\n    },\n\n    quality: function() {\n      var third, fifth, seventh, intervals = this.intervals;\n\n      for (var i = 0, length = intervals.length; i < length; i++) {\n        if (intervals[i].number() === 3) {\n          third = intervals[i];\n        } else if (intervals[i].number() === 5) {\n          fifth = intervals[i];\n        } else if (intervals[i].number() === 7) {\n          seventh = intervals[i];\n        }\n      }\n\n      if (!third) {\n        return;\n      }\n\n      third = (third.direction() === 'down') ? third.invert() : third;\n      third = third.simple().toString();\n\n      if (fifth) {\n        fifth = (fifth.direction === 'down') ? fifth.invert() : fifth;\n        fifth = fifth.simple().toString();\n      }\n\n      if (seventh) {\n        seventh = (seventh.direction === 'down') ? seventh.invert() : seventh;\n        seventh = seventh.simple().toString();\n      }\n\n      if (third === 'M3') {\n        if (fifth === 'A5') {\n          return 'augmented';\n        } else if (fifth === 'P5') {\n          return (seventh === 'm7') ? 'dominant' : 'major';\n        }\n\n        return 'major';\n      } else if (third === 'm3') {\n        if (fifth === 'P5') {\n          return 'minor';\n        } else if (fifth === 'd5') {\n          return (seventh === 'm7') ? 'half-diminished' : 'diminished';\n        }\n\n        return 'minor';\n      }\n    },\n\n    chordType: function() { // In need of better name\n      var length = this.intervals.length, interval, has, invert, i, name;\n\n      if (length === 2) {\n        return 'dyad';\n      } else if (length === 3) {\n        has = {first: false, third: false, fifth: false};\n        for (i = 0; i < length; i++) {\n          interval = this.intervals[i];\n          invert = interval.invert();\n          if (interval.base() in has) {\n            has[interval.base()] = true;\n          } else if (invert.base() in has) {\n            has[invert.base()] = true;\n          }\n        }\n\n        name = (has.first && has.third && has.fifth) ? 'triad' : 'trichord';\n      } else if (length === 4) {\n        has = {first: false, third: false, fifth: false, seventh: false};\n        for (i = 0; i < length; i++) {\n          interval = this.intervals[i];\n          invert = interval.invert();\n          if (interval.base() in has) {\n            has[interval.base()] = true;\n          } else if (invert.base() in has) {\n            has[invert.base()] = true;\n          }\n        }\n\n        if (has.first && has.third && has.fifth && has.seventh) {\n          name = 'tetrad';\n        }\n      }\n\n      return name || 'unknown';\n    },\n\n    get: function(interval) {\n      if (typeof interval === 'string' && interval in kStepNumber) {\n        var intervals = this.intervals, i, length;\n\n        interval = kStepNumber[interval];\n        for (i = 0, length = intervals.length; i < length; i++) {\n          if (intervals[i].number() === interval) {\n            return teoria.interval.from(this.root, intervals[i]);\n          }\n        }\n\n        return null;\n      } else {\n        throw new Error('Invalid interval name');\n      }\n    },\n\n    interval: function(interval) {\n      return new TeoriaChord(this.root.interval(interval), this.symbol);\n    },\n\n    transpose: function(interval) {\n      this.root.transpose(interval);\n      this.name = this.root.name().toUpperCase() +\n                  this.root.accidental() + this.symbol;\n\n      return this;\n    },\n\n    toString: function() {\n      return this.name;\n    }\n  };\n\n\n  function TeoriaScale(tonic, scale) {\n    var scaleName, i;\n\n    if (!(tonic instanceof TeoriaNote)) {\n      throw new Error('Invalid Tonic');\n    }\n\n    if (typeof scale === 'string') {\n      scaleName = scale;\n      scale = teoria.scale.scales[scale];\n      if (!scale)\n        throw new Error('Invalid Scale');\n    } else {\n      for (i in teoria.scale.scales) {\n        if (teoria.scale.scales.hasOwnProperty(i)) {\n          if (teoria.scale.scales[i].toString() === scale.toString()) {\n            scaleName = i;\n            break;\n          }\n        }\n      }\n    }\n\n    this.name = scaleName;\n    this.tonic = tonic;\n    this.scale = scale;\n  }\n\n  TeoriaScale.prototype = {\n    notes: function() {\n      var notes = [];\n\n      for (var i = 0, length = this.scale.length; i < length; i++) {\n        notes.push(teoria.interval(this.tonic, this.scale[i]));\n      }\n\n      return notes;\n    },\n\n    simple: function() {\n      return this.notes().map(function(n) { return n.toString(true); });\n    },\n\n    type: function() {\n      var length = this.scale.length - 2;\n      if (length < 8) {\n        return ['di', 'tri', 'tetra', 'penta', 'hexa', 'hepta', 'octa'][length] +\n          'tonic';\n      }\n    },\n\n    get: function(i) {\n      i = (typeof i === 'string' && i in kStepNumber) ? kStepNumber[i] : i;\n\n      return this.tonic.interval(this.scale[i - 1]);\n    },\n\n    solfege: function(index, showOctaves) {\n      if (index)\n        return this.get(index).solfege(this, showOctaves);\n\n      return this.notes().map(function(n) {\n        return n.solfege(this, showOctaves);\n      });\n    },\n\n    interval: function(interval) {\n      return new TeoriaScale(this.tonic.interval(interval), this.scale);\n    },\n\n    transpose: function(interval) {\n      var scale = this.interval(interval);\n      this.scale = scale.scale;\n      this.tonic = scale.tonic;\n\n      return this;\n    }\n  };\n\n\n  teoria.scale.scales.ionian = teoria.scale.scales.major =\n    ['P1', 'M2', 'M3', 'P4', 'P5', 'M6', 'M7'];\n  teoria.scale.scales.dorian = ['P1', 'M2', 'm3', 'P4', 'P5', 'M6', 'm7'];\n  teoria.scale.scales.phrygian = ['P1', 'm2', 'm3', 'P4', 'P5', 'm6', 'm7'];\n  teoria.scale.scales.lydian = ['P1', 'M2', 'M3', 'A4', 'P5', 'M6', 'M7'];\n  teoria.scale.scales.mixolydian = ['P1', 'M2', 'M3', 'P4', 'P5', 'M6', 'm7'];\n  teoria.scale.scales.aeolian = teoria.scale.scales.minor =\n    ['P1', 'M2', 'm3', 'P4', 'P5', 'm6', 'm7'];\n  teoria.scale.scales.locrian = ['P1', 'm2', 'm3', 'P4', 'd5', 'm6', 'm7'];\n  teoria.scale.scales.majorpentatonic = ['P1', 'M2', 'M3', 'P5', 'M6'];\n  teoria.scale.scales.minorpentatonic = ['P1', 'm3', 'P4', 'P5', 'm7'];\n  teoria.scale.scales.chromatic = teoria.scale.scales.harmonicchromatic =\n    ['P1', 'm2', 'M2', 'm3', 'M3', 'P4', 'A4', 'P5', 'm6', 'M6', 'm7', 'M7'];\n\n\n  teoria.TeoriaNote = TeoriaNote;\n  teoria.TeoriaChord = TeoriaChord;\n  teoria.TeoriaScale = TeoriaScale;\n  teoria.TeoriaInterval = TeoriaInterval;\n\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports)\n      exports = module.exports = teoria;\n\n    exports.teoria = teoria;\n  } else if (typeof this !== 'undefined')\n    this.teoria = teoria;\n  else if (typeof window !== 'undefined')\n    window.teoria = teoria;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/teoria/dist/teoria.js\n ** module id = 58\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/teoria/dist/teoria.js?");

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	eval("// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 59\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///(webpack)/~/node-libs-browser/~/process/browser.js?");

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventConstants\n */\n\n'use strict';\n\nvar keyMirror = __webpack_require__(71);\n\nvar PropagationPhases = keyMirror({bubbled: null, captured: null});\n\n/**\n * Types of raw signals from the browser caught at the top level.\n */\nvar topLevelTypes = keyMirror({\n  topBlur: null,\n  topChange: null,\n  topClick: null,\n  topCompositionEnd: null,\n  topCompositionStart: null,\n  topCompositionUpdate: null,\n  topContextMenu: null,\n  topCopy: null,\n  topCut: null,\n  topDoubleClick: null,\n  topDrag: null,\n  topDragEnd: null,\n  topDragEnter: null,\n  topDragExit: null,\n  topDragLeave: null,\n  topDragOver: null,\n  topDragStart: null,\n  topDrop: null,\n  topError: null,\n  topFocus: null,\n  topInput: null,\n  topKeyDown: null,\n  topKeyPress: null,\n  topKeyUp: null,\n  topLoad: null,\n  topMouseDown: null,\n  topMouseMove: null,\n  topMouseOut: null,\n  topMouseOver: null,\n  topMouseUp: null,\n  topPaste: null,\n  topReset: null,\n  topScroll: null,\n  topSelectionChange: null,\n  topSubmit: null,\n  topTextInput: null,\n  topTouchCancel: null,\n  topTouchEnd: null,\n  topTouchMove: null,\n  topTouchStart: null,\n  topWheel: null\n});\n\nvar EventConstants = {\n  topLevelTypes: topLevelTypes,\n  PropagationPhases: PropagationPhases\n};\n\nmodule.exports = EventConstants;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/EventConstants.js\n ** module id = 60\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/EventConstants.js?");

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/invariant.js\n ** module id = 61\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/invariant.js?");

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar invariant = __webpack_require__(61);\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function(copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function(a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function(a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fiveArgumentPooler = function(a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function(instance) {\n  var Klass = this;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.'\n  ) : invariant(instance instanceof Klass));\n  if (instance.destructor) {\n    instance.destructor();\n  }\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances (optional).\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function(CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/PooledClass.js\n ** module id = 62\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/PooledClass.js?");

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactElement = __webpack_require__(32);\nvar ReactFragment = __webpack_require__(50);\nvar ReactInstanceHandles = __webpack_require__(37);\n\nvar getIteratorFn = __webpack_require__(75);\nvar invariant = __webpack_require__(61);\nvar warning = __webpack_require__(64);\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} key Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(\n    userProvidedKeyEscapeRegex,\n    userProvidedKeyEscaper\n  );\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!number} indexSoFar Number of children encountered until this point.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  indexSoFar,\n  callback,\n  traverseContext\n) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null ||\n      type === 'string' ||\n      type === 'number' ||\n      ReactElement.isValidElement(children)) {\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n      indexSoFar\n    );\n    return 1;\n  }\n\n  var child, nextName, nextIndex;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = (\n        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n        getComponentKey(child, i)\n      );\n      nextIndex = indexSoFar + subtreeCount;\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        nextIndex,\n        callback,\n        traverseContext\n      );\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            getComponentKey(child, ii++)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      } else {\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnAboutMaps,\n            'Using Maps as children is not yet fully supported. It is an ' +\n            'experimental feature that might be removed. Convert it to a ' +\n            'sequence / iterable of keyed ReactElements instead.'\n          ) : null);\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = (\n              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +\n              getComponentKey(child, 0)\n            );\n            nextIndex = indexSoFar + subtreeCount;\n            subtreeCount += traverseAllChildrenImpl(\n              child,\n              nextName,\n              nextIndex,\n              callback,\n              traverseContext\n            );\n          }\n        }\n      }\n    } else if (type === 'object') {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        children.nodeType !== 1,\n        'traverseAllChildren(...): Encountered an invalid child; DOM ' +\n        'elements are not valid children of React components.'\n      ) : invariant(children.nodeType !== 1));\n      var fragment = ReactFragment.extract(children);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          child = fragment[key];\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            wrapUserProvidedKey(key) + SUBSEPARATOR +\n            getComponentKey(child, 0)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/traverseAllChildren.js\n ** module id = 63\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/traverseAllChildren.js?");

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n\"use strict\";\n\nvar emptyFunction = __webpack_require__(117);\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});\n      console.warn(message);\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/warning.js\n ** module id = 64\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/warning.js?");

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdateQueue\n */\n\n'use strict';\n\nvar ReactLifeCycle = __webpack_require__(68);\nvar ReactCurrentOwner = __webpack_require__(31);\nvar ReactElement = __webpack_require__(32);\nvar ReactInstanceMap = __webpack_require__(67);\nvar ReactUpdates = __webpack_require__(52);\n\nvar assign = __webpack_require__(43);\nvar invariant = __webpack_require__(61);\nvar warning = __webpack_require__(64);\n\nfunction enqueueUpdate(internalInstance) {\n  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {\n    // If we're in a componentWillMount handler, don't enqueue a rerender\n    // because ReactUpdates assumes we're in a browser context (which is\n    // wrong for server rendering) and we're about to do a render anyway.\n    // See bug in #1740.\n    ReactUpdates.enqueueUpdate(internalInstance);\n  }\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactCurrentOwner.current == null,\n    '%s(...): Cannot update during an existing state transition ' +\n    '(such as within `render`). Render methods should be a pure function ' +\n    'of props and state.',\n    callerName\n  ) : invariant(ReactCurrentOwner.current == null));\n\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !callerName,\n        '%s(...): Can only update a mounted or mounting component. ' +\n        'This usually means you called %s() on an unmounted ' +\n        'component. This is a no-op.',\n        callerName,\n        callerName\n      ) : null);\n    }\n    return null;\n  }\n\n  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {\n    return null;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function(publicInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance ||\n        internalInstance === ReactLifeCycle.currentlyMountingInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function(internalInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldUpdateComponent`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'forceUpdate'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function(publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function(publicInstance, partialState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue =\n      internalInstance._pendingStateQueue ||\n      (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialProps Subset of the next props.\n   * @internal\n   */\n  enqueueSetProps: function(publicInstance, partialProps) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'setProps(...): You called `setProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    var props = assign({}, element.props, partialProps);\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} props New props.\n   * @internal\n   */\n  enqueueReplaceProps: function(publicInstance, props) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'replaceProps(...): You called `replaceProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function(internalInstance, newElement) {\n    internalInstance._pendingElement = newElement;\n    enqueueUpdate(internalInstance);\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactUpdateQueue.js\n ** module id = 65\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactUpdateQueue.js?");

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactErrorUtils\n * @typechecks\n */\n\n\"use strict\";\n\nvar ReactErrorUtils = {\n  /**\n   * Creates a guarded version of a function. This is supposed to make debugging\n   * of event handlers easier. To aid debugging with the browser's debugger,\n   * this currently simply returns the original function.\n   *\n   * @param {function} func Function to be executed\n   * @param {string} name The name of the guard\n   * @return {function}\n   */\n  guard: function(func, name) {\n    return func;\n  }\n};\n\nmodule.exports = ReactErrorUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactErrorUtils.js\n ** module id = 66\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactErrorUtils.js?");

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function(key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function(key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function(key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function(key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactInstanceMap.js\n ** module id = 67\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactInstanceMap.js?");

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLifeCycle\n */\n\n'use strict';\n\n/**\n * This module manages the bookkeeping when a component is in the process\n * of being mounted or being unmounted. This is used as a way to enforce\n * invariants (or warnings) when it is not recommended to call\n * setState/forceUpdate.\n *\n * currentlyMountingInstance: During the construction phase, it is not possible\n * to trigger an update since the instance is not fully mounted yet. However, we\n * currently allow this as a convenience for mutating the initial state.\n *\n * currentlyUnmountingInstance: During the unmounting phase, the instance is\n * still mounted and can therefore schedule an update. However, this is not\n * recommended and probably an error since it's about to be unmounted.\n * Therefore we still want to trigger in an error for that case.\n */\n\nvar ReactLifeCycle = {\n  currentlyMountingInstance: null,\n  currentlyUnmountingInstance: null\n};\n\nmodule.exports = ReactLifeCycle;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactLifeCycle.js\n ** module id = 68\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactLifeCycle.js?");

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocations\n */\n\n'use strict';\n\nvar keyMirror = __webpack_require__(71);\n\nvar ReactPropTypeLocations = keyMirror({\n  prop: null,\n  context: null,\n  childContext: null\n});\n\nmodule.exports = ReactPropTypeLocations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactPropTypeLocations.js\n ** module id = 69\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactPropTypeLocations.js?");

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocationNames\n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactPropTypeLocationNames.js\n ** module id = 70\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactPropTypeLocationNames.js?");

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyMirror\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = __webpack_require__(61);\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    obj instanceof Object && !Array.isArray(obj),\n    'keyMirror(...): Argument must be an object.'\n  ) : invariant(obj instanceof Object && !Array.isArray(obj)));\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/keyMirror.js\n ** module id = 71\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/keyMirror.js?");

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyOf\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without loosing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function(oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\n\nmodule.exports = keyOf;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/keyOf.js\n ** module id = 72\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/keyOf.js?");

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyObject\n */\n\n\"use strict\";\n\nvar emptyObject = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/emptyObject.js\n ** module id = 73\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/emptyObject.js?");

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = __webpack_require__(43);\nvar invariant = __webpack_require__(61);\n\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function(componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function(componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function(componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  },\n  // Temporary hack since we expect DOM refs to behave like composites,\n  // for this release.\n  injectAutoWrapper: function(wrapperFactory) {\n    autoGenerateWrapperClass = wrapperFactory;\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    genericComponentClass,\n    'There is no registered component for the tag %s',\n    element.type\n  ) : invariant(genericComponentClass));\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\n\nmodule.exports = ReactNativeComponent;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactNativeComponent.js\n ** module id = 74\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactNativeComponent.js?");

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * @typechecks static-only\n */\n\n'use strict';\n\n/* global Symbol */\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (\n    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])\n  );\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getIteratorFn.js\n ** module id = 75\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getIteratorFn.js?");

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule mapObject\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object from the results. The `callback` is\n * invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `mapObject` will not be visited\n * by `callback`. If the values of existing properties are changed, the value\n * passed to `callback` will be the value at the time `mapObject` visits them.\n * Properties that are deleted before being visited are not visited.\n *\n * @grep function objectMap()\n * @grep function objMap()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */\nfunction mapObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n  var result = {};\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      result[name] = callback.call(context, object[name], name, object);\n    }\n  }\n  return result;\n}\n\nmodule.exports = mapObject;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/mapObject.js\n ** module id = 76\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/mapObject.js?");

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = __webpack_require__(108);\n\nvar quoteAttributeValueForBrowser = __webpack_require__(135);\nvar warning = __webpack_require__(64);\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null ||\n    (DOMProperty.hasBooleanValue[name] && !value) ||\n    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||\n    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||\n    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function(name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] ||\n        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = (\n      DOMProperty.isCustomAttribute(lowerCasedName) ?\n        lowerCasedName :\n      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?\n        DOMProperty.getPossibleStandardName[lowerCasedName] :\n        null\n    );\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      standardName == null,\n      'Unknown DOM property %s. Did you mean %s?',\n      name,\n      standardName\n    ) : null);\n\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function(id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +\n      quoteAttributeValueForBrowser(id);\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function(name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      if (DOMProperty.hasBooleanValue[name] ||\n          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {\n        return attributeName;\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function(node, name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== ('' + value)) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(name);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function(node, name) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(\n          node.nodeName,\n          propName\n        );\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/DOMPropertyOperations.js\n ** module id = 77\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/DOMPropertyOperations.js?");

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar ReactDOMIDOperations = __webpack_require__(93);\nvar ReactMount = __webpack_require__(38);\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates:\n    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkupByID:\n    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function(rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactComponentBrowserEnvironment.js\n ** module id = 78\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactComponentBrowserEnvironment.js?");

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponent\n * @typechecks static-only\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar CSSPropertyOperations = __webpack_require__(136);\nvar DOMProperty = __webpack_require__(108);\nvar DOMPropertyOperations = __webpack_require__(77);\nvar ReactBrowserEventEmitter = __webpack_require__(109);\nvar ReactComponentBrowserEnvironment =\n  __webpack_require__(78);\nvar ReactMount = __webpack_require__(38);\nvar ReactMultiChild = __webpack_require__(137);\nvar ReactPerf = __webpack_require__(39);\n\nvar assign = __webpack_require__(43);\nvar escapeTextContentForBrowser = __webpack_require__(80);\nvar invariant = __webpack_require__(61);\nvar isEventSupported = __webpack_require__(138);\nvar keyOf = __webpack_require__(72);\nvar warning = __webpack_require__(64);\n\nvar deleteListener = ReactBrowserEventEmitter.deleteListener;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = {'string': true, 'number': true};\n\nvar STYLE = keyOf({style: null});\n\nvar ELEMENT_NODE_TYPE = 1;\n\n/**\n * Optionally injectable operations for mutating the DOM\n */\nvar BackendIDOperations = null;\n\n/**\n * @param {?object} props\n */\nfunction assertValidProps(props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (props.dangerouslySetInnerHTML != null) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.children == null,\n      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'\n    ) : invariant(props.children == null));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.dangerouslySetInnerHTML.__html != null,\n      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n      'Please visit http://fb.me/react-invariant-dangerously-set-inner-html ' +\n      'for more information.'\n    ) : invariant(props.dangerouslySetInnerHTML.__html != null));\n  }\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      props.innerHTML == null,\n      'Directly setting property `innerHTML` is not permitted. ' +\n      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'\n    ) : null);\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      !props.contentEditable || props.children == null,\n      'A component is `contentEditable` and contains `children` managed by ' +\n      'React. It is now your responsibility to guarantee that none of ' +\n      'those nodes are unexpectedly modified or duplicated. This is ' +\n      'probably not intentional.'\n    ) : null);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    props.style == null || typeof props.style === 'object',\n    'The `style` prop expects a mapping from style properties to values, ' +\n    'not a string. For example, style={{marginRight: spacing + \\'em\\'}} when ' +\n    'using JSX.'\n  ) : invariant(props.style == null || typeof props.style === 'object'));\n}\n\nfunction putListener(id, registrationName, listener, transaction) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      registrationName !== 'onScroll' || isEventSupported('scroll', true),\n      'This browser doesn\\'t support the `onScroll` event'\n    ) : null);\n  }\n  var container = ReactMount.findReactContainerForID(id);\n  if (container) {\n    var doc = container.nodeType === ELEMENT_NODE_TYPE ?\n      container.ownerDocument :\n      container;\n    listenTo(registrationName, doc);\n  }\n  transaction.getPutListenerQueue().enqueuePutListener(\n    id,\n    registrationName,\n    listener\n  );\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special cased tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\n// We accept any tag to be rendered but since this gets injected into abitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));\n    validatedTagCache[tag] = true;\n  }\n}\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(tag) {\n  validateDangerousTag(tag);\n  this._tag = tag;\n  this._renderedChildren = null;\n  this._previousStyleCopy = null;\n  this._rootNodeID = null;\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  construct: function(element) {\n    this._currentElement = element;\n  },\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {string} rootID The root DOM ID for this node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} The computed markup.\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    assertValidProps(this._currentElement.props);\n    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';\n    return (\n      this._createOpenTagMarkupAndPutListeners(transaction) +\n      this._createContentMarkup(transaction, context) +\n      closeTag\n    );\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function(transaction) {\n    var props = this._currentElement.props;\n    var ret = '<' + this._tag;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, propValue, transaction);\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            propValue = this._previousStyleCopy = assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);\n        }\n        var markup =\n          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret + '>';\n    }\n\n    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);\n    return ret + ' ' + markupForID + '>';\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function(transaction, context) {\n    var prefix = '';\n    if (this._tag === 'listing' ||\n        this._tag === 'pre' ||\n        this._tag === 'textarea') {\n      // Add an initial newline because browsers ignore the first newline in\n      // a <listing>, <pre>, or <textarea> as an \"authoring convenience\" -- see\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.\n      prefix = '\\n';\n    }\n\n    var props = this._currentElement.props;\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        return prefix + innerHTML.__html;\n      }\n    } else {\n      var contentToUse =\n        CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        return prefix + escapeTextContentForBrowser(contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(\n          childrenToUse,\n          transaction,\n          context\n        );\n        return prefix + mountImages.join('');\n      }\n    }\n    return prefix;\n  },\n\n  receiveComponent: function(nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a native DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(transaction, prevElement, nextElement, context) {\n    assertValidProps(this._currentElement.props);\n    this._updateDOMProperties(prevElement.props, transaction);\n    this._updateDOMChildren(prevElement.props, transaction, context);\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMProperties: function(lastProps, transaction) {\n    var nextProps = this._currentElement.props;\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) ||\n         !lastProps.hasOwnProperty(propKey)) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        deleteListener(this._rootNodeID, propKey);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.deletePropertyByID(\n          this._rootNodeID,\n          propKey\n        );\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ?\n        this._previousStyleCopy :\n        lastProps[propKey];\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          nextProp = this._previousStyleCopy = assign({}, nextProp);\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) &&\n                (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) &&\n                lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, nextProp, transaction);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.updatePropertyByID(\n          this._rootNodeID,\n          propKey,\n          nextProp\n        );\n      }\n    }\n    if (styleUpdates) {\n      BackendIDOperations.updateStylesByID(\n        this._rootNodeID,\n        styleUpdates\n      );\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMChildren: function(lastProps, transaction, context) {\n    var nextProps = this._currentElement.props;\n\n    var lastContent =\n      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent =\n      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml =\n      lastProps.dangerouslySetInnerHTML &&\n      lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml =\n      nextProps.dangerouslySetInnerHTML &&\n      nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        BackendIDOperations.updateInnerHTMLByID(\n          this._rootNodeID,\n          nextHtml\n        );\n      }\n    } else if (nextChildren != null) {\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function() {\n    this.unmountChildren();\n    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n    this._rootNodeID = null;\n  }\n\n};\n\nReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent'\n});\n\nassign(\n  ReactDOMComponent.prototype,\n  ReactDOMComponent.Mixin,\n  ReactMultiChild.Mixin\n);\n\nReactDOMComponent.injection = {\n  injectIDOperations: function(IDOperations) {\n    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;\n  }\n};\n\nmodule.exports = ReactDOMComponent;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMComponent.js\n ** module id = 79\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMComponent.js?");

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule escapeTextContentForBrowser\n */\n\n'use strict';\n\nvar ESCAPE_LOOKUP = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;'\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n  return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/escapeTextContentForBrowser.js\n ** module id = 80\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/escapeTextContentForBrowser.js?");

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015 Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BeforeInputEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar EventPropagators = __webpack_require__(132);\nvar ExecutionEnvironment = __webpack_require__(46);\nvar FallbackCompositionState = __webpack_require__(139);\nvar SyntheticCompositionEvent = __webpack_require__(140);\nvar SyntheticInputEvent = __webpack_require__(141);\n\nvar keyOf = __webpack_require__(72);\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'CompositionEvent' in window\n);\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'TextEvent' in window &&\n  !documentMode &&\n  !isPresto()\n);\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = (\n  ExecutionEnvironment.canUseDOM &&\n  (\n    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)\n  )\n);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return (\n    typeof opera === 'object' &&\n    typeof opera.version === 'function' &&\n    parseInt(opera.version(), 10) <= 12\n  );\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBeforeInput: null}),\n      captured: keyOf({onBeforeInputCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topTextInput,\n      topLevelTypes.topPaste\n    ]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionEnd: null}),\n      captured: keyOf({onCompositionEndCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionStart: null}),\n      captured: keyOf({onCompositionStartCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionStart,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionUpdate: null}),\n      captured: keyOf({onCompositionUpdateCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionUpdate,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (\n    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n    // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n    !(nativeEvent.ctrlKey && nativeEvent.altKey)\n  );\n}\n\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionStart:\n      return eventTypes.compositionStart;\n    case topLevelTypes.topCompositionEnd:\n      return eventTypes.compositionEnd;\n    case topLevelTypes.topCompositionUpdate:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return (\n    topLevelType === topLevelTypes.topKeyDown &&\n    nativeEvent.keyCode === START_KEYCODE\n  );\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topKeyUp:\n      // Command keys insert or clear IME input.\n      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);\n    case topLevelTypes.topKeyDown:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return (nativeEvent.keyCode !== START_KEYCODE);\n    case topLevelTypes.topKeyPress:\n    case topLevelTypes.topMouseDown:\n    case topLevelTypes.topBlur:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(\n    eventType,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionEnd:\n      return getDataFromCustomEvent(nativeEvent);\n    case topLevelTypes.topKeyPress:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case topLevelTypes.topTextInput:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  if (currentComposition) {\n    if (\n      topLevelType === topLevelTypes.topCompositionEnd ||\n      isFallbackCompositionEnd(topLevelType, nativeEvent)\n    ) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case topLevelTypes.topPaste:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case topLevelTypes.topKeyPress:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case topLevelTypes.topCompositionEnd:\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(\n    eventTypes.beforeInput,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID,\n    nativeEvent\n  ) {\n    return [\n      extractCompositionEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      ),\n      extractBeforeInputEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      )\n    ];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/BeforeInputEventPlugin.js\n ** module id = 81\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/BeforeInputEventPlugin.js?");

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar EventPluginHub = __webpack_require__(131);\nvar EventPropagators = __webpack_require__(132);\nvar ExecutionEnvironment = __webpack_require__(46);\nvar ReactUpdates = __webpack_require__(52);\nvar SyntheticEvent = __webpack_require__(134);\n\nvar isEventSupported = __webpack_require__(138);\nvar isTextInputElement = __webpack_require__(142);\nvar keyOf = __webpack_require__(72);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onChange: null}),\n      captured: keyOf({onChangeCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topChange,\n      topLevelTypes.topClick,\n      topLevelTypes.topFocus,\n      topLevelTypes.topInput,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementID = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  return (\n    elem.nodeName === 'SELECT' ||\n    (elem.nodeName === 'INPUT' && elem.type === 'file')\n  );\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (\n    (!('documentMode' in document) || document.documentMode > 8)\n  );\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(\n    eventTypes.change,\n    activeElementID,\n    nativeEvent\n  );\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue();\n}\n\nfunction startWatchingForChangeEventIE8(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementID = null;\n}\n\nfunction getTargetIDForChangeEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return topLevelTargetID;\n  }\n}\nfunction handleEventsForChangeEventIE8(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events\n  isInputEventSupported = isEventSupported('input') && (\n    (!('documentMode' in document) || document.documentMode > 9)\n  );\n}\n\n/**\n * (For old IE.) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp =  {\n  get: function() {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function(val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For old IE.) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(\n    target.constructor.prototype,\n    'value'\n  );\n\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For old IE.) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementID = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For old IE.) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetIDForInputEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return topLevelTargetID;\n  }\n}\n\n// For IE8 and IE9.\nfunction handleEventsForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetIDForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topSelectionChange ||\n      topLevelType === topLevelTypes.topKeyUp ||\n      topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementID;\n    }\n  }\n}\n\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return (\n    elem.nodeName === 'INPUT' &&\n    (elem.type === 'checkbox' || elem.type === 'radio')\n  );\n}\n\nfunction getTargetIDForClickEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return topLevelTargetID;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    var getTargetIDFunc, handleEventFunc;\n    if (shouldUseChangeEvent(topLevelTarget)) {\n      if (doesChangeEventBubble) {\n        getTargetIDFunc = getTargetIDForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(topLevelTarget)) {\n      if (isInputEventSupported) {\n        getTargetIDFunc = getTargetIDForInputEvent;\n      } else {\n        getTargetIDFunc = getTargetIDForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(topLevelTarget)) {\n      getTargetIDFunc = getTargetIDForClickEvent;\n    }\n\n    if (getTargetIDFunc) {\n      var targetID = getTargetIDFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n      if (targetID) {\n        var event = SyntheticEvent.getPooled(\n          eventTypes.change,\n          targetID,\n          nativeEvent\n        );\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ChangeEventPlugin.js\n ** module id = 82\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ChangeEventPlugin.js?");

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ClientReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar nextReactRootIndex = 0;\n\nvar ClientReactRootIndex = {\n  createReactRootIndex: function() {\n    return nextReactRootIndex++;\n  }\n};\n\nmodule.exports = ClientReactRootIndex;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ClientReactRootIndex.js\n ** module id = 83\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ClientReactRootIndex.js?");

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = __webpack_require__(72);\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [\n  keyOf({ResponderEventPlugin: null}),\n  keyOf({SimpleEventPlugin: null}),\n  keyOf({TapEventPlugin: null}),\n  keyOf({EnterLeaveEventPlugin: null}),\n  keyOf({ChangeEventPlugin: null}),\n  keyOf({SelectEventPlugin: null}),\n  keyOf({BeforeInputEventPlugin: null}),\n  keyOf({AnalyticsEventPlugin: null}),\n  keyOf({MobileSafariClickEventPlugin: null})\n];\n\nmodule.exports = DefaultEventPluginOrder;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/DefaultEventPluginOrder.js\n ** module id = 84\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/DefaultEventPluginOrder.js?");

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar EventPropagators = __webpack_require__(132);\nvar SyntheticMouseEvent = __webpack_require__(143);\n\nvar ReactMount = __webpack_require__(38);\nvar keyOf = __webpack_require__(72);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({onMouseEnter: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  },\n  mouseLeave: {\n    registrationName: keyOf({onMouseLeave: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topMouseOver &&\n        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut &&\n        topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from, to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      to =\n        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||\n        win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromID = from ? ReactMount.getID(from) : '';\n    var toID = to ? ReactMount.getID(to) : '';\n\n    var leave = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseLeave,\n      fromID,\n      nativeEvent\n    );\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseEnter,\n      toID,\n      nativeEvent\n    );\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/EnterLeaveEventPlugin.js\n ** module id = 85\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/EnterLeaveEventPlugin.js?");

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule HTMLDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = __webpack_require__(108);\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE =\n  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE =\n  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar hasSVG;\nif (ExecutionEnvironment.canUseDOM) {\n  var implementation = document.implementation;\n  hasSVG = (\n    implementation &&\n    implementation.hasFeature &&\n    implementation.hasFeature(\n      'http://www.w3.org/TR/SVG11/feature#BasicStructure',\n      '1.1'\n    )\n  );\n}\n\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(\n    /^(data|aria)-[a-z_][a-z\\d_.\\-]*$/\n  ),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: null,\n    acceptCharset: null,\n    accessKey: null,\n    action: null,\n    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    allowTransparency: MUST_USE_ATTRIBUTE,\n    alt: null,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: null,\n    // autoFocus is polyfilled/normalized by AutoFocusMixin\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    cellPadding: null,\n    cellSpacing: null,\n    charSet: MUST_USE_ATTRIBUTE,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    classID: MUST_USE_ATTRIBUTE,\n    // To set className on SVG elements, it's necessary to use .setAttribute;\n    // this works on HTML elements too in all browsers except IE8. Conveniently,\n    // IE8 doesn't support SVG and so we can simply use the attribute in\n    // browsers that support SVG and the property in browsers that don't,\n    // regardless of whether the element is HTML or SVG.\n    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,\n    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: null,\n    content: null,\n    contentEditable: null,\n    contextMenu: MUST_USE_ATTRIBUTE,\n    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    coords: null,\n    crossOrigin: null,\n    data: null, // For `<object />` acts as `src`.\n    dateTime: MUST_USE_ATTRIBUTE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: null,\n    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: null,\n    encType: null,\n    form: MUST_USE_ATTRIBUTE,\n    formAction: MUST_USE_ATTRIBUTE,\n    formEncType: MUST_USE_ATTRIBUTE,\n    formMethod: MUST_USE_ATTRIBUTE,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: MUST_USE_ATTRIBUTE,\n    frameBorder: MUST_USE_ATTRIBUTE,\n    headers: null,\n    height: MUST_USE_ATTRIBUTE,\n    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    href: null,\n    hrefLang: null,\n    htmlFor: null,\n    httpEquiv: null,\n    icon: null,\n    id: MUST_USE_PROPERTY,\n    label: null,\n    lang: null,\n    list: MUST_USE_ATTRIBUTE,\n    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    manifest: MUST_USE_ATTRIBUTE,\n    marginHeight: null,\n    marginWidth: null,\n    max: null,\n    maxLength: MUST_USE_ATTRIBUTE,\n    media: MUST_USE_ATTRIBUTE,\n    mediaGroup: null,\n    method: null,\n    min: null,\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: null,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    pattern: null,\n    placeholder: null,\n    poster: null,\n    preload: null,\n    radioGroup: null,\n    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    rel: null,\n    required: HAS_BOOLEAN_VALUE,\n    role: MUST_USE_ATTRIBUTE,\n    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: null,\n    sandbox: null,\n    scope: null,\n    scrolling: null,\n    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: null,\n    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: MUST_USE_ATTRIBUTE,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: null,\n    src: null,\n    srcDoc: MUST_USE_PROPERTY,\n    srcSet: MUST_USE_ATTRIBUTE,\n    start: HAS_NUMERIC_VALUE,\n    step: null,\n    style: null,\n    tabIndex: null,\n    target: null,\n    title: null,\n    type: null,\n    useMap: null,\n    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,\n    width: MUST_USE_ATTRIBUTE,\n    wmode: MUST_USE_ATTRIBUTE,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: null,\n    autoCorrect: null,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: MUST_USE_ATTRIBUTE,\n    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    itemType: MUST_USE_ATTRIBUTE,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: MUST_USE_ATTRIBUTE,\n    itemRef: MUST_USE_ATTRIBUTE,\n    // property is supported for OpenGraph in meta tags.\n    property: null\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {\n    autoCapitalize: 'autocapitalize',\n    autoComplete: 'autocomplete',\n    autoCorrect: 'autocorrect',\n    autoFocus: 'autofocus',\n    autoPlay: 'autoplay',\n    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.\n    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding\n    encType: 'encoding',\n    hrefLang: 'hreflang',\n    radioGroup: 'radiogroup',\n    spellCheck: 'spellcheck',\n    srcDoc: 'srcdoc',\n    srcSet: 'srcset'\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/HTMLDOMPropertyConfig.js\n ** module id = 86\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/HTMLDOMPropertyConfig.js?");

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MobileSafariClickEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\n\nvar emptyFunction = __webpack_require__(117);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n/**\n * Mobile Safari does not fire properly bubble click events on non-interactive\n * elements, which means delegated click listeners do not fire. The workaround\n * for this bug involves attaching an empty click listener on the target node.\n *\n * This particular plugin works around the bug by attaching an empty click\n * listener on `touchstart` (which does fire on every element).\n */\nvar MobileSafariClickEventPlugin = {\n\n  eventTypes: null,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topTouchStart) {\n      var target = nativeEvent.target;\n      if (target && !target.onclick) {\n        target.onclick = emptyFunction;\n      }\n    }\n  }\n\n};\n\nmodule.exports = MobileSafariClickEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/MobileSafariClickEventPlugin.js\n ** module id = 87\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/MobileSafariClickEventPlugin.js?");

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar findDOMNode = __webpack_require__(44);\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function() {\n    return findDOMNode(this);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactBrowserComponentMixin.js\n ** module id = 88\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactBrowserComponentMixin.js?");

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar ReactUpdates = __webpack_require__(52);\nvar Transaction = __webpack_require__(127);\n\nvar assign = __webpack_require__(43);\nvar emptyFunction = __webpack_require__(117);\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function() {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nassign(\n  ReactDefaultBatchingStrategyTransaction.prototype,\n  Transaction.Mixin,\n  {\n    getTransactionWrappers: function() {\n      return TRANSACTION_WRAPPERS;\n    }\n  }\n);\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function(callback, a, b, c, d) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d);\n    } else {\n      transaction.perform(callback, null, a, b, c, d);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDefaultBatchingStrategy.js\n ** module id = 89\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDefaultBatchingStrategy.js?");

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar AutoFocusMixin = __webpack_require__(144);\nvar ReactBrowserComponentMixin = __webpack_require__(88);\nvar ReactClass = __webpack_require__(29);\nvar ReactElement = __webpack_require__(32);\n\nvar keyMirror = __webpack_require__(71);\n\nvar button = ReactElement.createFactory('button');\n\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = ReactClass.createClass({\n  displayName: 'ReactDOMButton',\n  tagName: 'BUTTON',\n\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n\n  render: function() {\n    var props = {};\n\n    // Copy the props; except the mouse listeners if we're disabled\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) &&\n          (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMButton;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMButton.js\n ** module id = 90\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMButton.js?");

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMForm\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar LocalEventTrapMixin = __webpack_require__(145);\nvar ReactBrowserComponentMixin = __webpack_require__(88);\nvar ReactClass = __webpack_require__(29);\nvar ReactElement = __webpack_require__(32);\n\nvar form = ReactElement.createFactory('form');\n\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMForm = ReactClass.createClass({\n  displayName: 'ReactDOMForm',\n  tagName: 'FORM',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return form(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');\n  }\n});\n\nmodule.exports = ReactDOMForm;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMForm.js\n ** module id = 91\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMForm.js?");

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMImg\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar LocalEventTrapMixin = __webpack_require__(145);\nvar ReactBrowserComponentMixin = __webpack_require__(88);\nvar ReactClass = __webpack_require__(29);\nvar ReactElement = __webpack_require__(32);\n\nvar img = ReactElement.createFactory('img');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <img> element itself. There are lots of hacks we could do\n * to accomplish this, but the most reliable is to make <img> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMImg = ReactClass.createClass({\n  displayName: 'ReactDOMImg',\n  tagName: 'IMG',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return img(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');\n  }\n});\n\nmodule.exports = ReactDOMImg;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMImg.js\n ** module id = 92\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMImg.js?");

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n * @typechecks static-only\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar CSSPropertyOperations = __webpack_require__(136);\nvar DOMChildrenOperations = __webpack_require__(146);\nvar DOMPropertyOperations = __webpack_require__(77);\nvar ReactMount = __webpack_require__(38);\nvar ReactPerf = __webpack_require__(39);\n\nvar invariant = __webpack_require__(61);\nvar setInnerHTML = __webpack_require__(115);\n\n/**\n * Errors for properties that should not be updated with `updatePropertyById()`.\n *\n * @type {object}\n * @private\n */\nvar INVALID_PROPERTY_ERRORS = {\n  dangerouslySetInnerHTML:\n    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\n  style: '`style` must be set using `updateStylesByID()`.'\n};\n\n/**\n * Operations used to process updates to DOM nodes. This is made injectable via\n * `ReactDOMComponent.BackendIDOperations`.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a DOM node with new property values. This should only be used to\n   * update DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A valid property name, see `DOMProperty`.\n   * @param {*} value New value of the property.\n   * @internal\n   */\n  updatePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n\n    // If we're updating to null or undefined, we should remove the property\n    // from the DOM node instead of inadvertantly setting to a string. This\n    // brings us in line with the same behavior we have on initial render.\n    if (value != null) {\n      DOMPropertyOperations.setValueForProperty(node, name, value);\n    } else {\n      DOMPropertyOperations.deleteValueForProperty(node, name);\n    }\n  },\n\n  /**\n   * Updates a DOM node to remove a property. This should only be used to remove\n   * DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A property name to remove, see `DOMProperty`.\n   * @internal\n   */\n  deletePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n    DOMPropertyOperations.deleteValueForProperty(node, name, value);\n  },\n\n  /**\n   * Updates a DOM node with new style values. If a value is specified as '',\n   * the corresponding style property will be unset.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {object} styles Mapping from styles to values.\n   * @internal\n   */\n  updateStylesByID: function(id, styles) {\n    var node = ReactMount.getNode(id);\n    CSSPropertyOperations.setValueForStyles(node, styles);\n  },\n\n  /**\n   * Updates a DOM node's innerHTML.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} html An HTML string.\n   * @internal\n   */\n  updateInnerHTMLByID: function(id, html) {\n    var node = ReactMount.getNode(id);\n    setInnerHTML(node, html);\n  },\n\n  /**\n   * Updates a DOM node's text content set by `props.content`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} content Text content.\n   * @internal\n   */\n  updateTextContentByID: function(id, content) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.updateTextContent(node, content);\n  },\n\n  /**\n   * Replaces a DOM node that exists in the document with markup.\n   *\n   * @param {string} id ID of child to be replaced.\n   * @param {string} markup Dangerous markup to inject in place of child.\n   * @internal\n   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\n   */\n  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\n  },\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markup List of markup strings.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function(updates, markup) {\n    for (var i = 0; i < updates.length; i++) {\n      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\n    }\n    DOMChildrenOperations.processUpdates(updates, markup);\n  }\n};\n\nReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\n  updatePropertyByID: 'updatePropertyByID',\n  deletePropertyByID: 'deletePropertyByID',\n  updateStylesByID: 'updateStylesByID',\n  updateInnerHTMLByID: 'updateInnerHTMLByID',\n  updateTextContentByID: 'updateTextContentByID',\n  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\n  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\n});\n\nmodule.exports = ReactDOMIDOperations;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMIDOperations.js\n ** module id = 93\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMIDOperations.js?");

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIframe\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar LocalEventTrapMixin = __webpack_require__(145);\nvar ReactBrowserComponentMixin = __webpack_require__(88);\nvar ReactClass = __webpack_require__(29);\nvar ReactElement = __webpack_require__(32);\n\nvar iframe = ReactElement.createFactory('iframe');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <iframe> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <iframe> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMIframe = ReactClass.createClass({\n  displayName: 'ReactDOMIframe',\n  tagName: 'IFRAME',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return iframe(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n  }\n});\n\nmodule.exports = ReactDOMIframe;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMIframe.js\n ** module id = 94\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMIframe.js?");

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar AutoFocusMixin = __webpack_require__(144);\nvar DOMPropertyOperations = __webpack_require__(77);\nvar LinkedValueUtils = __webpack_require__(147);\nvar ReactBrowserComponentMixin = __webpack_require__(88);\nvar ReactClass = __webpack_require__(29);\nvar ReactElement = __webpack_require__(32);\nvar ReactMount = __webpack_require__(38);\nvar ReactUpdates = __webpack_require__(52);\n\nvar assign = __webpack_require__(43);\nvar invariant = __webpack_require__(61);\n\nvar input = ReactElement.createFactory('input');\n\nvar instancesByReactID = {};\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements an <input> native component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = ReactClass.createClass({\n  displayName: 'ReactDOMInput',\n  tagName: 'INPUT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    return {\n      initialChecked: this.props.defaultChecked || false,\n      initialValue: defaultValue != null ? defaultValue : null\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.defaultChecked = null;\n    props.defaultValue = null;\n\n    var value = LinkedValueUtils.getValue(this);\n    props.value = value != null ? value : this.state.initialValue;\n\n    var checked = LinkedValueUtils.getChecked(this);\n    props.checked = checked != null ? checked : this.state.initialChecked;\n\n    props.onChange = this._handleChange;\n\n    return input(props, this.props.children);\n  },\n\n  componentDidMount: function() {\n    var id = ReactMount.getID(this.getDOMNode());\n    instancesByReactID[id] = this;\n  },\n\n  componentWillUnmount: function() {\n    var rootNode = this.getDOMNode();\n    var id = ReactMount.getID(rootNode);\n    delete instancesByReactID[id];\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var rootNode = this.getDOMNode();\n    if (this.props.checked != null) {\n      DOMPropertyOperations.setValueForProperty(\n        rootNode,\n        'checked',\n        this.props.checked || false\n      );\n    }\n\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    // Here we use asap to wait until all updates have propagated, which\n    // is important when using controlled components within layers:\n    // https://github.com/facebook/react/issues/1698\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n\n    var name = this.props.name;\n    if (this.props.type === 'radio' && name != null) {\n      var rootNode = this.getDOMNode();\n      var queryRoot = rootNode;\n\n      while (queryRoot.parentNode) {\n        queryRoot = queryRoot.parentNode;\n      }\n\n      // If `rootNode.form` was non-null, then we could try `form.elements`,\n      // but that sometimes behaves strangely in IE8. We could also try using\n      // `form.getElementsByName`, but that will only return direct children\n      // and won't include inputs that use the HTML5 `form=` attribute. Since\n      // the input might not even be in a form, let's just use the global\n      // `querySelectorAll` to ensure we don't miss anything.\n      var group = queryRoot.querySelectorAll(\n        'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n      for (var i = 0, groupLen = group.length; i < groupLen; i++) {\n        var otherNode = group[i];\n        if (otherNode === rootNode ||\n            otherNode.form !== rootNode.form) {\n          continue;\n        }\n        var otherID = ReactMount.getID(otherNode);\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherID,\n          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +\n          'same `name` is not supported.'\n        ) : invariant(otherID));\n        var otherInstance = instancesByReactID[otherID];\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherInstance,\n          'ReactDOMInput: Unknown radio button ID %s.',\n          otherID\n        ) : invariant(otherInstance));\n        // If this is a controlled radio button group, forcing the input that\n        // was previously checked to update will cause it to be come re-checked\n        // as appropriate.\n        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n      }\n    }\n\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMInput;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMInput.js\n ** module id = 95\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMInput.js?");

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactBrowserComponentMixin = __webpack_require__(88);\nvar ReactClass = __webpack_require__(29);\nvar ReactElement = __webpack_require__(32);\n\nvar warning = __webpack_require__(64);\n\nvar option = ReactElement.createFactory('option');\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactClass.createClass({\n  displayName: 'ReactDOMOption',\n  tagName: 'OPTION',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  componentWillMount: function() {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        this.props.selected == null,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n        'setting `selected` on <option>.'\n      ) : null);\n    }\n  },\n\n  render: function() {\n    return option(this.props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMOption;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMOption.js\n ** module id = 96\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMOption.js?");

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar AutoFocusMixin = __webpack_require__(144);\nvar LinkedValueUtils = __webpack_require__(147);\nvar ReactBrowserComponentMixin = __webpack_require__(88);\nvar ReactClass = __webpack_require__(29);\nvar ReactElement = __webpack_require__(32);\nvar ReactUpdates = __webpack_require__(52);\n\nvar assign = __webpack_require__(43);\n\nvar select = ReactElement.createFactory('select');\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  /*jshint validthis:true */\n  if (this._pendingUpdate) {\n    this._pendingUpdate = false;\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null && this.isMounted()) {\n      updateOptions(this, value);\n    }\n  }\n}\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction selectValueType(props, propName, componentName) {\n  if (props[propName] == null) {\n    return null;\n  }\n  if (props.multiple) {\n    if (!Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be an array if \") +\n        (\"`multiple` is true.\")\n      );\n    }\n  } else {\n    if (Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be a scalar \") +\n        (\"value if `multiple` is false.\")\n      );\n    }\n  }\n}\n\n/**\n * @param {ReactComponent} component Instance of ReactDOMSelect\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(component, propValue) {\n  var selectedValue, i, l;\n  var options = component.getDOMNode().options;\n\n  if (component.props.multiple) {\n    selectedValue = {};\n    for (i = 0, l = propValue.length; i < l; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0, l = options.length; i < l; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0, l = options.length; i < l; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> native component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = ReactClass.createClass({\n  displayName: 'ReactDOMSelect',\n  tagName: 'SELECT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  propTypes: {\n    defaultValue: selectValueType,\n    value: selectValueType\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.onChange = this._handleChange;\n    props.value = null;\n\n    return select(props, this.props.children);\n  },\n\n  componentWillMount: function() {\n    this._pendingUpdate = false;\n  },\n\n  componentDidMount: function() {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      updateOptions(this, value);\n    } else if (this.props.defaultValue != null) {\n      updateOptions(this, this.props.defaultValue);\n    }\n  },\n\n  componentDidUpdate: function(prevProps) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      this._pendingUpdate = false;\n      updateOptions(this, value);\n    } else if (!prevProps.multiple !== !this.props.multiple) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (this.props.defaultValue != null) {\n        updateOptions(this, this.props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(this, this.props.multiple ? [] : '');\n      }\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n\n    this._pendingUpdate = true;\n    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMSelect;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMSelect.js\n ** module id = 97\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMSelect.js?");

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar AutoFocusMixin = __webpack_require__(144);\nvar DOMPropertyOperations = __webpack_require__(77);\nvar LinkedValueUtils = __webpack_require__(147);\nvar ReactBrowserComponentMixin = __webpack_require__(88);\nvar ReactClass = __webpack_require__(29);\nvar ReactElement = __webpack_require__(32);\nvar ReactUpdates = __webpack_require__(52);\n\nvar assign = __webpack_require__(43);\nvar invariant = __webpack_require__(61);\n\nvar warning = __webpack_require__(64);\n\nvar textarea = ReactElement.createFactory('textarea');\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements a <textarea> native component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = ReactClass.createClass({\n  displayName: 'ReactDOMTextarea',\n  tagName: 'TEXTAREA',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = this.props.children;\n    if (children != null) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'Use the `defaultValue` or `value` props instead of setting ' +\n          'children on <textarea>.'\n        ) : null);\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        defaultValue == null,\n        'If you supply `defaultValue` on a <textarea>, do not pass children.'\n      ) : invariant(defaultValue == null));\n      if (Array.isArray(children)) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          children.length <= 1,\n          '<textarea> can only have at most one child.'\n        ) : invariant(children.length <= 1));\n        children = children[0];\n      }\n\n      defaultValue = '' + children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    var value = LinkedValueUtils.getValue(this);\n    return {\n      // We save the initial value so that `ReactDOMComponent` doesn't update\n      // `textContent` (unnecessary since we update value).\n      // The initial value can be a boolean or object so that's why it's\n      // forced to be a string.\n      initialValue: '' + (value != null ? value : defaultValue)\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.dangerouslySetInnerHTML == null,\n      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'\n    ) : invariant(props.dangerouslySetInnerHTML == null));\n\n    props.defaultValue = null;\n    props.value = null;\n    props.onChange = this._handleChange;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.\n    return textarea(props, this.state.initialValue);\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      var rootNode = this.getDOMNode();\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMTextarea;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMTextarea.js\n ** module id = 98\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMTextarea.js?");

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = __webpack_require__(148);\nvar ExecutionEnvironment = __webpack_require__(46);\nvar PooledClass = __webpack_require__(62);\nvar ReactInstanceHandles = __webpack_require__(37);\nvar ReactMount = __webpack_require__(38);\nvar ReactUpdates = __webpack_require__(52);\n\nvar assign = __webpack_require__(43);\nvar getEventTarget = __webpack_require__(149);\nvar getUnboundedScrollPosition = __webpack_require__(150);\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function() {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(\n  TopLevelCallbackBookKeeping,\n  PooledClass.twoArgumentPooler\n);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(\n    getEventTarget(bookKeeping.nativeEvent)\n  ) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(\n      bookKeeping.topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      bookKeeping.nativeEvent\n    );\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function(handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function(enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function() {\n    return ReactEventListener._enabled;\n  },\n\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  monitorScrollValue: function(refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function(topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(\n      topLevelType,\n      nativeEvent\n    );\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactEventListener.js\n ** module id = 99\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactEventListener.js?");

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInjection\n */\n\n'use strict';\n\nvar DOMProperty = __webpack_require__(108);\nvar EventPluginHub = __webpack_require__(131);\nvar ReactComponentEnvironment = __webpack_require__(151);\nvar ReactClass = __webpack_require__(29);\nvar ReactEmptyComponent = __webpack_require__(110);\nvar ReactBrowserEventEmitter = __webpack_require__(109);\nvar ReactNativeComponent = __webpack_require__(74);\nvar ReactDOMComponent = __webpack_require__(79);\nvar ReactPerf = __webpack_require__(39);\nvar ReactRootIndex = __webpack_require__(107);\nvar ReactUpdates = __webpack_require__(52);\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  Class: ReactClass.injection,\n  DOMComponent: ReactDOMComponent.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  NativeComponent: ReactNativeComponent.injection,\n  Perf: ReactPerf.injection,\n  RootIndex: ReactRootIndex.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactInjection.js\n ** module id = 100\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactInjection.js?");

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = __webpack_require__(126);\nvar PooledClass = __webpack_require__(62);\nvar ReactBrowserEventEmitter = __webpack_require__(109);\nvar ReactInputSelection = __webpack_require__(152);\nvar ReactPutListenerQueue = __webpack_require__(153);\nvar Transaction = __webpack_require__(127);\n\nvar assign = __webpack_require__(43);\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function() {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`\n   *   restores the previous value.\n   */\n  close: function(previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function() {\n    this.reactMountReady.notifyAll();\n  }\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: function() {\n    this.putListenerQueue.putListeners();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  SELECTION_RESTORATION,\n  EVENT_SUPPRESSION,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction() {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap proceedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactReconcileTransaction.js\n ** module id = 101\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactReconcileTransaction.js?");

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar EventPropagators = __webpack_require__(132);\nvar ReactInputSelection = __webpack_require__(152);\nvar SyntheticEvent = __webpack_require__(134);\n\nvar getActiveElement = __webpack_require__(154);\nvar isTextInputElement = __webpack_require__(142);\nvar keyOf = __webpack_require__(72);\nvar shallowEqual = __webpack_require__(123);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSelect: null}),\n      captured: keyOf({onSelectCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topContextMenu,\n      topLevelTypes.topFocus,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topMouseDown,\n      topLevelTypes.topMouseUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\nvar activeElement = null;\nvar activeElementID = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @param {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node &&\n      ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown ||\n      activeElement == null ||\n      activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(\n      eventTypes.select,\n      activeElementID,\n      nativeEvent\n    );\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) ||\n            topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't).\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      case topLevelTypes.topSelectionChange:\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent);\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SelectEventPlugin.js\n ** module id = 102\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SelectEventPlugin.js?");

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ServerReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Size of the reactRoot ID space. We generate random numbers for React root\n * IDs and if there's a collision the events and DOM update system will\n * get confused. In the future we need a way to generate GUIDs but for\n * now this will work on a smaller scale.\n */\nvar GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);\n\nvar ServerReactRootIndex = {\n  createReactRootIndex: function() {\n    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);\n  }\n};\n\nmodule.exports = ServerReactRootIndex;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ServerReactRootIndex.js\n ** module id = 103\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ServerReactRootIndex.js?");

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SimpleEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar EventPluginUtils = __webpack_require__(26);\nvar EventPropagators = __webpack_require__(132);\nvar SyntheticClipboardEvent = __webpack_require__(155);\nvar SyntheticEvent = __webpack_require__(134);\nvar SyntheticFocusEvent = __webpack_require__(156);\nvar SyntheticKeyboardEvent = __webpack_require__(157);\nvar SyntheticMouseEvent = __webpack_require__(143);\nvar SyntheticDragEvent = __webpack_require__(158);\nvar SyntheticTouchEvent = __webpack_require__(159);\nvar SyntheticUIEvent = __webpack_require__(160);\nvar SyntheticWheelEvent = __webpack_require__(161);\n\nvar getEventCharCode = __webpack_require__(162);\n\nvar invariant = __webpack_require__(61);\nvar keyOf = __webpack_require__(72);\nvar warning = __webpack_require__(64);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  blur: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBlur: true}),\n      captured: keyOf({onBlurCapture: true})\n    }\n  },\n  click: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onClick: true}),\n      captured: keyOf({onClickCapture: true})\n    }\n  },\n  contextMenu: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onContextMenu: true}),\n      captured: keyOf({onContextMenuCapture: true})\n    }\n  },\n  copy: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCopy: true}),\n      captured: keyOf({onCopyCapture: true})\n    }\n  },\n  cut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCut: true}),\n      captured: keyOf({onCutCapture: true})\n    }\n  },\n  doubleClick: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDoubleClick: true}),\n      captured: keyOf({onDoubleClickCapture: true})\n    }\n  },\n  drag: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrag: true}),\n      captured: keyOf({onDragCapture: true})\n    }\n  },\n  dragEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnd: true}),\n      captured: keyOf({onDragEndCapture: true})\n    }\n  },\n  dragEnter: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnter: true}),\n      captured: keyOf({onDragEnterCapture: true})\n    }\n  },\n  dragExit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragExit: true}),\n      captured: keyOf({onDragExitCapture: true})\n    }\n  },\n  dragLeave: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragLeave: true}),\n      captured: keyOf({onDragLeaveCapture: true})\n    }\n  },\n  dragOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragOver: true}),\n      captured: keyOf({onDragOverCapture: true})\n    }\n  },\n  dragStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragStart: true}),\n      captured: keyOf({onDragStartCapture: true})\n    }\n  },\n  drop: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrop: true}),\n      captured: keyOf({onDropCapture: true})\n    }\n  },\n  focus: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onFocus: true}),\n      captured: keyOf({onFocusCapture: true})\n    }\n  },\n  input: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onInput: true}),\n      captured: keyOf({onInputCapture: true})\n    }\n  },\n  keyDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyDown: true}),\n      captured: keyOf({onKeyDownCapture: true})\n    }\n  },\n  keyPress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyPress: true}),\n      captured: keyOf({onKeyPressCapture: true})\n    }\n  },\n  keyUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyUp: true}),\n      captured: keyOf({onKeyUpCapture: true})\n    }\n  },\n  load: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onLoad: true}),\n      captured: keyOf({onLoadCapture: true})\n    }\n  },\n  error: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onError: true}),\n      captured: keyOf({onErrorCapture: true})\n    }\n  },\n  // Note: We do not allow listening to mouseOver events. Instead, use the\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n  mouseDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseDown: true}),\n      captured: keyOf({onMouseDownCapture: true})\n    }\n  },\n  mouseMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseMove: true}),\n      captured: keyOf({onMouseMoveCapture: true})\n    }\n  },\n  mouseOut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOut: true}),\n      captured: keyOf({onMouseOutCapture: true})\n    }\n  },\n  mouseOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOver: true}),\n      captured: keyOf({onMouseOverCapture: true})\n    }\n  },\n  mouseUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseUp: true}),\n      captured: keyOf({onMouseUpCapture: true})\n    }\n  },\n  paste: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onPaste: true}),\n      captured: keyOf({onPasteCapture: true})\n    }\n  },\n  reset: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onReset: true}),\n      captured: keyOf({onResetCapture: true})\n    }\n  },\n  scroll: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onScroll: true}),\n      captured: keyOf({onScrollCapture: true})\n    }\n  },\n  submit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSubmit: true}),\n      captured: keyOf({onSubmitCapture: true})\n    }\n  },\n  touchCancel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchCancel: true}),\n      captured: keyOf({onTouchCancelCapture: true})\n    }\n  },\n  touchEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchEnd: true}),\n      captured: keyOf({onTouchEndCapture: true})\n    }\n  },\n  touchMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchMove: true}),\n      captured: keyOf({onTouchMoveCapture: true})\n    }\n  },\n  touchStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchStart: true}),\n      captured: keyOf({onTouchStartCapture: true})\n    }\n  },\n  wheel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onWheel: true}),\n      captured: keyOf({onWheelCapture: true})\n    }\n  }\n};\n\nvar topLevelEventsToDispatchConfig = {\n  topBlur:        eventTypes.blur,\n  topClick:       eventTypes.click,\n  topContextMenu: eventTypes.contextMenu,\n  topCopy:        eventTypes.copy,\n  topCut:         eventTypes.cut,\n  topDoubleClick: eventTypes.doubleClick,\n  topDrag:        eventTypes.drag,\n  topDragEnd:     eventTypes.dragEnd,\n  topDragEnter:   eventTypes.dragEnter,\n  topDragExit:    eventTypes.dragExit,\n  topDragLeave:   eventTypes.dragLeave,\n  topDragOver:    eventTypes.dragOver,\n  topDragStart:   eventTypes.dragStart,\n  topDrop:        eventTypes.drop,\n  topError:       eventTypes.error,\n  topFocus:       eventTypes.focus,\n  topInput:       eventTypes.input,\n  topKeyDown:     eventTypes.keyDown,\n  topKeyPress:    eventTypes.keyPress,\n  topKeyUp:       eventTypes.keyUp,\n  topLoad:        eventTypes.load,\n  topMouseDown:   eventTypes.mouseDown,\n  topMouseMove:   eventTypes.mouseMove,\n  topMouseOut:    eventTypes.mouseOut,\n  topMouseOver:   eventTypes.mouseOver,\n  topMouseUp:     eventTypes.mouseUp,\n  topPaste:       eventTypes.paste,\n  topReset:       eventTypes.reset,\n  topScroll:      eventTypes.scroll,\n  topSubmit:      eventTypes.submit,\n  topTouchCancel: eventTypes.touchCancel,\n  topTouchEnd:    eventTypes.touchEnd,\n  topTouchMove:   eventTypes.touchMove,\n  topTouchStart:  eventTypes.touchStart,\n  topWheel:       eventTypes.wheel\n};\n\nfor (var type in topLevelEventsToDispatchConfig) {\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * Same as the default implementation, except cancels the event when return\n   * value is false. This behavior will be disabled in a future release.\n   *\n   * @param {object} Event to be dispatched.\n   * @param {function} Application-level callback.\n   * @param {string} domID DOM ID to pass to the callback.\n   */\n  executeDispatch: function(event, listener, domID) {\n    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);\n\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof returnValue !== 'boolean',\n      'Returning `false` from an event handler is deprecated and will be ' +\n      'ignored in a future release. Instead, manually call ' +\n      'e.stopPropagation() or e.preventDefault(), as appropriate.'\n    ) : null);\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  },\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case topLevelTypes.topInput:\n      case topLevelTypes.topLoad:\n      case topLevelTypes.topError:\n      case topLevelTypes.topReset:\n      case topLevelTypes.topSubmit:\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case topLevelTypes.topKeyPress:\n        // FireFox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case topLevelTypes.topBlur:\n      case topLevelTypes.topFocus:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case topLevelTypes.topClick:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topDoubleClick:\n      case topLevelTypes.topMouseDown:\n      case topLevelTypes.topMouseMove:\n      case topLevelTypes.topMouseOut:\n      case topLevelTypes.topMouseOver:\n      case topLevelTypes.topMouseUp:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case topLevelTypes.topDrag:\n      case topLevelTypes.topDragEnd:\n      case topLevelTypes.topDragEnter:\n      case topLevelTypes.topDragExit:\n      case topLevelTypes.topDragLeave:\n      case topLevelTypes.topDragOver:\n      case topLevelTypes.topDragStart:\n      case topLevelTypes.topDrop:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case topLevelTypes.topTouchCancel:\n      case topLevelTypes.topTouchEnd:\n      case topLevelTypes.topTouchMove:\n      case topLevelTypes.topTouchStart:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case topLevelTypes.topScroll:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case topLevelTypes.topWheel:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case topLevelTypes.topCopy:\n      case topLevelTypes.topCut:\n      case topLevelTypes.topPaste:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      EventConstructor,\n      'SimpleEventPlugin: Unhandled event type, `%s`.',\n      topLevelType\n    ) : invariant(EventConstructor));\n    var event = EventConstructor.getPooled(\n      dispatchConfig,\n      topLevelTargetID,\n      nativeEvent\n    );\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SimpleEventPlugin.js\n ** module id = 104\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SimpleEventPlugin.js?");

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SVGDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = __webpack_require__(108);\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n\nvar SVGDOMPropertyConfig = {\n  Properties: {\n    cx: MUST_USE_ATTRIBUTE,\n    cy: MUST_USE_ATTRIBUTE,\n    d: MUST_USE_ATTRIBUTE,\n    dx: MUST_USE_ATTRIBUTE,\n    dy: MUST_USE_ATTRIBUTE,\n    fill: MUST_USE_ATTRIBUTE,\n    fillOpacity: MUST_USE_ATTRIBUTE,\n    fontFamily: MUST_USE_ATTRIBUTE,\n    fontSize: MUST_USE_ATTRIBUTE,\n    fx: MUST_USE_ATTRIBUTE,\n    fy: MUST_USE_ATTRIBUTE,\n    gradientTransform: MUST_USE_ATTRIBUTE,\n    gradientUnits: MUST_USE_ATTRIBUTE,\n    markerEnd: MUST_USE_ATTRIBUTE,\n    markerMid: MUST_USE_ATTRIBUTE,\n    markerStart: MUST_USE_ATTRIBUTE,\n    offset: MUST_USE_ATTRIBUTE,\n    opacity: MUST_USE_ATTRIBUTE,\n    patternContentUnits: MUST_USE_ATTRIBUTE,\n    patternUnits: MUST_USE_ATTRIBUTE,\n    points: MUST_USE_ATTRIBUTE,\n    preserveAspectRatio: MUST_USE_ATTRIBUTE,\n    r: MUST_USE_ATTRIBUTE,\n    rx: MUST_USE_ATTRIBUTE,\n    ry: MUST_USE_ATTRIBUTE,\n    spreadMethod: MUST_USE_ATTRIBUTE,\n    stopColor: MUST_USE_ATTRIBUTE,\n    stopOpacity: MUST_USE_ATTRIBUTE,\n    stroke: MUST_USE_ATTRIBUTE,\n    strokeDasharray: MUST_USE_ATTRIBUTE,\n    strokeLinecap: MUST_USE_ATTRIBUTE,\n    strokeOpacity: MUST_USE_ATTRIBUTE,\n    strokeWidth: MUST_USE_ATTRIBUTE,\n    textAnchor: MUST_USE_ATTRIBUTE,\n    transform: MUST_USE_ATTRIBUTE,\n    version: MUST_USE_ATTRIBUTE,\n    viewBox: MUST_USE_ATTRIBUTE,\n    x1: MUST_USE_ATTRIBUTE,\n    x2: MUST_USE_ATTRIBUTE,\n    x: MUST_USE_ATTRIBUTE,\n    y1: MUST_USE_ATTRIBUTE,\n    y2: MUST_USE_ATTRIBUTE,\n    y: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    fillOpacity: 'fill-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    gradientTransform: 'gradientTransform',\n    gradientUnits: 'gradientUnits',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    patternContentUnits: 'patternContentUnits',\n    patternUnits: 'patternUnits',\n    preserveAspectRatio: 'preserveAspectRatio',\n    spreadMethod: 'spreadMethod',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strokeDasharray: 'stroke-dasharray',\n    strokeLinecap: 'stroke-linecap',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    textAnchor: 'text-anchor',\n    viewBox: 'viewBox'\n  }\n};\n\nmodule.exports = SVGDOMPropertyConfig;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SVGDOMPropertyConfig.js\n ** module id = 105\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SVGDOMPropertyConfig.js?");

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createFullPageComponent\n * @typechecks\n */\n\n'use strict';\n\n// Defeat circular references by requiring this directly.\nvar ReactClass = __webpack_require__(29);\nvar ReactElement = __webpack_require__(32);\n\nvar invariant = __webpack_require__(61);\n\n/**\n * Create a component that will throw an exception when unmounted.\n *\n * Components like <html> <head> and <body> can't be removed or added\n * easily in a cross-browser way, however it's valuable to be able to\n * take advantage of React's reconciliation for styling and <title>\n * management. So we just document it and throw in dangerous cases.\n *\n * @param {string} tag The tag to wrap\n * @return {function} convenience constructor of new component\n */\nfunction createFullPageComponent(tag) {\n  var elementFactory = ReactElement.createFactory(tag);\n\n  var FullPageComponent = ReactClass.createClass({\n    tagName: tag.toUpperCase(),\n    displayName: 'ReactFullPageComponent' + tag,\n\n    componentWillUnmount: function() {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        false,\n        '%s tried to unmount. Because of cross-browser quirks it is ' +\n        'impossible to unmount some top-level components (eg <html>, <head>, ' +\n        'and <body>) reliably and efficiently. To fix this, have a single ' +\n        'top-level component that never unmounts render these elements.',\n        this.constructor.displayName\n      ) : invariant(false));\n    },\n\n    render: function() {\n      return elementFactory(this.props);\n    }\n  });\n\n  return FullPageComponent;\n}\n\nmodule.exports = createFullPageComponent;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/createFullPageComponent.js\n ** module id = 106\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/createFullPageComponent.js?");

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar ReactRootIndexInjection = {\n  /**\n   * @param {function} _createReactRootIndex\n   */\n  injectCreateReactRootIndex: function(_createReactRootIndex) {\n    ReactRootIndex.createReactRootIndex = _createReactRootIndex;\n  }\n};\n\nvar ReactRootIndex = {\n  createReactRootIndex: null,\n  injection: ReactRootIndexInjection\n};\n\nmodule.exports = ReactRootIndex;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactRootIndex.js\n ** module id = 107\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactRootIndex.js?");

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMProperty\n * @typechecks static-only\n */\n\n/*jslint bitwise: true */\n\n'use strict';\n\nvar invariant = __webpack_require__(61);\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_ATTRIBUTE: 0x1,\n  MUST_USE_PROPERTY: 0x2,\n  HAS_SIDE_EFFECTS: 0x4,\n  HAS_BOOLEAN_VALUE: 0x8,\n  HAS_NUMERIC_VALUE: 0x10,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function(domPropertyConfig) {\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(\n        domPropertyConfig.isCustomAttribute\n      );\n    }\n\n    for (var propName in Properties) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.isStandardName.hasOwnProperty(propName),\n        'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property ' +\n        '\\'%s\\' which has already been injected. You may be accidentally ' +\n        'injecting the same DOM property config twice, or you may be ' +\n        'injecting two configs that have conflicting property names.',\n        propName\n      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));\n\n      DOMProperty.isStandardName[propName] = true;\n\n      var lowerCased = propName.toLowerCase();\n      DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        DOMProperty.getPossibleStandardName[attributeName] = propName;\n        DOMProperty.getAttributeName[propName] = attributeName;\n      } else {\n        DOMProperty.getAttributeName[propName] = lowerCased;\n      }\n\n      DOMProperty.getPropertyName[propName] =\n        DOMPropertyNames.hasOwnProperty(propName) ?\n          DOMPropertyNames[propName] :\n          propName;\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];\n      } else {\n        DOMProperty.getMutationMethod[propName] = null;\n      }\n\n      var propConfig = Properties[propName];\n      DOMProperty.mustUseAttribute[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);\n      DOMProperty.mustUseProperty[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);\n      DOMProperty.hasSideEffects[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);\n      DOMProperty.hasBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);\n      DOMProperty.hasNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);\n      DOMProperty.hasPositiveNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);\n      DOMProperty.hasOverloadedBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);\n\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.mustUseAttribute[propName] ||\n          !DOMProperty.mustUseProperty[propName],\n        'DOMProperty: Cannot require using both attribute and property: %s',\n        propName\n      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||\n        !DOMProperty.mustUseProperty[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        DOMProperty.mustUseProperty[propName] ||\n          !DOMProperty.hasSideEffects[propName],\n        'DOMProperty: Properties that have side effects must use property: %s',\n        propName\n      ) : invariant(DOMProperty.mustUseProperty[propName] ||\n        !DOMProperty.hasSideEffects[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !!DOMProperty.hasBooleanValue[propName] +\n          !!DOMProperty.hasNumericValue[propName] +\n          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,\n        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +\n        'numeric value, but not a combination: %s',\n        propName\n      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +\n        !!DOMProperty.hasNumericValue[propName] +\n        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));\n    }\n  }\n};\nvar defaultValueCache = {};\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n\n  /**\n   * Checks whether a property name is a standard property.\n   * @type {Object}\n   */\n  isStandardName: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties.\n   * @type {Object}\n   */\n  getPossibleStandardName: {},\n\n  /**\n   * Mapping from normalized names to attribute names that differ. Attribute\n   * names are used when rendering markup or with `*Attribute()`.\n   * @type {Object}\n   */\n  getAttributeName: {},\n\n  /**\n   * Mapping from normalized names to properties on DOM node instances.\n   * (This includes properties that mutate due to external factors.)\n   * @type {Object}\n   */\n  getPropertyName: {},\n\n  /**\n   * Mapping from normalized names to mutation methods. This will only exist if\n   * mutation cannot be set simply by the property or `setAttribute()`.\n   * @type {Object}\n   */\n  getMutationMethod: {},\n\n  /**\n   * Whether the property must be accessed and mutated as an object property.\n   * @type {Object}\n   */\n  mustUseAttribute: {},\n\n  /**\n   * Whether the property must be accessed and mutated using `*Attribute()`.\n   * (This includes anything that fails `<propName> in <element>`.)\n   * @type {Object}\n   */\n  mustUseProperty: {},\n\n  /**\n   * Whether or not setting a value causes side effects such as triggering\n   * resources to be loaded or text selection changes. We must ensure that\n   * the value is only set if it has changed.\n   * @type {Object}\n   */\n  hasSideEffects: {},\n\n  /**\n   * Whether the property should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasBooleanValue: {},\n\n  /**\n   * Whether the property must be numeric or parse as a\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasNumericValue: {},\n\n  /**\n   * Whether the property must be positive numeric or parse as a positive\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasPositiveNumericValue: {},\n\n  /**\n   * Whether the property can be used as a flag as well as with a value. Removed\n   * when strictly equal to false; present without a value when strictly equal\n   * to true; present with a value otherwise.\n   * @type {Object}\n   */\n  hasOverloadedBooleanValue: {},\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function(attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * Returns the default property value for a DOM property (i.e., not an\n   * attribute). Most default values are '' or false, but not all. Worse yet,\n   * some (in particular, `type`) vary depending on the type of element.\n   *\n   * TODO: Is it better to grab all the possible properties when creating an\n   * element to avoid having to create the same element twice?\n   */\n  getDefaultValueForProperty: function(nodeName, prop) {\n    var nodeDefaults = defaultValueCache[nodeName];\n    var testElement;\n    if (!nodeDefaults) {\n      defaultValueCache[nodeName] = nodeDefaults = {};\n    }\n    if (!(prop in nodeDefaults)) {\n      testElement = document.createElement(nodeName);\n      nodeDefaults[prop] = testElement[prop];\n    }\n    return nodeDefaults[prop];\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/DOMProperty.js\n ** module id = 108\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/DOMProperty.js?");

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar EventPluginHub = __webpack_require__(131);\nvar EventPluginRegistry = __webpack_require__(163);\nvar ReactEventEmitterMixin = __webpack_require__(164);\nvar ViewportMetrics = __webpack_require__(165);\n\nvar assign = __webpack_require__(43);\nvar isEventSupported = __webpack_require__(138);\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topBlur: 'blur',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topScroll: 'scroll',\n  topSelectionChange: 'selectionchange',\n  topTextInput: 'textInput',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function(ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(\n        ReactBrowserEventEmitter.handleTopLevel\n      );\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function(enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function() {\n    return !!(\n      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())\n    );\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function(registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.\n      registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0, l = dependencies.length; i < l; i++) {\n      var dependency = dependencies[i];\n      if (!(\n            (isListening.hasOwnProperty(dependency) && isListening[dependency])\n          )) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'wheel',\n              mountAt\n            );\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'mousewheel',\n              mountAt\n            );\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'DOMMouseScroll',\n              mountAt\n            );\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              mountAt\n            );\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE\n            );\n          }\n        } else if (dependency === topLevelTypes.topFocus ||\n            dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topFocus,\n              'focus',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topBlur,\n              'blur',\n              mountAt\n            );\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topFocus,\n              'focusin',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topBlur,\n              'focusout',\n              mountAt\n            );\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n            dependency,\n            topEventMapping[dependency],\n            mountAt\n          );\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function() {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactBrowserEventEmitter.js\n ** module id = 109\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactBrowserEventEmitter.js?");

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n'use strict';\n\nvar ReactElement = __webpack_require__(32);\nvar ReactInstanceMap = __webpack_require__(67);\n\nvar invariant = __webpack_require__(61);\n\nvar component;\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIDsRegistry = {};\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function(emptyComponent) {\n    component = ReactElement.createFactory(emptyComponent);\n  }\n};\n\nvar ReactEmptyComponentType = function() {};\nReactEmptyComponentType.prototype.componentDidMount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Make sure we run these methods in the correct order, we shouldn't\n  // need this check. We're going to assume if we're here it means we ran\n  // componentWillUnmount already so there is no internal instance (it gets\n  // removed as part of the unmounting process).\n  if (!internalInstance) {\n    return;\n  }\n  registerNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.componentWillUnmount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Get rid of this check. See TODO in componentDidMount.\n  if (!internalInstance) {\n    return;\n  }\n  deregisterNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.render = function() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    component,\n    'Trying to return null from a render, but no null placeholder component ' +\n    'was injected.'\n  ) : invariant(component));\n  return component();\n};\n\nvar emptyElement = ReactElement.createElement(ReactEmptyComponentType);\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIDsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIDsRegistry[id];\n}\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return !!nullComponentIDsRegistry[id];\n}\n\nvar ReactEmptyComponent = {\n  emptyElement: emptyElement,\n  injection: ReactEmptyComponentInjection,\n  isNullComponentID: isNullComponentID\n};\n\nmodule.exports = ReactEmptyComponent;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactEmptyComponent.js\n ** module id = 110\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactEmptyComponent.js?");

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = __webpack_require__(166);\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function(markup) {\n    var checksum = adler32(markup);\n    return markup.replace(\n      '>',\n      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\">'\n    );\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function(markup, element) {\n    var existingChecksum = element.getAttribute(\n      ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n    );\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactMarkupChecksum.js\n ** module id = 111\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactMarkupChecksum.js?");

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\nvar isTextNode = __webpack_require__(167);\n\n/*jslint bitwise:true */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if (outerNode.contains) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/containsNode.js\n ** module id = 112\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/containsNode.js?");

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getReactRootElementInContainer\n */\n\n'use strict';\n\nvar DOC_NODE_TYPE = 9;\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n *                                           a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nmodule.exports = getReactRootElementInContainer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getReactRootElementInContainer.js\n ** module id = 113\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getReactRootElementInContainer.js?");

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCompositeComponent = __webpack_require__(133);\nvar ReactEmptyComponent = __webpack_require__(110);\nvar ReactNativeComponent = __webpack_require__(74);\n\nvar assign = __webpack_require__(43);\nvar invariant = __webpack_require__(61);\nvar warning = __webpack_require__(64);\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function() { };\nassign(\n  ReactCompositeComponentWrapper.prototype,\n  ReactCompositeComponent.Mixin,\n  {\n    _instantiateReactComponent: instantiateReactComponent\n  }\n);\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return (\n    typeof type === 'function' &&\n    typeof type.prototype.mountComponent === 'function' &&\n    typeof type.prototype.receiveComponent === 'function'\n  );\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {*} parentCompositeType The composite type that resolved this.\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, parentCompositeType) {\n  var instance;\n\n  if (node === null || node === false) {\n    node = ReactEmptyComponent.emptyElement;\n  }\n\n  if (typeof node === 'object') {\n    var element = node;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        element && (typeof element.type === 'function' ||\n                    typeof element.type === 'string'),\n        'Only functions or strings can be mounted as React components.'\n      ) : null);\n    }\n\n    // Special case string values\n    if (parentCompositeType === element.type &&\n        typeof element.type === 'string') {\n      // Avoid recursion if the wrapper renders itself.\n      instance = ReactNativeComponent.createInternalComponent(element);\n      // All native components are currently wrapped in a composite so we're\n      // safe to assume that this is what we should instantiate.\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // represenations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n    } else {\n      instance = new ReactCompositeComponentWrapper();\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactNativeComponent.createInstanceForText(node);\n  } else {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'Encountered invalid React node of type %s',\n      typeof node\n    ) : invariant(false));\n  }\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof instance.construct === 'function' &&\n      typeof instance.mountComponent === 'function' &&\n      typeof instance.receiveComponent === 'function' &&\n      typeof instance.unmountComponent === 'function',\n      'Only React Components can be mounted.'\n    ) : null);\n  }\n\n  // Sets up the instance. This can probably just move into the constructor now.\n  instance.construct(node);\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    instance._isOwnerNecessary = false;\n    instance._warnedAboutRefsInRender = false;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/instantiateReactComponent.js\n ** module id = 114\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/instantiateReactComponent.js?");

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setInnerHTML\n */\n\n/* globals MSApp */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = function(node, html) {\n  node.innerHTML = html;\n};\n\n// Win8 apps: Allow all html to be inserted\nif (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n  setInnerHTML = function(node, html) {\n    MSApp.execUnsafeLocalFunction(function() {\n      node.innerHTML = html;\n    });\n  };\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function(node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) ||\n          html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        node.innerHTML = '\\uFEFF' + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n}\n\nmodule.exports = setInnerHTML;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/setInnerHTML.js\n ** module id = 115\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/setInnerHTML.js?");

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar warning = __webpack_require__(64);\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement != null && nextElement != null) {\n    var prevType = typeof prevElement;\n    var nextType = typeof nextElement;\n    if (prevType === 'string' || prevType === 'number') {\n      return (nextType === 'string' || nextType === 'number');\n    } else {\n      if (nextType === 'object' &&\n          prevElement.type === nextElement.type &&\n          prevElement.key === nextElement.key) {\n        var ownersMatch = prevElement._owner === nextElement._owner;\n        var prevName = null;\n        var nextName = null;\n        var nextDisplayName = null;\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (!ownersMatch) {\n            if (prevElement._owner != null &&\n                prevElement._owner.getPublicInstance() != null &&\n                prevElement._owner.getPublicInstance().constructor != null) {\n              prevName =\n                prevElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement._owner != null &&\n                nextElement._owner.getPublicInstance() != null &&\n                nextElement._owner.getPublicInstance().constructor != null) {\n              nextName =\n                nextElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement.type != null &&\n                nextElement.type.displayName != null) {\n              nextDisplayName = nextElement.type.displayName;\n            }\n            if (nextElement.type != null && typeof nextElement.type === 'string') {\n              nextDisplayName = nextElement.type;\n            }\n            if (typeof nextElement.type !== 'string' ||\n                nextElement.type === 'input' ||\n                nextElement.type === 'textarea') {\n              if ((prevElement._owner != null &&\n                  prevElement._owner._isOwnerNecessary === false) ||\n                  (nextElement._owner != null &&\n                  nextElement._owner._isOwnerNecessary === false)) {\n                if (prevElement._owner != null) {\n                  prevElement._owner._isOwnerNecessary = true;\n                }\n                if (nextElement._owner != null) {\n                  nextElement._owner._isOwnerNecessary = true;\n                }\n                (\"production\" !== process.env.NODE_ENV ? warning(\n                  false,\n                  '<%s /> is being rendered by both %s and %s using the same ' +\n                  'key (%s) in the same place. Currently, this means that ' +\n                  'they don\\'t preserve state. This behavior should be very ' +\n                  'rare so we\\'re considering deprecating it. Please contact ' +\n                  'the React team and explain your use case so that we can ' +\n                  'take that into consideration.',\n                  nextDisplayName || 'Unknown Component',\n                  prevName || '[Unknown]',\n                  nextName || '[Unknown]',\n                  prevElement.key\n                ) : null);\n              }\n            }\n          }\n        }\n        return ownersMatch;\n      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/shouldUpdateReactComponent.js\n ** module id = 116\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/shouldUpdateReactComponent.js?");

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\nfunction makeEmptyFunction(arg) {\n  return function() {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function() { return this; };\nemptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\nmodule.exports = emptyFunction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/emptyFunction.js\n ** module id = 117\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/emptyFunction.js?");

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = __webpack_require__(168);\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function(prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  return (\n    nextElement._owner !== prevElement._owner ||\n    nextElement.ref !== prevElement.ref\n  );\n};\n\nReactRef.detachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactRef.js\n ** module id = 118\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactRef.js?");

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = __webpack_require__(62);\nvar CallbackQueue = __webpack_require__(126);\nvar ReactPutListenerQueue = __webpack_require__(153);\nvar Transaction = __webpack_require__(127);\n\nvar assign = __webpack_require__(43);\nvar emptyFunction = __webpack_require__(117);\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(\n  ReactServerRenderingTransaction.prototype,\n  Transaction.Mixin,\n  Mixin\n);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactServerRenderingTransaction.js\n ** module id = 119\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactServerRenderingTransaction.js?");

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isNode\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  return !!(object && (\n    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&\n    typeof object.nodeType === 'number' &&\n    typeof object.nodeName === 'string'))\n  ));\n}\n\nmodule.exports = isNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/isNode.js\n ** module id = 120\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/isNode.js?");

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLink\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactLink encapsulates a common pattern in which a component wants to modify\n * a prop received from its parent. ReactLink allows the parent to pass down a\n * value coupled with a callback that, when invoked, expresses an intent to\n * modify that value. For example:\n *\n * React.createClass({\n *   getInitialState: function() {\n *     return {value: ''};\n *   },\n *   render: function() {\n *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);\n *     return <input valueLink={valueLink} />;\n *   },\n *   this._handleValueChange: function(newValue) {\n *     this.setState({value: newValue});\n *   }\n * });\n *\n * We have provided some sugary mixins to make the creation and\n * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.\n */\n\nvar React = __webpack_require__(20);\n\n/**\n * @param {*} value current value of the link\n * @param {function} requestChange callback to request a change\n */\nfunction ReactLink(value, requestChange) {\n  this.value = value;\n  this.requestChange = requestChange;\n}\n\n/**\n * Creates a PropType that enforces the ReactLink API and optionally checks the\n * type of the value being passed inside the link. Example:\n *\n * MyComponent.propTypes = {\n *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)\n * }\n */\nfunction createLinkTypeChecker(linkType) {\n  var shapes = {\n    value: typeof linkType === 'undefined' ?\n      React.PropTypes.any.isRequired :\n      linkType.isRequired,\n    requestChange: React.PropTypes.func.isRequired\n  };\n  return React.PropTypes.shape(shapes);\n}\n\nReactLink.PropTypes = {\n  link: createLinkTypeChecker\n};\n\nmodule.exports = ReactLink;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactLink.js\n ** module id = 121\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactLink.js?");

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactStateSetters\n */\n\n'use strict';\n\nvar ReactStateSetters = {\n  /**\n   * Returns a function that calls the provided function, and uses the result\n   * of that to set the component's state.\n   *\n   * @param {ReactCompositeComponent} component\n   * @param {function} funcReturningState Returned callback uses this to\n   *                                      determine how to update state.\n   * @return {function} callback that when invoked uses funcReturningState to\n   *                    determined the object literal to setState.\n   */\n  createStateSetter: function(component, funcReturningState) {\n    return function(a, b, c, d, e, f) {\n      var partialState = funcReturningState.call(component, a, b, c, d, e, f);\n      if (partialState) {\n        component.setState(partialState);\n      }\n    };\n  },\n\n  /**\n   * Returns a single-argument callback that can be used to update a single\n   * key in the component's state.\n   *\n   * Note: this is memoized function, which makes it inexpensive to call.\n   *\n   * @param {ReactCompositeComponent} component\n   * @param {string} key The key in the state that you should update.\n   * @return {function} callback of 1 argument which calls setState() with\n   *                    the provided keyName and callback argument.\n   */\n  createStateKeySetter: function(component, key) {\n    // Memoize the setters.\n    var cache = component.__keySetters || (component.__keySetters = {});\n    return cache[key] || (cache[key] = createStateKeySetter(component, key));\n  }\n};\n\nfunction createStateKeySetter(component, key) {\n  // Partial state is allocated outside of the function closure so it can be\n  // reused with every call, avoiding memory allocation when this function\n  // is called.\n  var partialState = {};\n  return function stateKeySetter(value) {\n    partialState[key] = value;\n    component.setState(partialState);\n  };\n}\n\nReactStateSetters.Mixin = {\n  /**\n   * Returns a function that calls the provided function, and uses the result\n   * of that to set the component's state.\n   *\n   * For example, these statements are equivalent:\n   *\n   *   this.setState({x: 1});\n   *   this.createStateSetter(function(xValue) {\n   *     return {x: xValue};\n   *   })(1);\n   *\n   * @param {function} funcReturningState Returned callback uses this to\n   *                                      determine how to update state.\n   * @return {function} callback that when invoked uses funcReturningState to\n   *                    determined the object literal to setState.\n   */\n  createStateSetter: function(funcReturningState) {\n    return ReactStateSetters.createStateSetter(this, funcReturningState);\n  },\n\n  /**\n   * Returns a single-argument callback that can be used to update a single\n   * key in the component's state.\n   *\n   * For example, these statements are equivalent:\n   *\n   *   this.setState({x: 1});\n   *   this.createStateKeySetter('x')(1);\n   *\n   * Note: this is memoized function, which makes it inexpensive to call.\n   *\n   * @param {string} key The key in the state that you should update.\n   * @return {function} callback of 1 argument which calls setState() with\n   *                    the provided keyName and callback argument.\n   */\n  createStateKeySetter: function(key) {\n    return ReactStateSetters.createStateKeySetter(this, key);\n  }\n};\n\nmodule.exports = ReactStateSetters;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactStateSetters.js\n ** module id = 122\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactStateSetters.js?");

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n */\n\n'use strict';\n\n/**\n * Performs equality by iterating through keys on an object and returning\n * false when any key has values which are not strictly equal between\n * objA and objB. Returns true when the values of all keys are strictly equal.\n *\n * @return {boolean}\n */\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) &&\n        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B's keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/shallowEqual.js\n ** module id = 123\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/shallowEqual.js?");

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * @providesModule ReactCSSTransitionGroupChild\n */\n\n'use strict';\n\nvar React = __webpack_require__(20);\n\nvar CSSCore = __webpack_require__(169);\nvar ReactTransitionEvents = __webpack_require__(170);\n\nvar onlyChild = __webpack_require__(45);\nvar warning = __webpack_require__(64);\n\n// We don't remove the element from the DOM until we receive an animationend or\n// transitionend event. If the user screws up and forgets to add an animation\n// their node will be stuck in the DOM forever, so we detect if an animation\n// does not start and if it doesn't, we just call the end listener immediately.\nvar TICK = 17;\nvar NO_EVENT_TIMEOUT = 5000;\n\nvar noEventListener = null;\n\n\nif (\"production\" !== process.env.NODE_ENV) {\n  noEventListener = function() {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'transition(): tried to perform an animation without ' +\n      'an animationend or transitionend event after timeout (' +\n      '%sms). You should either disable this ' +\n      'transition in JS or add a CSS animation/transition.',\n      NO_EVENT_TIMEOUT\n    ) : null);\n  };\n}\n\nvar ReactCSSTransitionGroupChild = React.createClass({\n  displayName: 'ReactCSSTransitionGroupChild',\n\n  transition: function(animationType, finishCallback) {\n    var node = this.getDOMNode();\n    var className = this.props.name + '-' + animationType;\n    var activeClassName = className + '-active';\n    var noEventTimeout = null;\n\n    var endListener = function(e) {\n      if (e && e.target !== node) {\n        return;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        clearTimeout(noEventTimeout);\n      }\n\n      CSSCore.removeClass(node, className);\n      CSSCore.removeClass(node, activeClassName);\n\n      ReactTransitionEvents.removeEndEventListener(node, endListener);\n\n      // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n      if (finishCallback) {\n        finishCallback();\n      }\n    };\n\n    ReactTransitionEvents.addEndEventListener(node, endListener);\n\n    CSSCore.addClass(node, className);\n\n    // Need to do this to actually trigger a transition.\n    this.queueClass(activeClassName);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      noEventTimeout = setTimeout(noEventListener, NO_EVENT_TIMEOUT);\n    }\n  },\n\n  queueClass: function(className) {\n    this.classNameQueue.push(className);\n\n    if (!this.timeout) {\n      this.timeout = setTimeout(this.flushClassNameQueue, TICK);\n    }\n  },\n\n  flushClassNameQueue: function() {\n    if (this.isMounted()) {\n      this.classNameQueue.forEach(\n        CSSCore.addClass.bind(CSSCore, this.getDOMNode())\n      );\n    }\n    this.classNameQueue.length = 0;\n    this.timeout = null;\n  },\n\n  componentWillMount: function() {\n    this.classNameQueue = [];\n  },\n\n  componentWillUnmount: function() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  },\n\n  componentWillAppear: function(done) {\n    if (this.props.appear) {\n      this.transition('appear', done);\n    } else {\n      done();\n    }\n  },\n\n  componentWillEnter: function(done) {\n    if (this.props.enter) {\n      this.transition('enter', done);\n    } else {\n      done();\n    }\n  },\n\n  componentWillLeave: function(done) {\n    if (this.props.leave) {\n      this.transition('leave', done);\n    } else {\n      done();\n    }\n  },\n\n  render: function() {\n    return onlyChild(this.props.children);\n  }\n});\n\nmodule.exports = ReactCSSTransitionGroupChild;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactCSSTransitionGroupChild.js\n ** module id = 124\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactCSSTransitionGroupChild.js?");

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactTransitionChildMapping\n */\n\n'use strict';\n\nvar ReactChildren = __webpack_require__(27);\nvar ReactFragment = __webpack_require__(50);\n\nvar ReactTransitionChildMapping = {\n  /**\n   * Given `this.props.children`, return an object mapping key to child. Just\n   * simple syntactic sugar around ReactChildren.map().\n   *\n   * @param {*} children `this.props.children`\n   * @return {object} Mapping of key to child\n   */\n  getChildMapping: function(children) {\n    if (!children) {\n      return children;\n    }\n    return ReactFragment.extract(ReactChildren.map(children, function(child) {\n      return child;\n    }));\n  },\n\n  /**\n   * When you're adding or removing children some may be added or removed in the\n   * same render pass. We want to show *both* since we want to simultaneously\n   * animate elements in and out. This function takes a previous set of keys\n   * and a new set of keys and merges them with its best guess of the correct\n   * ordering. In the future we may expose some of the utilities in\n   * ReactMultiChild to make this easy, but for now React itself does not\n   * directly have this concept of the union of prevChildren and nextChildren\n   * so we implement it here.\n   *\n   * @param {object} prev prev children as returned from\n   * `ReactTransitionChildMapping.getChildMapping()`.\n   * @param {object} next next children as returned from\n   * `ReactTransitionChildMapping.getChildMapping()`.\n   * @return {object} a key set that contains all keys in `prev` and all keys\n   * in `next` in a reasonable order.\n   */\n  mergeChildMappings: function(prev, next) {\n    prev = prev || {};\n    next = next || {};\n\n    function getValueForKey(key) {\n      if (next.hasOwnProperty(key)) {\n        return next[key];\n      } else {\n        return prev[key];\n      }\n    }\n\n    // For each key of `next`, the list of keys to insert before that key in\n    // the combined list\n    var nextKeysPending = {};\n\n    var pendingKeys = [];\n    for (var prevKey in prev) {\n      if (next.hasOwnProperty(prevKey)) {\n        if (pendingKeys.length) {\n          nextKeysPending[prevKey] = pendingKeys;\n          pendingKeys = [];\n        }\n      } else {\n        pendingKeys.push(prevKey);\n      }\n    }\n\n    var i;\n    var childMapping = {};\n    for (var nextKey in next) {\n      if (nextKeysPending.hasOwnProperty(nextKey)) {\n        for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n          var pendingNextKey = nextKeysPending[nextKey][i];\n          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(\n            pendingNextKey\n          );\n        }\n      }\n      childMapping[nextKey] = getValueForKey(nextKey);\n    }\n\n    // Finally, add the keys which didn't appear before any key in `next`\n    for (i = 0; i < pendingKeys.length; i++) {\n      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n    }\n\n    return childMapping;\n  }\n};\n\nmodule.exports = ReactTransitionChildMapping;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactTransitionChildMapping.js\n ** module id = 125\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactTransitionChildMapping.js?");

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar PooledClass = __webpack_require__(62);\n\nvar assign = __webpack_require__(43);\nvar invariant = __webpack_require__(61);\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\nassign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        callbacks.length === contexts.length,\n        'Mismatched list of contexts in callback queue'\n      ) : invariant(callbacks.length === contexts.length));\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0, l = callbacks.length; i < l; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function() {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function() {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/CallbackQueue.js\n ** module id = 126\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/CallbackQueue.js?");

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Transaction\n */\n\n'use strict';\n\nvar invariant = __webpack_require__(61);\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar Mixin = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function() {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (!this.wrapperInitData) {\n      this.wrapperInitData = [];\n    } else {\n      this.wrapperInitData.length = 0;\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function() {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} args... Arguments to pass to the method (optional).\n   *                           Helps prevent need to bind in many cases.\n   * @return Return value from `method`.\n   */\n  perform: function(method, scope, a, b, c, d, e, f) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !this.isInTransaction(),\n      'Transaction.perform(...): Cannot initialize a transaction when there ' +\n      'is already an outstanding transaction.'\n    ) : invariant(!this.isInTransaction()));\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {\n          }\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function(startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ?\n          wrapper.initialize.call(this) :\n          null;\n      } finally {\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function(startIndex) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      this.isInTransaction(),\n      'Transaction.closeAll(): Cannot close transaction when none are open.'\n    ) : invariant(this.isInTransaction()));\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {\n          }\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nvar Transaction = {\n\n  Mixin: Mixin,\n\n  /**\n   * Token to look for to determine if an error occured.\n   */\n  OBSERVED_ERROR: {}\n\n};\n\nmodule.exports = Transaction;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/Transaction.js\n ** module id = 127\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/Transaction.js?");

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTransferer\n */\n\n'use strict';\n\nvar assign = __webpack_require__(43);\nvar emptyFunction = __webpack_require__(117);\nvar joinClasses = __webpack_require__(171);\n\n/**\n * Creates a transfer strategy that will merge prop values using the supplied\n * `mergeStrategy`. If a prop was previously unset, this just sets it.\n *\n * @param {function} mergeStrategy\n * @return {function}\n */\nfunction createTransferStrategy(mergeStrategy) {\n  return function(props, key, value) {\n    if (!props.hasOwnProperty(key)) {\n      props[key] = value;\n    } else {\n      props[key] = mergeStrategy(props[key], value);\n    }\n  };\n}\n\nvar transferStrategyMerge = createTransferStrategy(function(a, b) {\n  // `merge` overrides the first object's (`props[key]` above) keys using the\n  // second object's (`value`) keys. An object's style's existing `propA` would\n  // get overridden. Flip the order here.\n  return assign({}, b, a);\n});\n\n/**\n * Transfer strategies dictate how props are transferred by `transferPropsTo`.\n * NOTE: if you add any more exceptions to this list you should be sure to\n * update `cloneWithProps()` accordingly.\n */\nvar TransferStrategies = {\n  /**\n   * Never transfer `children`.\n   */\n  children: emptyFunction,\n  /**\n   * Transfer the `className` prop by merging them.\n   */\n  className: createTransferStrategy(joinClasses),\n  /**\n   * Transfer the `style` prop (which is an object) by merging them.\n   */\n  style: transferStrategyMerge\n};\n\n/**\n * Mutates the first argument by transferring the properties from the second\n * argument.\n *\n * @param {object} props\n * @param {object} newProps\n * @return {object}\n */\nfunction transferInto(props, newProps) {\n  for (var thisKey in newProps) {\n    if (!newProps.hasOwnProperty(thisKey)) {\n      continue;\n    }\n\n    var transferStrategy = TransferStrategies[thisKey];\n\n    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {\n      transferStrategy(props, thisKey, newProps[thisKey]);\n    } else if (!props.hasOwnProperty(thisKey)) {\n      props[thisKey] = newProps[thisKey];\n    }\n  }\n  return props;\n}\n\n/**\n * ReactPropTransferer are capable of transferring props to another component\n * using a `transferPropsTo` method.\n *\n * @class ReactPropTransferer\n */\nvar ReactPropTransferer = {\n\n  /**\n   * Merge two props objects using TransferStrategies.\n   *\n   * @param {object} oldProps original props (they take precedence)\n   * @param {object} newProps new props to merge in\n   * @return {object} a new object containing both sets of props merged.\n   */\n  mergeProps: function(oldProps, newProps) {\n    return transferInto(assign({}, oldProps), newProps);\n  }\n\n};\n\nmodule.exports = ReactPropTransferer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactPropTransferer.js\n ** module id = 128\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactPropTransferer.js?");

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerfAnalysis\n */\n\nvar assign = __webpack_require__(43);\n\n// Don't try to save users less than 1.2ms (a number I made up)\nvar DONT_CARE_THRESHOLD = 1.2;\nvar DOM_OPERATION_TYPES = {\n  '_mountImageIntoNode': 'set innerHTML',\n  INSERT_MARKUP: 'set innerHTML',\n  MOVE_EXISTING: 'move',\n  REMOVE_NODE: 'remove',\n  TEXT_CONTENT: 'set textContent',\n  'updatePropertyByID': 'update attribute',\n  'deletePropertyByID': 'delete attribute',\n  'updateStylesByID': 'update styles',\n  'updateInnerHTMLByID': 'set innerHTML',\n  'dangerouslyReplaceNodeWithMarkupByID': 'replace'\n};\n\nfunction getTotalTime(measurements) {\n  // TODO: return number of DOM ops? could be misleading.\n  // TODO: measure dropped frames after reconcile?\n  // TODO: log total time of each reconcile and the top-level component\n  // class that triggered it.\n  var totalTime = 0;\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    totalTime += measurement.totalTime;\n  }\n  return totalTime;\n}\n\nfunction getDOMSummary(measurements) {\n  var items = [];\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var id;\n\n    for (id in measurement.writes) {\n      measurement.writes[id].forEach(function(write) {\n        items.push({\n          id: id,\n          type: DOM_OPERATION_TYPES[write.type] || write.type,\n          args: write.args\n        });\n      });\n    }\n  }\n  return items;\n}\n\nfunction getExclusiveSummary(measurements) {\n  var candidates = {};\n  var displayName;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n\n    for (var id in allIDs) {\n      displayName = measurement.displayNames[id].current;\n\n      candidates[displayName] = candidates[displayName] || {\n        componentName: displayName,\n        inclusive: 0,\n        exclusive: 0,\n        render: 0,\n        count: 0\n      };\n      if (measurement.render[id]) {\n        candidates[displayName].render += measurement.render[id];\n      }\n      if (measurement.exclusive[id]) {\n        candidates[displayName].exclusive += measurement.exclusive[id];\n      }\n      if (measurement.inclusive[id]) {\n        candidates[displayName].inclusive += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[displayName].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (displayName in candidates) {\n    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[displayName]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.exclusive - a.exclusive;\n  });\n\n  return arr;\n}\n\nfunction getInclusiveSummary(measurements, onlyClean) {\n  var candidates = {};\n  var inclusiveKey;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n    var cleanComponents;\n\n    if (onlyClean) {\n      cleanComponents = getUnchangedComponents(measurement);\n    }\n\n    for (var id in allIDs) {\n      if (onlyClean && !cleanComponents[id]) {\n        continue;\n      }\n\n      var displayName = measurement.displayNames[id];\n\n      // Inclusive time is not useful for many components without knowing where\n      // they are instantiated. So we aggregate inclusive time with both the\n      // owner and current displayName as the key.\n      inclusiveKey = displayName.owner + ' > ' + displayName.current;\n\n      candidates[inclusiveKey] = candidates[inclusiveKey] || {\n        componentName: inclusiveKey,\n        time: 0,\n        count: 0\n      };\n\n      if (measurement.inclusive[id]) {\n        candidates[inclusiveKey].time += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[inclusiveKey].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (inclusiveKey in candidates) {\n    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[inclusiveKey]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.time - a.time;\n  });\n\n  return arr;\n}\n\nfunction getUnchangedComponents(measurement) {\n  // For a given reconcile, look at which components did not actually\n  // render anything to the DOM and return a mapping of their ID to\n  // the amount of time it took to render the entire subtree.\n  var cleanComponents = {};\n  var dirtyLeafIDs = Object.keys(measurement.writes);\n  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n  for (var id in allIDs) {\n    var isDirty = false;\n    // For each component that rendered, see if a component that triggered\n    // a DOM op is in its subtree.\n    for (var i = 0; i < dirtyLeafIDs.length; i++) {\n      if (dirtyLeafIDs[i].indexOf(id) === 0) {\n        isDirty = true;\n        break;\n      }\n    }\n    if (!isDirty && measurement.counts[id] > 0) {\n      cleanComponents[id] = true;\n    }\n  }\n  return cleanComponents;\n}\n\nvar ReactDefaultPerfAnalysis = {\n  getExclusiveSummary: getExclusiveSummary,\n  getInclusiveSummary: getInclusiveSummary,\n  getDOMSummary: getDOMSummary,\n  getTotalTime: getTotalTime\n};\n\nmodule.exports = ReactDefaultPerfAnalysis;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDefaultPerfAnalysis.js\n ** module id = 129\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDefaultPerfAnalysis.js?");

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performanceNow\n * @typechecks\n */\n\nvar performance = __webpack_require__(172);\n\n/**\n * Detect if we can use `window.performance.now()` and gracefully fallback to\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\n * because of Facebook's testing infrastructure.\n */\nif (!performance || !performance.now) {\n  performance = Date;\n}\n\nvar performanceNow = performance.now.bind(performance);\n\nmodule.exports = performanceNow;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/performanceNow.js\n ** module id = 130\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/performanceNow.js?");

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar EventPluginRegistry = __webpack_require__(163);\nvar EventPluginUtils = __webpack_require__(26);\n\nvar accumulateInto = __webpack_require__(173);\nvar forEachAccumulated = __webpack_require__(174);\nvar invariant = __webpack_require__(61);\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nvar executeDispatchesAndRelease = function(event) {\n  if (event) {\n    var executeDispatch = EventPluginUtils.executeDispatch;\n    // Plugins can provide custom behavior when dispatching events.\n    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);\n    if (PluginModule && PluginModule.executeDispatch) {\n      executeDispatch = PluginModule.executeDispatch;\n    }\n    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\n\n/**\n * - `InstanceHandle`: [required] Module that performs logical traversals of DOM\n *   hierarchy given ids of the logical DOM elements involved.\n */\nvar InstanceHandle = null;\n\nfunction validateInstanceHandle() {\n  var valid =\n    InstanceHandle &&\n    InstanceHandle.traverseTwoPhase &&\n    InstanceHandle.traverseEnterLeave;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    valid,\n    'InstanceHandle not injected before use!'\n  ) : invariant(valid));\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {object} InjectedMount\n     * @public\n     */\n    injectMount: EventPluginUtils.injection.injectMount,\n\n    /**\n     * @param {object} InjectedInstanceHandle\n     * @public\n     */\n    injectInstanceHandle: function(InjectedInstanceHandle) {\n      InstanceHandle = InjectedInstanceHandle;\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n    },\n\n    getInstanceHandle: function() {\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n      return InstanceHandle;\n    },\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginRegistry.registrationNameModules,\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {?function} listener The callback to store.\n   */\n  putListener: function(id, registrationName, listener) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !listener || typeof listener === 'function',\n      'Expected %s listener to be a function, instead got type %s',\n      registrationName, typeof listener\n    ) : invariant(!listener || typeof listener === 'function'));\n\n    var bankForRegistrationName =\n      listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[id] = listener;\n  },\n\n  /**\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    return bankForRegistrationName && bankForRegistrationName[id];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (bankForRegistrationName) {\n      delete bankForRegistrationName[id];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {string} id ID of the DOM element.\n   */\n  deleteAllListeners: function(id) {\n    for (var registrationName in listenerBank) {\n      delete listenerBank[registrationName][id];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0, l = plugins.length; i < l; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(\n          topLevelType,\n          topLevelTarget,\n          topLevelTargetID,\n          nativeEvent\n        );\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function(events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function() {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !eventQueue,\n      'processEventQueue(): Additional events were enqueued while processing ' +\n      'an event queue. Support for this has not yet been implemented.'\n    ) : invariant(!eventQueue));\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function() {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function() {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/EventPluginHub.js\n ** module id = 131\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/EventPluginHub.js?");

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPropagators\n */\n\n'use strict';\n\nvar EventConstants = __webpack_require__(60);\nvar EventPluginHub = __webpack_require__(131);\n\nvar accumulateInto = __webpack_require__(173);\nvar forEachAccumulated = __webpack_require__(174);\n\nvar PropagationPhases = EventConstants.PropagationPhases;\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(id, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(id, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(domID, upwards, event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (!domID) {\n      throw new Error('Dispatching id must not be null');\n    }\n  }\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n  var listener = listenerAtPhase(domID, event, phase);\n  if (listener) {\n    event._dispatchListeners =\n      accumulateInto(event._dispatchListeners, listener);\n    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We can not perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(\n      event.dispatchMarker,\n      accumulateDirectionalDispatches,\n      event\n    );\n  }\n}\n\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(id, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(id, registrationName);\n    if (listener) {\n      event._dispatchListeners =\n        accumulateInto(event._dispatchListeners, listener);\n      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event.dispatchMarker, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {\n  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(\n    fromID,\n    toID,\n    accumulateDispatches,\n    leave,\n    enter\n  );\n}\n\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/EventPropagators.js\n ** module id = 132\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/EventPropagators.js?");

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = __webpack_require__(151);\nvar ReactContext = __webpack_require__(30);\nvar ReactCurrentOwner = __webpack_require__(31);\nvar ReactElement = __webpack_require__(32);\nvar ReactElementValidator = __webpack_require__(33);\nvar ReactInstanceMap = __webpack_require__(67);\nvar ReactLifeCycle = __webpack_require__(68);\nvar ReactNativeComponent = __webpack_require__(74);\nvar ReactPerf = __webpack_require__(39);\nvar ReactPropTypeLocations = __webpack_require__(69);\nvar ReactPropTypeLocationNames = __webpack_require__(70);\nvar ReactReconciler = __webpack_require__(41);\nvar ReactUpdates = __webpack_require__(52);\n\nvar assign = __webpack_require__(43);\nvar emptyObject = __webpack_require__(73);\nvar invariant = __webpack_require__(61);\nvar shouldUpdateReactComponent = __webpack_require__(116);\nvar warning = __webpack_require__(64);\n\nfunction getDeclarationErrorAddendum(component) {\n  var owner = component._currentElement._owner || null;\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function(element) {\n    this._currentElement = element;\n    this._rootNodeID = null;\n    this._instance = null;\n\n    // See ReactUpdateQueue\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedComponent = null;\n\n    this._context = null;\n    this._mountOrder = 0;\n    this._isTopLevel = false;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._rootNodeID = rootID;\n\n    var publicProps = this._processProps(this._currentElement.props);\n    var publicContext = this._processContext(this._currentElement._context);\n\n    var Component = ReactNativeComponent.getComponentClassForElement(\n      this._currentElement\n    );\n\n    // Initialize the public class\n    var inst = new Component(publicProps, publicContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        inst.render != null,\n        '%s(...): No `render` method found on the returned component ' +\n        'instance: you may have forgotten to define `render` in your ' +\n        'component or you may have accidentally tried to render an element ' +\n        'whose type is a function that isn\\'t a React component.',\n        Component.displayName || Component.name || 'Component'\n      ) : null);\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      this._warnIfContextsDiffer(this._currentElement._context, context);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.getInitialState ||\n        inst.getInitialState.isReactClassApproved,\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Did you mean to define a state property instead?',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.propTypes,\n        'propTypes was defined as an instance property on %s. Use a static ' +\n        'property to define propTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.contextTypes,\n        'contextTypes was defined as an instance property on %s. Use a ' +\n        'static property to define contextTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof inst.componentShouldUpdate !== 'function',\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        (this.getName() || 'A component')\n      ) : null);\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof initialState === 'object' && !Array.isArray(initialState),\n      '%s.state: must be set to an object or null',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var renderedElement;\n\n    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;\n    ReactLifeCycle.currentlyMountingInstance = this;\n    try {\n      if (inst.componentWillMount) {\n        inst.componentWillMount();\n        // When mounting, calls to `setState` by `componentWillMount` will set\n        // `this._pendingStateQueue` without triggering a re-render.\n        if (this._pendingStateQueue) {\n          inst.state = this._processPendingState(inst.props, inst.context);\n        }\n      }\n\n      renderedElement = this._renderValidatedComponent();\n    } finally {\n      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;\n    }\n\n    this._renderedComponent = this._instantiateReactComponent(\n      renderedElement,\n      this._currentElement.type // The wrapping type\n    );\n\n    var markup = ReactReconciler.mountComponent(\n      this._renderedComponent,\n      rootID,\n      transaction,\n      this._processChildContext(context)\n    );\n    if (inst.componentDidMount) {\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n    }\n\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function() {\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount) {\n      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;\n      ReactLifeCycle.currentlyUnmountingInstance = this;\n      try {\n        inst.componentWillUnmount();\n      } finally {\n        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;\n      }\n    }\n\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    this._renderedComponent = null;\n\n    // Reset pending fields\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Schedule a partial update to the props. Only used for internal testing.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @internal\n   */\n  _setPropsInternal: function(partialProps, callback) {\n    // This is a deoptimized path. We optimize for always having an element.\n    // This creates an extra internal element.\n    var element = this._pendingElement || this._currentElement;\n    this._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      assign({}, element.props, partialProps)\n    );\n    ReactUpdates.enqueueUpdate(this, callback);\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function(context) {\n    var maskedContext = null;\n    // This really should be getting the component class for the element,\n    // but we know that we're not going to need it for built-ins.\n    if (typeof this._currentElement.type === 'string') {\n      return emptyObject;\n    }\n    var contextTypes = this._currentElement.type.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function(context) {\n    var maskedContext = this._maskContext(context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.contextTypes) {\n        this._checkPropTypes(\n          Component.contextTypes,\n          maskedContext,\n          ReactPropTypeLocations.context\n        );\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function(currentContext) {\n    var inst = this._instance;\n    var childContext = inst.getChildContext && inst.getChildContext();\n    if (childContext) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof inst.constructor.childContextTypes === 'object',\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n        'use getChildContext().',\n        this.getName() || 'ReactCompositeComponent'\n      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));\n      if (\"production\" !== process.env.NODE_ENV) {\n        this._checkPropTypes(\n          inst.constructor.childContextTypes,\n          childContext,\n          ReactPropTypeLocations.childContext\n        );\n      }\n      for (var name in childContext) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          name in inst.constructor.childContextTypes,\n          '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n          this.getName() || 'ReactCompositeComponent',\n          name\n        ) : invariant(name in inst.constructor.childContextTypes));\n      }\n      return assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Processes props by setting default values for unspecified props and\n   * asserting that the props are valid. Does not mutate its argument; returns\n   * a new props object with defaults merged in.\n   *\n   * @param {object} newProps\n   * @return {object}\n   * @private\n   */\n  _processProps: function(newProps) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.propTypes) {\n        this._checkPropTypes(\n          Component.propTypes,\n          newProps,\n          ReactPropTypeLocations.prop\n        );\n      }\n    }\n    return newProps;\n  },\n\n  /**\n   * Assert that the props are valid\n   *\n   * @param {object} propTypes Map of prop name to a ReactPropType\n   * @param {object} props\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkPropTypes: function(propTypes, props, location) {\n    // TODO: Stop validating prop types here and only use the element\n    // validation.\n    var componentName = this.getName();\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error;\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            typeof propTypes[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually ' +\n            'from React.PropTypes.',\n            componentName || 'React class',\n            ReactPropTypeLocationNames[location],\n            propName\n          ) : invariant(typeof propTypes[propName] === 'function'));\n          error = propTypes[propName](props, propName, componentName, location);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error instanceof Error) {\n          // We may want to extend this logic for similar errors in\n          // React.render calls, so I'm abstracting it away into\n          // a function to minimize refactoring in the future\n          var addendum = getDeclarationErrorAddendum(this);\n\n          if (location === ReactPropTypeLocations.prop) {\n            // Preface gives us something to blacklist in warning module\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Composite propType: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          } else {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Context Types: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          }\n        }\n      }\n    }\n  },\n\n  receiveComponent: function(nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(\n      transaction,\n      prevElement,\n      nextElement,\n      prevContext,\n      nextContext\n    );\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(\n        this,\n        this._pendingElement || this._currentElement,\n        transaction,\n        this._context\n      );\n    }\n\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        ReactElementValidator.checkAndWarnForMutatedProps(\n          this._currentElement\n        );\n      }\n\n      this.updateComponent(\n        transaction,\n        this._currentElement,\n        this._currentElement,\n        this._context,\n        this._context\n      );\n    }\n  },\n\n  /**\n   * Compare two contexts, warning if they are different\n   * TODO: Remove this check when owner-context is removed\n   */\n   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {\n    ownerBasedContext = this._maskContext(ownerBasedContext);\n    parentBasedContext = this._maskContext(parentBasedContext);\n    var parentKeys = Object.keys(parentBasedContext).sort();\n    var displayName = this.getName() || 'ReactCompositeComponent';\n    for (var i = 0; i < parentKeys.length; i++) {\n      var key = parentKeys[i];\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        ownerBasedContext[key] === parentBasedContext[key],\n        'owner-based and parent-based contexts differ '  +\n        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +\n        '(see: http://fb.me/react-context-by-parent)',\n        ownerBasedContext[key],\n        parentBasedContext[key],\n        key,\n        displayName\n      ) : null);\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(\n    transaction,\n    prevParentElement,\n    nextParentElement,\n    prevUnmaskedContext,\n    nextUnmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var nextContext = inst.context;\n    var nextProps = inst.props;\n\n    // Distinguish between a props update versus a simple state update\n    if (prevParentElement !== nextParentElement) {\n      nextContext = this._processContext(nextParentElement._context);\n      nextProps = this._processProps(nextParentElement.props);\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        if (nextUnmaskedContext != null) {\n          this._warnIfContextsDiffer(\n            nextParentElement._context,\n            nextUnmaskedContext\n          );\n        }\n      }\n\n      // An update here will schedule an update but immediately set\n      // _pendingStateQueue which will ensure that any state updates gets\n      // immediately reconciled instead of waiting for the next batch.\n\n      if (inst.componentWillReceiveProps) {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n\n    var shouldUpdate =\n      this._pendingForceUpdate ||\n      !inst.shouldComponentUpdate ||\n      inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof shouldUpdate !== 'undefined',\n        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n        'boolean value. Make sure to return true or false.',\n        this.getName() || 'ReactCompositeComponent'\n      ) : null);\n    }\n\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(\n        nextParentElement,\n        nextProps,\n        nextState,\n        nextContext,\n        transaction,\n        nextUnmaskedContext\n      );\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function(props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    var nextState = assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      assign(\n        nextState,\n        typeof partial === 'function' ?\n          partial.call(inst, nextState, props, context) :\n          partial\n      );\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function(\n    nextElement,\n    nextProps,\n    nextState,\n    nextContext,\n    transaction,\n    unmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var prevProps = inst.props;\n    var prevState = inst.state;\n    var prevContext = inst.context;\n\n    if (inst.componentWillUpdate) {\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (inst.componentDidUpdate) {\n      transaction.getReactMountReady().enqueue(\n        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),\n        inst\n      );\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function(transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(\n        prevComponentInstance,\n        nextRenderedElement,\n        transaction,\n        this._processChildContext(context)\n      );\n    } else {\n      // These two IDs are actually the same! But nothing should rely on that.\n      var thisID = this._rootNodeID;\n      var prevComponentID = prevComponentInstance._rootNodeID;\n      ReactReconciler.unmountComponent(prevComponentInstance);\n\n      this._renderedComponent = this._instantiateReactComponent(\n        nextRenderedElement,\n        this._currentElement.type\n      );\n      var nextMarkup = ReactReconciler.mountComponent(\n        this._renderedComponent,\n        thisID,\n        transaction,\n        context\n      );\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(\n      prevComponentID,\n      nextMarkup\n    );\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function() {\n    var inst = this._instance;\n    var renderedComponent = inst.render();\n    if (\"production\" !== process.env.NODE_ENV) {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (typeof renderedComponent === 'undefined' &&\n          inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function() {\n    var renderedComponent;\n    var previousContext = ReactContext.current;\n    ReactContext.current = this._processChildContext(\n      this._currentElement._context\n    );\n    ReactCurrentOwner.current = this;\n    try {\n      renderedComponent =\n        this._renderValidatedComponentWithoutOwnerOrContext();\n    } finally {\n      ReactContext.current = previousContext;\n      ReactCurrentOwner.current = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      // TODO: An `isValidNode` function would probably be more appropriate\n      renderedComponent === null || renderedComponent === false ||\n      ReactElement.isValidElement(renderedComponent),\n      '%s.render(): A valid ReactComponent must be returned. You may have ' +\n        'returned undefined, an array or some other invalid object.',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false ||\n    ReactElement.isValidElement(renderedComponent)));\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function(ref, component) {\n    var inst = this.getPublicInstance();\n    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;\n    refs[ref] = component.getPublicInstance();\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function(ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function() {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return (\n      type.displayName || (constructor && constructor.displayName) ||\n      type.name || (constructor && constructor.name) ||\n      null\n    );\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by React.render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function() {\n    return this._instance;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nReactPerf.measureMethods(\n  ReactCompositeComponentMixin,\n  'ReactCompositeComponent',\n  {\n    mountComponent: 'mountComponent',\n    updateComponent: 'updateComponent',\n    _renderValidatedComponent: '_renderValidatedComponent'\n  }\n);\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactCompositeComponent.js\n ** module id = 133\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactCompositeComponent.js?");

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = __webpack_require__(62);\n\nvar assign = __webpack_require__(43);\nvar emptyFunction = __webpack_require__(117);\nvar getEventTarget = __webpack_require__(149);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: getEventTarget,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ?\n    nativeEvent.defaultPrevented :\n    nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function(Class, Interface) {\n  var Super = this;\n\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticEvent.js\n ** module id = 134\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticEvent.js?");

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule quoteAttributeValueForBrowser\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = __webpack_require__(80);\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/quoteAttributeValueForBrowser.js\n ** module id = 135\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/quoteAttributeValueForBrowser.js?");

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = __webpack_require__(175);\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar camelizeStyleName = __webpack_require__(176);\nvar dangerousStyleValue = __webpack_require__(177);\nvar hyphenateStyleName = __webpack_require__(178);\nvar memoizeStringOnly = __webpack_require__(179);\nvar warning = __webpack_require__(64);\n\nvar processStyleName = memoizeStringOnly(function(styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n\n  var warnHyphenatedStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported style property %s. Did you mean %s?',\n      name,\n      camelizeStyleName(name)\n    ) : null);\n  };\n\n  var warnBadVendoredStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported vendor-prefixed style property %s. Did you mean %s?',\n      name,\n      name.charAt(0).toUpperCase() + name.slice(1)\n    ) : null);\n  };\n\n  var warnStyleValueWithSemicolon = function(name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Style property values shouldn\\'t contain a semicolon. ' +\n      'Try \"%s: %s\" instead.',\n      name,\n      value.replace(badStyleValueWithSemicolonPattern, '')\n    ) : null);\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   */\n  var warnValidStyle = function(name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function(styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styleValue);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function(node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/CSSPropertyOperations.js\n ** module id = 136\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/CSSPropertyOperations.js?");

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChild\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = __webpack_require__(151);\nvar ReactMultiChildUpdateTypes = __webpack_require__(180);\n\nvar ReactReconciler = __webpack_require__(41);\nvar ReactChildReconciler = __webpack_require__(181);\n\n/**\n * Updating children of a component may trigger recursive updates. The depth is\n * used to batch recursive updates to render markup more efficiently.\n *\n * @type {number}\n * @private\n */\nvar updateDepth = 0;\n\n/**\n * Queue of update configuration objects.\n *\n * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.\n *\n * @type {array<object>}\n * @private\n */\nvar updateQueue = [];\n\n/**\n * Queue of markup to be rendered.\n *\n * @type {array<string>}\n * @private\n */\nvar markupQueue = [];\n\n/**\n * Enqueues markup to be rendered and inserted at a supplied index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction enqueueMarkup(parentID, markup, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n    markupIndex: markupQueue.push(markup) - 1,\n    textContent: null,\n    fromIndex: null,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues moving an existing element to another index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction enqueueMove(parentID, fromIndex, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues removing an element at an index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction enqueueRemove(parentID, fromIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: null\n  });\n}\n\n/**\n * Enqueues setting the text content.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction enqueueTextContent(parentID, textContent) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n    markupIndex: null,\n    textContent: textContent,\n    fromIndex: null,\n    toIndex: null\n  });\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue() {\n  if (updateQueue.length) {\n    ReactComponentEnvironment.processChildrenUpdates(\n      updateQueue,\n      markupQueue\n    );\n    clearQueue();\n  }\n}\n\n/**\n * Clears any enqueued updates.\n *\n * @private\n */\nfunction clearQueue() {\n  updateQueue.length = 0;\n  markupQueue.length = 0;\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function(nestedChildren, transaction, context) {\n      var children = ReactChildReconciler.instantiateChildren(\n        nestedChildren, transaction, context\n      );\n      this._renderedChildren = children;\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n          var rootID = this._rootNodeID + name;\n          var mountImage = ReactReconciler.mountComponent(\n            child,\n            rootID,\n            transaction,\n            context\n          );\n          child._mountIndex = index;\n          mountImages.push(mountImage);\n          index++;\n        }\n      }\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function(nextContent) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        var prevChildren = this._renderedChildren;\n        // Remove any rendered children.\n        ReactChildReconciler.unmountChildren(prevChildren);\n        // TODO: The setTextContent operation should be enough\n        for (var name in prevChildren) {\n          if (prevChildren.hasOwnProperty(name)) {\n            this._unmountChildByName(prevChildren[name], name);\n          }\n        }\n        // Set new text content.\n        this.setTextContent(nextContent);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function(nextNestedChildren, transaction, context) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        this._updateChildren(nextNestedChildren, transaction, context);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n\n      }\n    },\n\n    /**\n     * Improve performance by isolating this hot code path from the try/catch\n     * block in `updateChildren`.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function(nextNestedChildren, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var nextChildren = ReactChildReconciler.updateChildren(\n        prevChildren, nextNestedChildren, transaction, context\n      );\n      this._renderedChildren = nextChildren;\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var lastIndex = 0;\n      var nextIndex = 0;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          this.moveChild(prevChild, nextIndex, lastIndex);\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            this._unmountChildByName(prevChild, name);\n          }\n          // The child must be instantiated before it's mounted.\n          this._mountChildByNameAtIndex(\n            nextChild, name, nextIndex, transaction, context\n          );\n        }\n        nextIndex++;\n      }\n      // Remove children that are no longer present.\n      for (name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name) &&\n            !(nextChildren && nextChildren.hasOwnProperty(name))) {\n          this._unmountChildByName(prevChildren[name], name);\n        }\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted.\n     *\n     * @internal\n     */\n    unmountChildren: function() {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function(child, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function(child, mountImage) {\n      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function(child) {\n      enqueueRemove(this._rootNodeID, child._mountIndex);\n    },\n\n    /**\n     * Sets this text content string.\n     *\n     * @param {string} textContent Text content to set.\n     * @protected\n     */\n    setTextContent: function(textContent) {\n      enqueueTextContent(this._rootNodeID, textContent);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildByNameAtIndex: function(\n      child,\n      name,\n      index,\n      transaction,\n      context) {\n      // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n      var rootID = this._rootNodeID + name;\n      var mountImage = ReactReconciler.mountComponent(\n        child,\n        rootID,\n        transaction,\n        context\n      );\n      child._mountIndex = index;\n      this.createChild(child, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child by name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @param {string} name Name of the child in `this._renderedChildren`.\n     * @private\n     */\n    _unmountChildByName: function(child, name) {\n      this.removeChild(child);\n      child._mountIndex = null;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactMultiChild.js\n ** module id = 137\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactMultiChild.js?");

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature =\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM ||\n      capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/isEventSupported.js\n ** module id = 138\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/isEventSupported.js?");

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = __webpack_require__(62);\n\nvar assign = __webpack_require__(43);\nvar getTextContentAccessor = __webpack_require__(182);\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\nassign(FallbackCompositionState.prototype, {\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function() {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function() {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/FallbackCompositionState.js\n ** module id = 139\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/FallbackCompositionState.js?");

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticCompositionEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(134);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticCompositionEvent,\n  CompositionEventInterface\n);\n\nmodule.exports = SyntheticCompositionEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticCompositionEvent.js\n ** module id = 140\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticCompositionEvent.js?");

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticInputEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(134);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticInputEvent,\n  InputEventInterface\n);\n\nmodule.exports = SyntheticInputEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticInputEvent.js\n ** module id = 141\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticInputEvent.js?");

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  return elem && (\n    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')\n  );\n}\n\nmodule.exports = isTextInputElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/isTextInputElement.js\n ** module id = 142\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/isTextInputElement.js?");

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = __webpack_require__(160);\nvar ViewportMetrics = __webpack_require__(165);\n\nvar getEventModifierState = __webpack_require__(183);\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function(event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function(event) {\n    return event.relatedTarget || (\n      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))\n    );\n  },\n  // \"Proprietary\" Interface.\n  pageX: function(event) {\n    return 'pageX' in event ?\n      event.pageX :\n      event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function(event) {\n    return 'pageY' in event ?\n      event.pageY :\n      event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticMouseEvent.js\n ** module id = 143\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticMouseEvent.js?");

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AutoFocusMixin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar focusNode = __webpack_require__(184);\n\nvar AutoFocusMixin = {\n  componentDidMount: function() {\n    if (this.props.autoFocus) {\n      focusNode(this.getDOMNode());\n    }\n  }\n};\n\nmodule.exports = AutoFocusMixin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/AutoFocusMixin.js\n ** module id = 144\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/AutoFocusMixin.js?");

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LocalEventTrapMixin\n */\n\n'use strict';\n\nvar ReactBrowserEventEmitter = __webpack_require__(109);\n\nvar accumulateInto = __webpack_require__(173);\nvar forEachAccumulated = __webpack_require__(174);\nvar invariant = __webpack_require__(61);\n\nfunction remove(event) {\n  event.remove();\n}\n\nvar LocalEventTrapMixin = {\n  trapBubbledEvent:function(topLevelType, handlerBaseName) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));\n    // If a component renders to null or if another component fatals and causes\n    // the state of the tree to be corrupted, `node` here can be null.\n    var node = this.getDOMNode();\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      node,\n      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'\n    ) : invariant(node));\n    var listener = ReactBrowserEventEmitter.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      node\n    );\n    this._localEventListeners =\n      accumulateInto(this._localEventListeners, listener);\n  },\n\n  // trapCapturedEvent would look nearly identical. We don't implement that\n  // method because it isn't currently needed.\n\n  componentWillUnmount:function() {\n    if (this._localEventListeners) {\n      forEachAccumulated(this._localEventListeners, remove);\n    }\n  }\n};\n\nmodule.exports = LocalEventTrapMixin;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/LocalEventTrapMixin.js\n ** module id = 145\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/LocalEventTrapMixin.js?");

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar Danger = __webpack_require__(185);\nvar ReactMultiChildUpdateTypes = __webpack_require__(180);\n\nvar setTextContent = __webpack_require__(186);\nvar invariant = __webpack_require__(61);\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nfunction insertChildAt(parentNode, childNode, index) {\n  // By exploiting arrays returning `undefined` for an undefined index, we can\n  // rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. However, using `undefined` is not allowed by all\n  // browsers so we must replace it with `null`.\n  parentNode.insertBefore(\n    childNode,\n    parentNode.childNodes[index] || null\n  );\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\n\n  updateTextContent: setTextContent,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markupList List of markup strings.\n   * @internal\n   */\n  processUpdates: function(updates, markupList) {\n    var update;\n    // Mapping from parent IDs to initial child orderings.\n    var initialChildren = null;\n    // List of children that will be moved or removed.\n    var updatedChildren = null;\n\n    for (var i = 0; i < updates.length; i++) {\n      update = updates[i];\n      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||\n          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\n        var updatedIndex = update.fromIndex;\n        var updatedChild = update.parentNode.childNodes[updatedIndex];\n        var parentID = update.parentID;\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          updatedChild,\n          'processUpdates(): Unable to find child %s of element. This ' +\n          'probably means the DOM was unexpectedly mutated (e.g., by the ' +\n          'browser), usually due to forgetting a <tbody> when using tables, ' +\n          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +\n          'in an <svg> parent. Try inspecting the child nodes of the element ' +\n          'with React ID `%s`.',\n          updatedIndex,\n          parentID\n        ) : invariant(updatedChild));\n\n        initialChildren = initialChildren || {};\n        initialChildren[parentID] = initialChildren[parentID] || [];\n        initialChildren[parentID][updatedIndex] = updatedChild;\n\n        updatedChildren = updatedChildren || [];\n        updatedChildren.push(updatedChild);\n      }\n    }\n\n    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\n\n    // Remove updated children first so that `toIndex` is consistent.\n    if (updatedChildren) {\n      for (var j = 0; j < updatedChildren.length; j++) {\n        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\n      }\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertChildAt(\n            update.parentNode,\n            renderedMarkup[update.markupIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          insertChildAt(\n            update.parentNode,\n            initialChildren[update.parentID][update.fromIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(\n            update.parentNode,\n            update.textContent\n          );\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          // Already removed by the for-loop above.\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/DOMChildrenOperations.js\n ** module id = 146\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/DOMChildrenOperations.js?");

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = __webpack_require__(40);\n\nvar invariant = __webpack_require__(61);\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(input) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checkedLink == null || input.props.valueLink == null,\n    'Cannot provide a checkedLink and a valueLink. If you want to use ' +\n    'checkedLink, you probably don\\'t want to use valueLink and vice versa.'\n  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));\n}\nfunction _assertValueLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.value == null && input.props.onChange == null,\n    'Cannot provide a valueLink and a value or onChange event. If you want ' +\n    'to use value or onChange, you probably don\\'t want to use valueLink.'\n  ) : invariant(input.props.value == null && input.props.onChange == null));\n}\n\nfunction _assertCheckedLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checked == null && input.props.onChange == null,\n    'Cannot provide a checkedLink and a checked property or onChange event. ' +\n    'If you want to use checked or onChange, you probably don\\'t want to ' +\n    'use checkedLink'\n  ) : invariant(input.props.checked == null && input.props.onChange == null));\n}\n\n/**\n * @param {SyntheticEvent} e change event to handle\n */\nfunction _handleLinkedValueChange(e) {\n  /*jshint validthis:true */\n  this.props.valueLink.requestChange(e.target.value);\n}\n\n/**\n  * @param {SyntheticEvent} e change event to handle\n  */\nfunction _handleLinkedCheckChange(e) {\n  /*jshint validthis:true */\n  this.props.checkedLink.requestChange(e.target.checked);\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  Mixin: {\n    propTypes: {\n      value: function(props, propName, componentName) {\n        if (!props[propName] ||\n            hasReadOnlyValue[props.type] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `value` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultValue`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      checked: function(props, propName, componentName) {\n        if (!props[propName] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `checked` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultChecked`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      onChange: ReactPropTypes.func\n    }\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return input.props.valueLink.value;\n    }\n    return input.props.value;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function(input) {\n    if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return input.props.checkedLink.value;\n    }\n    return input.props.checked;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {function} change callback either from onChange prop or link.\n   */\n  getOnChange: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return _handleLinkedValueChange;\n    } else if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return _handleLinkedCheckChange;\n    }\n    return input.props.onChange;\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/LinkedValueUtils.js\n ** module id = 147\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/LinkedValueUtils.js?");

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\nvar emptyFunction = __webpack_require__(117);\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function(target, eventType, callback) {\n    if (!target.addEventListener) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.error(\n          'Attempted to listen to events during the capture phase on a ' +\n          'browser that does not support the capture phase. Your application ' +\n          'will not receive some events.'\n        );\n      }\n      return {\n        remove: emptyFunction\n      };\n    } else {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    }\n  },\n\n  registerDefault: function() {}\n};\n\nmodule.exports = EventListener;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/EventListener.js\n ** module id = 148\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/EventListener.js?");

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getEventTarget.js\n ** module id = 149\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getEventTarget.js?");

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\n\"use strict\";\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getUnboundedScrollPosition.js\n ** module id = 150\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getUnboundedScrollPosition.js?");

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar invariant = __webpack_require__(61);\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable environment dependent cleanup hook. (server vs.\n   * browser etc). Example: A browser system caches DOM nodes based on component\n   * ID and must remove that cache entry when this instance is unmounted.\n   */\n  unmountIDFromEnvironment: null,\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkupByID: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function(environment) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !injected,\n        'ReactCompositeComponent: injectEnvironment() can only be called once.'\n      ) : invariant(!injected));\n      ReactComponentEnvironment.unmountIDFromEnvironment =\n        environment.unmountIDFromEnvironment;\n      ReactComponentEnvironment.replaceNodeWithMarkupByID =\n        environment.replaceNodeWithMarkupByID;\n      ReactComponentEnvironment.processChildrenUpdates =\n        environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactComponentEnvironment.js\n ** module id = 151\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactComponentEnvironment.js?");

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = __webpack_require__(187);\n\nvar containsNode = __webpack_require__(112);\nvar focusNode = __webpack_require__(184);\nvar getActiveElement = __webpack_require__(154);\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function(elem) {\n    return elem && (\n      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||\n      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')\n    );\n  },\n\n  getSelectionInformation: function() {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange:\n          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?\n          ReactInputSelection.getSelection(focusedElem) :\n          null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function(priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem &&\n        isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(\n          priorFocusedElem,\n          priorSelectionRange\n        );\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function(input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || {start: 0, end: 0};\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function(input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactInputSelection.js\n ** module id = 152\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactInputSelection.js?");

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPutListenerQueue\n */\n\n'use strict';\n\nvar PooledClass = __webpack_require__(62);\nvar ReactBrowserEventEmitter = __webpack_require__(109);\n\nvar assign = __webpack_require__(43);\n\nfunction ReactPutListenerQueue() {\n  this.listenersToPut = [];\n}\n\nassign(ReactPutListenerQueue.prototype, {\n  enqueuePutListener: function(rootNodeID, propKey, propValue) {\n    this.listenersToPut.push({\n      rootNodeID: rootNodeID,\n      propKey: propKey,\n      propValue: propValue\n    });\n  },\n\n  putListeners: function() {\n    for (var i = 0; i < this.listenersToPut.length; i++) {\n      var listenerToPut = this.listenersToPut[i];\n      ReactBrowserEventEmitter.putListener(\n        listenerToPut.rootNodeID,\n        listenerToPut.propKey,\n        listenerToPut.propValue\n      );\n    }\n  },\n\n  reset: function() {\n    this.listenersToPut.length = 0;\n  },\n\n  destructor: function() {\n    this.reset();\n  }\n});\n\nPooledClass.addPoolingTo(ReactPutListenerQueue);\n\nmodule.exports = ReactPutListenerQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactPutListenerQueue.js\n ** module id = 153\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactPutListenerQueue.js?");

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getActiveElement\n * @typechecks\n */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document body is not yet defined.\n */\nfunction getActiveElement() /*?DOMElement*/ {\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getActiveElement.js\n ** module id = 154\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getActiveElement.js?");

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticClipboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(134);\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function(event) {\n    return (\n      'clipboardData' in event ?\n        event.clipboardData :\n        window.clipboardData\n    );\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticClipboardEvent.js\n ** module id = 155\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticClipboardEvent.js?");

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticFocusEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = __webpack_require__(160);\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticFocusEvent.js\n ** module id = 156\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticFocusEvent.js?");

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticKeyboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = __webpack_require__(160);\n\nvar getEventCharCode = __webpack_require__(162);\nvar getEventKey = __webpack_require__(188);\nvar getEventModifierState = __webpack_require__(183);\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function(event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function(event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function(event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticKeyboardEvent.js\n ** module id = 157\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticKeyboardEvent.js?");

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = __webpack_require__(143);\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticDragEvent.js\n ** module id = 158\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticDragEvent.js?");

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = __webpack_require__(160);\n\nvar getEventModifierState = __webpack_require__(183);\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticTouchEvent.js\n ** module id = 159\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticTouchEvent.js?");

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticUIEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = __webpack_require__(134);\n\nvar getEventTarget = __webpack_require__(149);\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function(event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target != null && target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function(event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticUIEvent.js\n ** module id = 160\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticUIEvent.js?");

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = __webpack_require__(143);\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function(event) {\n    return (\n      'deltaX' in event ? event.deltaX :\n      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n      'wheelDeltaX' in event ? -event.wheelDeltaX : 0\n    );\n  },\n  deltaY: function(event) {\n    return (\n      'deltaY' in event ? event.deltaY :\n      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n      'wheelDeltaY' in event ? -event.wheelDeltaY :\n      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n      'wheelDelta' in event ? -event.wheelDelta : 0\n    );\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/SyntheticWheelEvent.js\n ** module id = 161\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/SyntheticWheelEvent.js?");

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getEventCharCode.js\n ** module id = 162\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getEventCharCode.js?");

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginRegistry\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = __webpack_require__(61);\n\n/**\n * Injectable ordering of event plugins.\n */\nvar EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!EventPluginOrder) {\n    // Wait until an `EventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var PluginModule = namesToPlugins[pluginName];\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      pluginIndex > -1,\n      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +\n      'the plugin ordering, `%s`.',\n      pluginName\n    ) : invariant(pluginIndex > -1));\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      PluginModule.extractEvents,\n      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +\n      'method, but `%s` does not.',\n      pluginName\n    ) : invariant(PluginModule.extractEvents));\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n    var publishedEvents = PluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        publishEventForPlugin(\n          publishedEvents[eventName],\n          PluginModule,\n          eventName\n        ),\n        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',\n        eventName,\n        pluginName\n      ) : invariant(publishEventForPlugin(\n        publishedEvents[eventName],\n        PluginModule,\n        eventName\n      )));\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'event name, `%s`.',\n    eventName\n  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          PluginModule,\n          eventName\n        );\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      PluginModule,\n      eventName\n    );\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.registrationNameModules[registrationName],\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'registration name, `%s`.',\n    registrationName\n  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] =\n    PluginModule.eventTypes[eventName].dependencies;\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function(InjectedEventPluginOrder) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !EventPluginOrder,\n      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +\n      'once. You are likely trying to load more than one copy of React.'\n    ) : invariant(!EventPluginOrder));\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function(injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var PluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) ||\n          namesToPlugins[pluginName] !== PluginModule) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !namesToPlugins[pluginName],\n          'EventPluginRegistry: Cannot inject two different event plugins ' +\n          'using the same name, `%s`.',\n          pluginName\n        ) : invariant(!namesToPlugins[pluginName]));\n        namesToPlugins[pluginName] = PluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function(event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[\n        dispatchConfig.registrationName\n      ] || null;\n    }\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[\n        dispatchConfig.phasedRegistrationNames[phase]\n      ];\n      if (PluginModule) {\n        return PluginModule;\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function() {\n    EventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/EventPluginRegistry.js\n ** module id = 163\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/EventPluginRegistry.js?");

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = __webpack_require__(131);\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue();\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {object} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native environment event.\n   */\n  handleTopLevel: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events = EventPluginHub.extractEvents(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent\n    );\n\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactEventEmitterMixin.js\n ** module id = 164\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactEventEmitterMixin.js?");

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ViewportMetrics\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function(scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ViewportMetrics.js\n ** module id = 165\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ViewportMetrics.js?");

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n */\n\n/* jslint bitwise:true */\n\n'use strict';\n\nvar MOD = 65521;\n\n// This is a clean-room implementation of adler32 designed for detecting\n// if markup is not what we expect it to be. It does not need to be\n// cryptographically strong, only reasonably good at detecting if markup\n// generated on the server is different than that on the client.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  for (var i = 0; i < data.length; i++) {\n    a = (a + data.charCodeAt(i)) % MOD;\n    b = (b + a) % MOD;\n  }\n  return a | (b << 16);\n}\n\nmodule.exports = adler32;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/adler32.js\n ** module id = 166\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/adler32.js?");

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextNode\n * @typechecks\n */\n\nvar isNode = __webpack_require__(120);\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/isTextNode.js\n ** module id = 167\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/isTextNode.js?");

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactOwner\n */\n\n'use strict';\n\nvar invariant = __webpack_require__(61);\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid owner.\n   * @final\n   */\n  isValidOwner: function(object) {\n    return !!(\n      (object &&\n      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')\n    );\n  },\n\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to add a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to remove a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    // Check that `component` is still the current ref because we do not want to\n    // detach the ref if another component stole it.\n    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactOwner.js\n ** module id = 168\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactOwner.js?");

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSCore\n * @typechecks\n */\n\nvar invariant = __webpack_require__(61);\n\n/**\n * The CSSCore module specifies the API (and implements most of the methods)\n * that should be used when dealing with the display of elements (via their\n * CSS classes and visibility on screen. It is an API focused on mutating the\n * display and not reading it as no logical state should be encoded in the\n * display of elements.\n */\n\nvar CSSCore = {\n\n  /**\n   * Adds the class passed in to the element if it doesn't already have it.\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  addClass: function(element, className) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !/\\s/.test(className),\n      'CSSCore.addClass takes only a single class name. \"%s\" contains ' +\n      'multiple classes.', className\n    ) : invariant(!/\\s/.test(className)));\n\n    if (className) {\n      if (element.classList) {\n        element.classList.add(className);\n      } else if (!CSSCore.hasClass(element, className)) {\n        element.className = element.className + ' ' + className;\n      }\n    }\n    return element;\n  },\n\n  /**\n   * Removes the class passed in from the element\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  removeClass: function(element, className) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !/\\s/.test(className),\n      'CSSCore.removeClass takes only a single class name. \"%s\" contains ' +\n      'multiple classes.', className\n    ) : invariant(!/\\s/.test(className)));\n\n    if (className) {\n      if (element.classList) {\n        element.classList.remove(className);\n      } else if (CSSCore.hasClass(element, className)) {\n        element.className = element.className\n          .replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1')\n          .replace(/\\s+/g, ' ') // multiple spaces to one\n          .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n      }\n    }\n    return element;\n  },\n\n  /**\n   * Helper to add or remove a class from an element based on a condition.\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @param {*} bool condition to whether to add or remove the class\n   * @return {DOMElement} the element passed in\n   */\n  conditionClass: function(element, className, bool) {\n    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);\n  },\n\n  /**\n   * Tests whether the element has the class specified.\n   *\n   * @param {DOMNode|DOMWindow} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {boolean} true if the element has the class, false if not\n   */\n  hasClass: function(element, className) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !/\\s/.test(className),\n      'CSS.hasClass takes only a single class name.'\n    ) : invariant(!/\\s/.test(className)));\n    if (element.classList) {\n      return !!className && element.classList.contains(className);\n    }\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n\n};\n\nmodule.exports = CSSCore;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/CSSCore.js\n ** module id = 169\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/CSSCore.js?");

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionEvents\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(46);\n\n/**\n * EVENT_NAME_MAP is used to determine which event fired when a\n * transition/animation ends, based on the style property used to\n * define that event.\n */\nvar EVENT_NAME_MAP = {\n  transitionend: {\n    'transition': 'transitionend',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'MozTransition': 'mozTransitionEnd',\n    'OTransition': 'oTransitionEnd',\n    'msTransition': 'MSTransitionEnd'\n  },\n\n  animationend: {\n    'animation': 'animationend',\n    'WebkitAnimation': 'webkitAnimationEnd',\n    'MozAnimation': 'mozAnimationEnd',\n    'OAnimation': 'oAnimationEnd',\n    'msAnimation': 'MSAnimationEnd'\n  }\n};\n\nvar endEvents = [];\n\nfunction detectEvents() {\n  var testEl = document.createElement('div');\n  var style = testEl.style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are useable, and if not remove them\n  // from the map\n  if (!('AnimationEvent' in window)) {\n    delete EVENT_NAME_MAP.animationend.animation;\n  }\n\n  if (!('TransitionEvent' in window)) {\n    delete EVENT_NAME_MAP.transitionend.transition;\n  }\n\n  for (var baseEventName in EVENT_NAME_MAP) {\n    var baseEvents = EVENT_NAME_MAP[baseEventName];\n    for (var styleName in baseEvents) {\n      if (styleName in style) {\n        endEvents.push(baseEvents[styleName]);\n        break;\n      }\n    }\n  }\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  detectEvents();\n}\n\n// We use the raw {add|remove}EventListener() call because EventListener\n// does not know how to remove event listeners and we really should\n// clean up. Also, these events are not triggered in older browsers\n// so we should be A-OK here.\n\nfunction addEventListener(node, eventName, eventListener) {\n  node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener(node, eventName, eventListener) {\n  node.removeEventListener(eventName, eventListener, false);\n}\n\nvar ReactTransitionEvents = {\n  addEndEventListener: function(node, eventListener) {\n    if (endEvents.length === 0) {\n      // If CSS transitions are not supported, trigger an \"end animation\"\n      // event immediately.\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    endEvents.forEach(function(endEvent) {\n      addEventListener(node, endEvent, eventListener);\n    });\n  },\n\n  removeEndEventListener: function(node, eventListener) {\n    if (endEvents.length === 0) {\n      return;\n    }\n    endEvents.forEach(function(endEvent) {\n      removeEventListener(node, endEvent, eventListener);\n    });\n  }\n};\n\nmodule.exports = ReactTransitionEvents;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactTransitionEvents.js\n ** module id = 170\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactTransitionEvents.js?");

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule joinClasses\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Combines multiple className strings into one.\n * http://jsperf.com/joinclasses-args-vs-array\n *\n * @param {...?string} classes\n * @return {string}\n */\nfunction joinClasses(className/*, ... */) {\n  if (!className) {\n    className = '';\n  }\n  var nextClass;\n  var argLength = arguments.length;\n  if (argLength > 1) {\n    for (var ii = 1; ii < argLength; ii++) {\n      nextClass = arguments[ii];\n      if (nextClass) {\n        className = (className ? className + ' ' : '') + nextClass;\n      }\n    }\n  }\n  return className;\n}\n\nmodule.exports = joinClasses;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/joinClasses.js\n ** module id = 171\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/joinClasses.js?");

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performance\n * @typechecks\n */\n\n\"use strict\";\n\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar performance;\n\nif (ExecutionEnvironment.canUseDOM) {\n  performance =\n    window.performance ||\n    window.msPerformance ||\n    window.webkitPerformance;\n}\n\nmodule.exports = performance || {};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/performance.js\n ** module id = 172\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/performance.js?");

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulateInto\n */\n\n'use strict';\n\nvar invariant = __webpack_require__(61);\n\n/**\n *\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    next != null,\n    'accumulateInto(...): Accumulated items must not be null or undefined.'\n  ) : invariant(next != null));\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  var currentIsArray = Array.isArray(current);\n  var nextIsArray = Array.isArray(next);\n\n  if (currentIsArray && nextIsArray) {\n    current.push.apply(current, next);\n    return current;\n  }\n\n  if (currentIsArray) {\n    current.push(next);\n    return current;\n  }\n\n  if (nextIsArray) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/accumulateInto.js\n ** module id = 173\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/accumulateInto.js?");

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule forEachAccumulated\n */\n\n'use strict';\n\n/**\n * @param {array} an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\nvar forEachAccumulated = function(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n};\n\nmodule.exports = forEachAccumulated;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/forEachAccumulated.js\n ** module id = 174\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/forEachAccumulated.js?");

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSProperty\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  strokeOpacity: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundImage: true,\n    backgroundPosition: true,\n    backgroundRepeat: true,\n    backgroundColor: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/CSSProperty.js\n ** module id = 175\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/CSSProperty.js?");

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelizeStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar camelize = __webpack_require__(189);\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/camelizeStyleName.js\n ** module id = 176\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/camelizeStyleName.js?");

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule dangerousStyleValue\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = __webpack_require__(175);\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 ||\n      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/dangerousStyleValue.js\n ** module id = 177\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/dangerousStyleValue.js?");

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenateStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar hyphenate = __webpack_require__(190);\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/hyphenateStyleName.js\n ** module id = 178\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/hyphenateStyleName.js?");

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule memoizeStringOnly\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n *\n * @param {function} callback\n * @return {function}\n */\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function(string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/memoizeStringOnly.js\n ** module id = 179\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/memoizeStringOnly.js?");

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChildUpdateTypes\n */\n\n'use strict';\n\nvar keyMirror = __webpack_require__(71);\n\n/**\n * When a component's children are updated, a series of update configuration\n * objects are created in order to batch and serialize the required changes.\n *\n * Enumerates all the possible types of update configurations.\n *\n * @internal\n */\nvar ReactMultiChildUpdateTypes = keyMirror({\n  INSERT_MARKUP: null,\n  MOVE_EXISTING: null,\n  REMOVE_NODE: null,\n  TEXT_CONTENT: null\n});\n\nmodule.exports = ReactMultiChildUpdateTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactMultiChildUpdateTypes.js\n ** module id = 180\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactMultiChildUpdateTypes.js?");

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactReconciler = __webpack_require__(41);\n\nvar flattenChildren = __webpack_require__(191);\nvar instantiateReactComponent = __webpack_require__(114);\nvar shouldUpdateReactComponent = __webpack_require__(116);\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function(nestedChildNodes, transaction, context) {\n    var children = flattenChildren(nestedChildNodes);\n    for (var name in children) {\n      if (children.hasOwnProperty(name)) {\n        var child = children[name];\n        // The rendered children must be turned into instances as they're\n        // mounted.\n        var childInstance = instantiateReactComponent(child, null);\n        children[name] = childInstance;\n      }\n    }\n    return children;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextNestedChildNodes Nested child maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function(\n    prevChildren,\n    nextNestedChildNodes,\n    transaction,\n    context) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    var nextChildren = flattenChildren(nextNestedChildNodes);\n    if (!nextChildren && !prevChildren) {\n      return null;\n    }\n    var name;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      var prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(\n          prevChild, nextElement, transaction, context\n        );\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          ReactReconciler.unmountComponent(prevChild, name);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(\n          nextElement,\n          null\n        );\n        nextChildren[name] = nextChildInstance;\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) &&\n          !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        ReactReconciler.unmountComponent(prevChildren[name]);\n      }\n    }\n    return nextChildren;\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function(renderedChildren) {\n    for (var name in renderedChildren) {\n      var renderedChild = renderedChildren[name];\n      ReactReconciler.unmountComponent(renderedChild);\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactChildReconciler.js\n ** module id = 181\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactChildReconciler.js?");

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTextContentAccessor\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ?\n      'textContent' :\n      'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getTextContentAccessor.js\n ** module id = 182\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getTextContentAccessor.js?");

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  /*jshint validthis:true */\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getEventModifierState.js\n ** module id = 183\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getEventModifierState.js?");

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule focusNode\n */\n\n\"use strict\";\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch(e) {\n  }\n}\n\nmodule.exports = focusNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/focusNode.js\n ** module id = 184\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/focusNode.js?");

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n * @typechecks static-only\n */\n\n/*jslint evil: true, sub: true */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar createNodesFromMarkup = __webpack_require__(192);\nvar emptyFunction = __webpack_require__(117);\nvar getMarkupWrap = __webpack_require__(193);\nvar invariant = __webpack_require__(61);\n\nvar OPEN_TAG_NAME_EXP = /^(<[^ \\/>]+)/;\nvar RESULT_INDEX_ATTR = 'data-danger-index';\n\n/**\n * Extracts the `nodeName` from a string of markup.\n *\n * NOTE: Extracting the `nodeName` does not require a regular expression match\n * because we make assumptions about React-generated markup (i.e. there are no\n * spaces surrounding the opening tag and there is at least one attribute).\n *\n * @param {string} markup String of markup.\n * @return {string} Node name of the supplied markup.\n * @see http://jsperf.com/extract-nodename\n */\nfunction getNodeName(markup) {\n  return markup.substring(1, markup.indexOf(' '));\n}\n\nvar Danger = {\n\n  /**\n   * Renders markup into an array of nodes. The markup is expected to render\n   * into a list of root nodes. Also, the length of `resultList` and\n   * `markupList` should be the same.\n   *\n   * @param {array<string>} markupList List of markup strings to render.\n   * @return {array<DOMElement>} List of rendered nodes.\n   * @internal\n   */\n  dangerouslyRenderMarkup: function(markupList) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +\n      'thread. Make sure `window` and `document` are available globally ' +\n      'before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    var nodeName;\n    var markupByNodeName = {};\n    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\n    for (var i = 0; i < markupList.length; i++) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        markupList[i],\n        'dangerouslyRenderMarkup(...): Missing markup.'\n      ) : invariant(markupList[i]));\n      nodeName = getNodeName(markupList[i]);\n      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\n      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\n      markupByNodeName[nodeName][i] = markupList[i];\n    }\n    var resultList = [];\n    var resultListAssignmentCount = 0;\n    for (nodeName in markupByNodeName) {\n      if (!markupByNodeName.hasOwnProperty(nodeName)) {\n        continue;\n      }\n      var markupListByNodeName = markupByNodeName[nodeName];\n\n      // This for-in loop skips the holes of the sparse array. The order of\n      // iteration should follow the order of assignment, which happens to match\n      // numerical index order, but we don't rely on that.\n      var resultIndex;\n      for (resultIndex in markupListByNodeName) {\n        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\n          var markup = markupListByNodeName[resultIndex];\n\n          // Push the requested markup with an additional RESULT_INDEX_ATTR\n          // attribute.  If the markup does not start with a < character, it\n          // will be discarded below (with an appropriate console.error).\n          markupListByNodeName[resultIndex] = markup.replace(\n            OPEN_TAG_NAME_EXP,\n            // This index will be parsed back out below.\n            '$1 ' + RESULT_INDEX_ATTR + '=\"' + resultIndex + '\" '\n          );\n        }\n      }\n\n      // Render each group of markup with similar wrapping `nodeName`.\n      var renderNodes = createNodesFromMarkup(\n        markupListByNodeName.join(''),\n        emptyFunction // Do nothing special with <script> tags.\n      );\n\n      for (var j = 0; j < renderNodes.length; ++j) {\n        var renderNode = renderNodes[j];\n        if (renderNode.hasAttribute &&\n            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\n\n          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\n          renderNode.removeAttribute(RESULT_INDEX_ATTR);\n\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            !resultList.hasOwnProperty(resultIndex),\n            'Danger: Assigning to an already-occupied result index.'\n          ) : invariant(!resultList.hasOwnProperty(resultIndex)));\n\n          resultList[resultIndex] = renderNode;\n\n          // This should match resultList.length and markupList.length when\n          // we're done.\n          resultListAssignmentCount += 1;\n\n        } else if (\"production\" !== process.env.NODE_ENV) {\n          console.error(\n            'Danger: Discarding unexpected node:',\n            renderNode\n          );\n        }\n      }\n    }\n\n    // Although resultList was populated out of order, it should now be a dense\n    // array.\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultListAssignmentCount === resultList.length,\n      'Danger: Did not assign to every index of resultList.'\n    ) : invariant(resultListAssignmentCount === resultList.length));\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultList.length === markupList.length,\n      'Danger: Expected markup to render %s nodes, but rendered %s.',\n      markupList.length,\n      resultList.length\n    ) : invariant(resultList.length === markupList.length));\n\n    return resultList;\n  },\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +\n      'worker thread. Make sure `window` and `document` are available ' +\n      'globally before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    (\"production\" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      oldChild.tagName.toLowerCase() !== 'html',\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +\n      '<html> node. This is because browser quirks make this unreliable ' +\n      'and/or slow. If you want to render to the root you must use ' +\n      'server rendering. See React.renderToString().'\n    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));\n\n    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n  }\n\n};\n\nmodule.exports = Danger;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/Danger.js\n ** module id = 185\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/Danger.js?");

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setTextContent\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(46);\nvar escapeTextContentForBrowser = __webpack_require__(80);\nvar setInnerHTML = __webpack_require__(115);\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function(node, text) {\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function(node, text) {\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/setTextContent.js\n ** module id = 186\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/setTextContent.js?");

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar getNodeForCharacterOffset = __webpack_require__(194);\nvar getTextContentAccessor = __webpack_require__(182);\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(\n    selection.anchorNode,\n    selection.anchorOffset,\n    selection.focusNode,\n    selection.focusOffset\n  );\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(\n    tempRange.startContainer,\n    tempRange.startOffset,\n    tempRange.endContainer,\n    tempRange.endOffset\n  );\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ?\n            start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = (\n  ExecutionEnvironment.canUseDOM &&\n  'selection' in document &&\n  !('getSelection' in window)\n);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/ReactDOMSelection.js\n ** module id = 187\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/ReactDOMSelection.js?");

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n * @typechecks static-only\n */\n\n'use strict';\n\nvar getEventCharCode = __webpack_require__(162);\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getEventKey.js\n ** module id = 188\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getEventKey.js?");

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelize\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function(_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/camelize.js\n ** module id = 189\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/camelize.js?");

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenate\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/hyphenate.js\n ** module id = 190\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/hyphenate.js?");

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n */\n\n'use strict';\n\nvar traverseAllChildren = __webpack_require__(63);\nvar warning = __webpack_require__(64);\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = !result.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'flattenChildren(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/flattenChildren.js\n ** module id = 191\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/flattenChildren.js?");

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createNodesFromMarkup\n * @typechecks\n */\n\n/*jslint evil: true, sub: true */\n\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar createArrayFromMixed = __webpack_require__(195);\nvar getMarkupWrap = __webpack_require__(193);\nvar invariant = __webpack_require__(61);\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      handleScript,\n      'createNodesFromMarkup(...): Unexpected <script> element rendered.'\n    ) : invariant(handleScript));\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = createArrayFromMixed(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/createNodesFromMarkup.js\n ** module id = 192\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/createNodesFromMarkup.js?");

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\nvar ExecutionEnvironment = __webpack_require__(46);\n\nvar invariant = __webpack_require__(61);\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\nvar shouldWrap = {\n  // Force wrapping for SVG elements because if they get created inside a <div>,\n  // they will be initialized in the wrong namespace (and will not display).\n  'circle': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'path': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'text': true\n};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg>', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap,\n\n  'circle': svgWrap,\n  'defs': svgWrap,\n  'ellipse': svgWrap,\n  'g': svgWrap,\n  'line': svgWrap,\n  'linearGradient': svgWrap,\n  'path': svgWrap,\n  'polygon': svgWrap,\n  'polyline': svgWrap,\n  'radialGradient': svgWrap,\n  'rect': svgWrap,\n  'stop': svgWrap,\n  'text': svgWrap\n};\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\n\nmodule.exports = getMarkupWrap;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getMarkupWrap.js\n ** module id = 193\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getMarkupWrap.js?");

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/getNodeForCharacterOffset.js\n ** module id = 194\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/getNodeForCharacterOffset.js?");

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	eval("/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createArrayFromMixed\n * @typechecks\n */\n\nvar toArray = __webpack_require__(196);\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj &&\n    // arrays are objects, NodeLists are functions in Safari\n    (typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    ('length' in obj) &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    (typeof obj.nodeType != 'number') &&\n    (\n      // a real array\n      (// HTMLCollection/NodeList\n      (Array.isArray(obj) ||\n      // arguments\n      ('callee' in obj) || 'item' in obj))\n    )\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/createArrayFromMixed.js\n ** module id = 195\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/createArrayFromMixed.js?");

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\n\nvar invariant = __webpack_require__(61);\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(obj) &&\n    (typeof obj === 'object' || typeof obj === 'function'),\n    'toArray: Array-like object expected'\n  ) : invariant(!Array.isArray(obj) &&\n  (typeof obj === 'object' || typeof obj === 'function')));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof length === 'number',\n    'toArray: Object needs a length property'\n  ) : invariant(typeof length === 'number'));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    length === 0 ||\n    (length - 1) in obj,\n    'toArray: Object should have keys for indices'\n  ) : invariant(length === 0 ||\n  (length - 1) in obj));\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\nmodule.exports = toArray;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(59)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/react/lib/toArray.js\n ** module id = 196\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///../~/react/lib/toArray.js?");

/***/ }
/******/ ])